/* tslint:disable */
/* eslint-disable */
/**
 * Deepfence ThreatMapper
 * Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.
 *
 * The version of the OpenAPI document: v2.3.0
 * Contact: community@deepfence.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelGenerativeAiIntegrationVulnerabilityRequest
 */
export interface ModelGenerativeAiIntegrationVulnerabilityRequest {
    /**
     * 
     * @type {string}
     * @memberof ModelGenerativeAiIntegrationVulnerabilityRequest
     */
    cve_caused_by_package: string;
    /**
     * 
     * @type {string}
     * @memberof ModelGenerativeAiIntegrationVulnerabilityRequest
     */
    cve_id: string;
    /**
     * 
     * @type {string}
     * @memberof ModelGenerativeAiIntegrationVulnerabilityRequest
     */
    cve_type: string;
    /**
     * 
     * @type {number}
     * @memberof ModelGenerativeAiIntegrationVulnerabilityRequest
     */
    integration_id?: number;
    /**
     * 
     * @type {string}
     * @memberof ModelGenerativeAiIntegrationVulnerabilityRequest
     */
    query_type: ModelGenerativeAiIntegrationVulnerabilityRequestQueryTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ModelGenerativeAiIntegrationVulnerabilityRequest
     */
    remediation_format: ModelGenerativeAiIntegrationVulnerabilityRequestRemediationFormatEnum;
}


/**
 * @export
 */
export const ModelGenerativeAiIntegrationVulnerabilityRequestQueryTypeEnum = {
    Remediation: 'remediation'
} as const;
export type ModelGenerativeAiIntegrationVulnerabilityRequestQueryTypeEnum = typeof ModelGenerativeAiIntegrationVulnerabilityRequestQueryTypeEnum[keyof typeof ModelGenerativeAiIntegrationVulnerabilityRequestQueryTypeEnum];

/**
 * @export
 */
export const ModelGenerativeAiIntegrationVulnerabilityRequestRemediationFormatEnum = {
    All: 'all',
    Cli: 'cli',
    Pulumi: 'pulumi',
    Terraform: 'terraform'
} as const;
export type ModelGenerativeAiIntegrationVulnerabilityRequestRemediationFormatEnum = typeof ModelGenerativeAiIntegrationVulnerabilityRequestRemediationFormatEnum[keyof typeof ModelGenerativeAiIntegrationVulnerabilityRequestRemediationFormatEnum];


/**
 * Check if a given object implements the ModelGenerativeAiIntegrationVulnerabilityRequest interface.
 */
export function instanceOfModelGenerativeAiIntegrationVulnerabilityRequest(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "cve_caused_by_package" in value;
    isInstance = isInstance && "cve_id" in value;
    isInstance = isInstance && "cve_type" in value;
    isInstance = isInstance && "query_type" in value;
    isInstance = isInstance && "remediation_format" in value;

    return isInstance;
}

export function ModelGenerativeAiIntegrationVulnerabilityRequestFromJSON(json: any): ModelGenerativeAiIntegrationVulnerabilityRequest {
    return ModelGenerativeAiIntegrationVulnerabilityRequestFromJSONTyped(json, false);
}

export function ModelGenerativeAiIntegrationVulnerabilityRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelGenerativeAiIntegrationVulnerabilityRequest {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'cve_caused_by_package': json['cve_caused_by_package'],
        'cve_id': json['cve_id'],
        'cve_type': json['cve_type'],
        'integration_id': !exists(json, 'integration_id') ? undefined : json['integration_id'],
        'query_type': json['query_type'],
        'remediation_format': json['remediation_format'],
    };
}

export function ModelGenerativeAiIntegrationVulnerabilityRequestToJSON(value?: ModelGenerativeAiIntegrationVulnerabilityRequest | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'cve_caused_by_package': value.cve_caused_by_package,
        'cve_id': value.cve_id,
        'cve_type': value.cve_type,
        'integration_id': value.integration_id,
        'query_type': value.query_type,
        'remediation_format': value.remediation_format,
    };
}

