/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deepfence_server_client

import (
	"encoding/json"
)

// checks if the IngestersVulnerability type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IngestersVulnerability{}

// IngestersVulnerability struct for IngestersVulnerability
type IngestersVulnerability struct {
	Timestamp *string `json:"@timestamp,omitempty"`
	Count *int32 `json:"count,omitempty"`
	CveAttackVector *string `json:"cve_attack_vector,omitempty"`
	CveCausedByPackage *string `json:"cve_caused_by_package,omitempty"`
	CveCausedByPackagePath *string `json:"cve_caused_by_package_path,omitempty"`
	CveContainerImage *string `json:"cve_container_image,omitempty"`
	CveContainerImageId *string `json:"cve_container_image_id,omitempty"`
	CveContainerLayer *string `json:"cve_container_layer,omitempty"`
	CveContainerName *string `json:"cve_container_name,omitempty"`
	CveCvssScore *float32 `json:"cve_cvss_score,omitempty"`
	CveDescription *string `json:"cve_description,omitempty"`
	CveFixedIn *string `json:"cve_fixed_in,omitempty"`
	CveId *string `json:"cve_id,omitempty"`
	CveIdCveSeverityCveContainerImage *string `json:"cve_id_cve_severity_cve_container_image,omitempty"`
	CveLink *string `json:"cve_link,omitempty"`
	CveOverallScore *float32 `json:"cve_overall_score,omitempty"`
	CveSeverity *string `json:"cve_severity,omitempty"`
	CveType *string `json:"cve_type,omitempty"`
	DocId *string `json:"doc_id,omitempty"`
	ExploitPoc *string `json:"exploit_poc,omitempty"`
	Host *string `json:"host,omitempty"`
	HostName *string `json:"host_name,omitempty"`
	KubernetesClusterName *string `json:"kubernetes_cluster_name,omitempty"`
	Masked *string `json:"masked,omitempty"`
	NodeType *string `json:"node_type,omitempty"`
	ScanId *string `json:"scan_id,omitempty"`
	Type *string `json:"type,omitempty"`
	Urls []string `json:"urls,omitempty"`
}

// NewIngestersVulnerability instantiates a new IngestersVulnerability object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIngestersVulnerability() *IngestersVulnerability {
	this := IngestersVulnerability{}
	return &this
}

// NewIngestersVulnerabilityWithDefaults instantiates a new IngestersVulnerability object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIngestersVulnerabilityWithDefaults() *IngestersVulnerability {
	this := IngestersVulnerability{}
	return &this
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetTimestamp() string {
	if o == nil || isNil(o.Timestamp) {
		var ret string
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetTimestampOk() (*string, bool) {
	if o == nil || isNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasTimestamp() bool {
	if o != nil && !isNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given string and assigns it to the Timestamp field.
func (o *IngestersVulnerability) SetTimestamp(v string) {
	o.Timestamp = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCount() int32 {
	if o == nil || isNil(o.Count) {
		var ret int32
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCountOk() (*int32, bool) {
	if o == nil || isNil(o.Count) {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCount() bool {
	if o != nil && !isNil(o.Count) {
		return true
	}

	return false
}

// SetCount gets a reference to the given int32 and assigns it to the Count field.
func (o *IngestersVulnerability) SetCount(v int32) {
	o.Count = &v
}

// GetCveAttackVector returns the CveAttackVector field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveAttackVector() string {
	if o == nil || isNil(o.CveAttackVector) {
		var ret string
		return ret
	}
	return *o.CveAttackVector
}

// GetCveAttackVectorOk returns a tuple with the CveAttackVector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveAttackVectorOk() (*string, bool) {
	if o == nil || isNil(o.CveAttackVector) {
		return nil, false
	}
	return o.CveAttackVector, true
}

// HasCveAttackVector returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveAttackVector() bool {
	if o != nil && !isNil(o.CveAttackVector) {
		return true
	}

	return false
}

// SetCveAttackVector gets a reference to the given string and assigns it to the CveAttackVector field.
func (o *IngestersVulnerability) SetCveAttackVector(v string) {
	o.CveAttackVector = &v
}

// GetCveCausedByPackage returns the CveCausedByPackage field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveCausedByPackage() string {
	if o == nil || isNil(o.CveCausedByPackage) {
		var ret string
		return ret
	}
	return *o.CveCausedByPackage
}

// GetCveCausedByPackageOk returns a tuple with the CveCausedByPackage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveCausedByPackageOk() (*string, bool) {
	if o == nil || isNil(o.CveCausedByPackage) {
		return nil, false
	}
	return o.CveCausedByPackage, true
}

// HasCveCausedByPackage returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveCausedByPackage() bool {
	if o != nil && !isNil(o.CveCausedByPackage) {
		return true
	}

	return false
}

// SetCveCausedByPackage gets a reference to the given string and assigns it to the CveCausedByPackage field.
func (o *IngestersVulnerability) SetCveCausedByPackage(v string) {
	o.CveCausedByPackage = &v
}

// GetCveCausedByPackagePath returns the CveCausedByPackagePath field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveCausedByPackagePath() string {
	if o == nil || isNil(o.CveCausedByPackagePath) {
		var ret string
		return ret
	}
	return *o.CveCausedByPackagePath
}

// GetCveCausedByPackagePathOk returns a tuple with the CveCausedByPackagePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveCausedByPackagePathOk() (*string, bool) {
	if o == nil || isNil(o.CveCausedByPackagePath) {
		return nil, false
	}
	return o.CveCausedByPackagePath, true
}

// HasCveCausedByPackagePath returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveCausedByPackagePath() bool {
	if o != nil && !isNil(o.CveCausedByPackagePath) {
		return true
	}

	return false
}

// SetCveCausedByPackagePath gets a reference to the given string and assigns it to the CveCausedByPackagePath field.
func (o *IngestersVulnerability) SetCveCausedByPackagePath(v string) {
	o.CveCausedByPackagePath = &v
}

// GetCveContainerImage returns the CveContainerImage field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveContainerImage() string {
	if o == nil || isNil(o.CveContainerImage) {
		var ret string
		return ret
	}
	return *o.CveContainerImage
}

// GetCveContainerImageOk returns a tuple with the CveContainerImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveContainerImageOk() (*string, bool) {
	if o == nil || isNil(o.CveContainerImage) {
		return nil, false
	}
	return o.CveContainerImage, true
}

// HasCveContainerImage returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveContainerImage() bool {
	if o != nil && !isNil(o.CveContainerImage) {
		return true
	}

	return false
}

// SetCveContainerImage gets a reference to the given string and assigns it to the CveContainerImage field.
func (o *IngestersVulnerability) SetCveContainerImage(v string) {
	o.CveContainerImage = &v
}

// GetCveContainerImageId returns the CveContainerImageId field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveContainerImageId() string {
	if o == nil || isNil(o.CveContainerImageId) {
		var ret string
		return ret
	}
	return *o.CveContainerImageId
}

// GetCveContainerImageIdOk returns a tuple with the CveContainerImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveContainerImageIdOk() (*string, bool) {
	if o == nil || isNil(o.CveContainerImageId) {
		return nil, false
	}
	return o.CveContainerImageId, true
}

// HasCveContainerImageId returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveContainerImageId() bool {
	if o != nil && !isNil(o.CveContainerImageId) {
		return true
	}

	return false
}

// SetCveContainerImageId gets a reference to the given string and assigns it to the CveContainerImageId field.
func (o *IngestersVulnerability) SetCveContainerImageId(v string) {
	o.CveContainerImageId = &v
}

// GetCveContainerLayer returns the CveContainerLayer field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveContainerLayer() string {
	if o == nil || isNil(o.CveContainerLayer) {
		var ret string
		return ret
	}
	return *o.CveContainerLayer
}

// GetCveContainerLayerOk returns a tuple with the CveContainerLayer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveContainerLayerOk() (*string, bool) {
	if o == nil || isNil(o.CveContainerLayer) {
		return nil, false
	}
	return o.CveContainerLayer, true
}

// HasCveContainerLayer returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveContainerLayer() bool {
	if o != nil && !isNil(o.CveContainerLayer) {
		return true
	}

	return false
}

// SetCveContainerLayer gets a reference to the given string and assigns it to the CveContainerLayer field.
func (o *IngestersVulnerability) SetCveContainerLayer(v string) {
	o.CveContainerLayer = &v
}

// GetCveContainerName returns the CveContainerName field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveContainerName() string {
	if o == nil || isNil(o.CveContainerName) {
		var ret string
		return ret
	}
	return *o.CveContainerName
}

// GetCveContainerNameOk returns a tuple with the CveContainerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveContainerNameOk() (*string, bool) {
	if o == nil || isNil(o.CveContainerName) {
		return nil, false
	}
	return o.CveContainerName, true
}

// HasCveContainerName returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveContainerName() bool {
	if o != nil && !isNil(o.CveContainerName) {
		return true
	}

	return false
}

// SetCveContainerName gets a reference to the given string and assigns it to the CveContainerName field.
func (o *IngestersVulnerability) SetCveContainerName(v string) {
	o.CveContainerName = &v
}

// GetCveCvssScore returns the CveCvssScore field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveCvssScore() float32 {
	if o == nil || isNil(o.CveCvssScore) {
		var ret float32
		return ret
	}
	return *o.CveCvssScore
}

// GetCveCvssScoreOk returns a tuple with the CveCvssScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveCvssScoreOk() (*float32, bool) {
	if o == nil || isNil(o.CveCvssScore) {
		return nil, false
	}
	return o.CveCvssScore, true
}

// HasCveCvssScore returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveCvssScore() bool {
	if o != nil && !isNil(o.CveCvssScore) {
		return true
	}

	return false
}

// SetCveCvssScore gets a reference to the given float32 and assigns it to the CveCvssScore field.
func (o *IngestersVulnerability) SetCveCvssScore(v float32) {
	o.CveCvssScore = &v
}

// GetCveDescription returns the CveDescription field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveDescription() string {
	if o == nil || isNil(o.CveDescription) {
		var ret string
		return ret
	}
	return *o.CveDescription
}

// GetCveDescriptionOk returns a tuple with the CveDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.CveDescription) {
		return nil, false
	}
	return o.CveDescription, true
}

// HasCveDescription returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveDescription() bool {
	if o != nil && !isNil(o.CveDescription) {
		return true
	}

	return false
}

// SetCveDescription gets a reference to the given string and assigns it to the CveDescription field.
func (o *IngestersVulnerability) SetCveDescription(v string) {
	o.CveDescription = &v
}

// GetCveFixedIn returns the CveFixedIn field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveFixedIn() string {
	if o == nil || isNil(o.CveFixedIn) {
		var ret string
		return ret
	}
	return *o.CveFixedIn
}

// GetCveFixedInOk returns a tuple with the CveFixedIn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveFixedInOk() (*string, bool) {
	if o == nil || isNil(o.CveFixedIn) {
		return nil, false
	}
	return o.CveFixedIn, true
}

// HasCveFixedIn returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveFixedIn() bool {
	if o != nil && !isNil(o.CveFixedIn) {
		return true
	}

	return false
}

// SetCveFixedIn gets a reference to the given string and assigns it to the CveFixedIn field.
func (o *IngestersVulnerability) SetCveFixedIn(v string) {
	o.CveFixedIn = &v
}

// GetCveId returns the CveId field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveId() string {
	if o == nil || isNil(o.CveId) {
		var ret string
		return ret
	}
	return *o.CveId
}

// GetCveIdOk returns a tuple with the CveId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveIdOk() (*string, bool) {
	if o == nil || isNil(o.CveId) {
		return nil, false
	}
	return o.CveId, true
}

// HasCveId returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveId() bool {
	if o != nil && !isNil(o.CveId) {
		return true
	}

	return false
}

// SetCveId gets a reference to the given string and assigns it to the CveId field.
func (o *IngestersVulnerability) SetCveId(v string) {
	o.CveId = &v
}

// GetCveIdCveSeverityCveContainerImage returns the CveIdCveSeverityCveContainerImage field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveIdCveSeverityCveContainerImage() string {
	if o == nil || isNil(o.CveIdCveSeverityCveContainerImage) {
		var ret string
		return ret
	}
	return *o.CveIdCveSeverityCveContainerImage
}

// GetCveIdCveSeverityCveContainerImageOk returns a tuple with the CveIdCveSeverityCveContainerImage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveIdCveSeverityCveContainerImageOk() (*string, bool) {
	if o == nil || isNil(o.CveIdCveSeverityCveContainerImage) {
		return nil, false
	}
	return o.CveIdCveSeverityCveContainerImage, true
}

// HasCveIdCveSeverityCveContainerImage returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveIdCveSeverityCveContainerImage() bool {
	if o != nil && !isNil(o.CveIdCveSeverityCveContainerImage) {
		return true
	}

	return false
}

// SetCveIdCveSeverityCveContainerImage gets a reference to the given string and assigns it to the CveIdCveSeverityCveContainerImage field.
func (o *IngestersVulnerability) SetCveIdCveSeverityCveContainerImage(v string) {
	o.CveIdCveSeverityCveContainerImage = &v
}

// GetCveLink returns the CveLink field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveLink() string {
	if o == nil || isNil(o.CveLink) {
		var ret string
		return ret
	}
	return *o.CveLink
}

// GetCveLinkOk returns a tuple with the CveLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveLinkOk() (*string, bool) {
	if o == nil || isNil(o.CveLink) {
		return nil, false
	}
	return o.CveLink, true
}

// HasCveLink returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveLink() bool {
	if o != nil && !isNil(o.CveLink) {
		return true
	}

	return false
}

// SetCveLink gets a reference to the given string and assigns it to the CveLink field.
func (o *IngestersVulnerability) SetCveLink(v string) {
	o.CveLink = &v
}

// GetCveOverallScore returns the CveOverallScore field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveOverallScore() float32 {
	if o == nil || isNil(o.CveOverallScore) {
		var ret float32
		return ret
	}
	return *o.CveOverallScore
}

// GetCveOverallScoreOk returns a tuple with the CveOverallScore field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveOverallScoreOk() (*float32, bool) {
	if o == nil || isNil(o.CveOverallScore) {
		return nil, false
	}
	return o.CveOverallScore, true
}

// HasCveOverallScore returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveOverallScore() bool {
	if o != nil && !isNil(o.CveOverallScore) {
		return true
	}

	return false
}

// SetCveOverallScore gets a reference to the given float32 and assigns it to the CveOverallScore field.
func (o *IngestersVulnerability) SetCveOverallScore(v float32) {
	o.CveOverallScore = &v
}

// GetCveSeverity returns the CveSeverity field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveSeverity() string {
	if o == nil || isNil(o.CveSeverity) {
		var ret string
		return ret
	}
	return *o.CveSeverity
}

// GetCveSeverityOk returns a tuple with the CveSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveSeverityOk() (*string, bool) {
	if o == nil || isNil(o.CveSeverity) {
		return nil, false
	}
	return o.CveSeverity, true
}

// HasCveSeverity returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveSeverity() bool {
	if o != nil && !isNil(o.CveSeverity) {
		return true
	}

	return false
}

// SetCveSeverity gets a reference to the given string and assigns it to the CveSeverity field.
func (o *IngestersVulnerability) SetCveSeverity(v string) {
	o.CveSeverity = &v
}

// GetCveType returns the CveType field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetCveType() string {
	if o == nil || isNil(o.CveType) {
		var ret string
		return ret
	}
	return *o.CveType
}

// GetCveTypeOk returns a tuple with the CveType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetCveTypeOk() (*string, bool) {
	if o == nil || isNil(o.CveType) {
		return nil, false
	}
	return o.CveType, true
}

// HasCveType returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasCveType() bool {
	if o != nil && !isNil(o.CveType) {
		return true
	}

	return false
}

// SetCveType gets a reference to the given string and assigns it to the CveType field.
func (o *IngestersVulnerability) SetCveType(v string) {
	o.CveType = &v
}

// GetDocId returns the DocId field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetDocId() string {
	if o == nil || isNil(o.DocId) {
		var ret string
		return ret
	}
	return *o.DocId
}

// GetDocIdOk returns a tuple with the DocId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetDocIdOk() (*string, bool) {
	if o == nil || isNil(o.DocId) {
		return nil, false
	}
	return o.DocId, true
}

// HasDocId returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasDocId() bool {
	if o != nil && !isNil(o.DocId) {
		return true
	}

	return false
}

// SetDocId gets a reference to the given string and assigns it to the DocId field.
func (o *IngestersVulnerability) SetDocId(v string) {
	o.DocId = &v
}

// GetExploitPoc returns the ExploitPoc field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetExploitPoc() string {
	if o == nil || isNil(o.ExploitPoc) {
		var ret string
		return ret
	}
	return *o.ExploitPoc
}

// GetExploitPocOk returns a tuple with the ExploitPoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetExploitPocOk() (*string, bool) {
	if o == nil || isNil(o.ExploitPoc) {
		return nil, false
	}
	return o.ExploitPoc, true
}

// HasExploitPoc returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasExploitPoc() bool {
	if o != nil && !isNil(o.ExploitPoc) {
		return true
	}

	return false
}

// SetExploitPoc gets a reference to the given string and assigns it to the ExploitPoc field.
func (o *IngestersVulnerability) SetExploitPoc(v string) {
	o.ExploitPoc = &v
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetHost() string {
	if o == nil || isNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetHostOk() (*string, bool) {
	if o == nil || isNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasHost() bool {
	if o != nil && !isNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *IngestersVulnerability) SetHost(v string) {
	o.Host = &v
}

// GetHostName returns the HostName field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetHostName() string {
	if o == nil || isNil(o.HostName) {
		var ret string
		return ret
	}
	return *o.HostName
}

// GetHostNameOk returns a tuple with the HostName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetHostNameOk() (*string, bool) {
	if o == nil || isNil(o.HostName) {
		return nil, false
	}
	return o.HostName, true
}

// HasHostName returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasHostName() bool {
	if o != nil && !isNil(o.HostName) {
		return true
	}

	return false
}

// SetHostName gets a reference to the given string and assigns it to the HostName field.
func (o *IngestersVulnerability) SetHostName(v string) {
	o.HostName = &v
}

// GetKubernetesClusterName returns the KubernetesClusterName field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetKubernetesClusterName() string {
	if o == nil || isNil(o.KubernetesClusterName) {
		var ret string
		return ret
	}
	return *o.KubernetesClusterName
}

// GetKubernetesClusterNameOk returns a tuple with the KubernetesClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetKubernetesClusterNameOk() (*string, bool) {
	if o == nil || isNil(o.KubernetesClusterName) {
		return nil, false
	}
	return o.KubernetesClusterName, true
}

// HasKubernetesClusterName returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasKubernetesClusterName() bool {
	if o != nil && !isNil(o.KubernetesClusterName) {
		return true
	}

	return false
}

// SetKubernetesClusterName gets a reference to the given string and assigns it to the KubernetesClusterName field.
func (o *IngestersVulnerability) SetKubernetesClusterName(v string) {
	o.KubernetesClusterName = &v
}

// GetMasked returns the Masked field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetMasked() string {
	if o == nil || isNil(o.Masked) {
		var ret string
		return ret
	}
	return *o.Masked
}

// GetMaskedOk returns a tuple with the Masked field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetMaskedOk() (*string, bool) {
	if o == nil || isNil(o.Masked) {
		return nil, false
	}
	return o.Masked, true
}

// HasMasked returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasMasked() bool {
	if o != nil && !isNil(o.Masked) {
		return true
	}

	return false
}

// SetMasked gets a reference to the given string and assigns it to the Masked field.
func (o *IngestersVulnerability) SetMasked(v string) {
	o.Masked = &v
}

// GetNodeType returns the NodeType field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetNodeType() string {
	if o == nil || isNil(o.NodeType) {
		var ret string
		return ret
	}
	return *o.NodeType
}

// GetNodeTypeOk returns a tuple with the NodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetNodeTypeOk() (*string, bool) {
	if o == nil || isNil(o.NodeType) {
		return nil, false
	}
	return o.NodeType, true
}

// HasNodeType returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasNodeType() bool {
	if o != nil && !isNil(o.NodeType) {
		return true
	}

	return false
}

// SetNodeType gets a reference to the given string and assigns it to the NodeType field.
func (o *IngestersVulnerability) SetNodeType(v string) {
	o.NodeType = &v
}

// GetScanId returns the ScanId field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetScanId() string {
	if o == nil || isNil(o.ScanId) {
		var ret string
		return ret
	}
	return *o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetScanIdOk() (*string, bool) {
	if o == nil || isNil(o.ScanId) {
		return nil, false
	}
	return o.ScanId, true
}

// HasScanId returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasScanId() bool {
	if o != nil && !isNil(o.ScanId) {
		return true
	}

	return false
}

// SetScanId gets a reference to the given string and assigns it to the ScanId field.
func (o *IngestersVulnerability) SetScanId(v string) {
	o.ScanId = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *IngestersVulnerability) GetType() string {
	if o == nil || isNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IngestersVulnerability) GetTypeOk() (*string, bool) {
	if o == nil || isNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasType() bool {
	if o != nil && !isNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *IngestersVulnerability) SetType(v string) {
	o.Type = &v
}

// GetUrls returns the Urls field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *IngestersVulnerability) GetUrls() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Urls
}

// GetUrlsOk returns a tuple with the Urls field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *IngestersVulnerability) GetUrlsOk() ([]string, bool) {
	if o == nil || isNil(o.Urls) {
		return nil, false
	}
	return o.Urls, true
}

// HasUrls returns a boolean if a field has been set.
func (o *IngestersVulnerability) HasUrls() bool {
	if o != nil && isNil(o.Urls) {
		return true
	}

	return false
}

// SetUrls gets a reference to the given []string and assigns it to the Urls field.
func (o *IngestersVulnerability) SetUrls(v []string) {
	o.Urls = v
}

func (o IngestersVulnerability) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IngestersVulnerability) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Timestamp) {
		toSerialize["@timestamp"] = o.Timestamp
	}
	if !isNil(o.Count) {
		toSerialize["count"] = o.Count
	}
	if !isNil(o.CveAttackVector) {
		toSerialize["cve_attack_vector"] = o.CveAttackVector
	}
	if !isNil(o.CveCausedByPackage) {
		toSerialize["cve_caused_by_package"] = o.CveCausedByPackage
	}
	if !isNil(o.CveCausedByPackagePath) {
		toSerialize["cve_caused_by_package_path"] = o.CveCausedByPackagePath
	}
	if !isNil(o.CveContainerImage) {
		toSerialize["cve_container_image"] = o.CveContainerImage
	}
	if !isNil(o.CveContainerImageId) {
		toSerialize["cve_container_image_id"] = o.CveContainerImageId
	}
	if !isNil(o.CveContainerLayer) {
		toSerialize["cve_container_layer"] = o.CveContainerLayer
	}
	if !isNil(o.CveContainerName) {
		toSerialize["cve_container_name"] = o.CveContainerName
	}
	if !isNil(o.CveCvssScore) {
		toSerialize["cve_cvss_score"] = o.CveCvssScore
	}
	if !isNil(o.CveDescription) {
		toSerialize["cve_description"] = o.CveDescription
	}
	if !isNil(o.CveFixedIn) {
		toSerialize["cve_fixed_in"] = o.CveFixedIn
	}
	if !isNil(o.CveId) {
		toSerialize["cve_id"] = o.CveId
	}
	if !isNil(o.CveIdCveSeverityCveContainerImage) {
		toSerialize["cve_id_cve_severity_cve_container_image"] = o.CveIdCveSeverityCveContainerImage
	}
	if !isNil(o.CveLink) {
		toSerialize["cve_link"] = o.CveLink
	}
	if !isNil(o.CveOverallScore) {
		toSerialize["cve_overall_score"] = o.CveOverallScore
	}
	if !isNil(o.CveSeverity) {
		toSerialize["cve_severity"] = o.CveSeverity
	}
	if !isNil(o.CveType) {
		toSerialize["cve_type"] = o.CveType
	}
	if !isNil(o.DocId) {
		toSerialize["doc_id"] = o.DocId
	}
	if !isNil(o.ExploitPoc) {
		toSerialize["exploit_poc"] = o.ExploitPoc
	}
	if !isNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !isNil(o.HostName) {
		toSerialize["host_name"] = o.HostName
	}
	if !isNil(o.KubernetesClusterName) {
		toSerialize["kubernetes_cluster_name"] = o.KubernetesClusterName
	}
	if !isNil(o.Masked) {
		toSerialize["masked"] = o.Masked
	}
	if !isNil(o.NodeType) {
		toSerialize["node_type"] = o.NodeType
	}
	if !isNil(o.ScanId) {
		toSerialize["scan_id"] = o.ScanId
	}
	if !isNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if o.Urls != nil {
		toSerialize["urls"] = o.Urls
	}
	return toSerialize, nil
}

type NullableIngestersVulnerability struct {
	value *IngestersVulnerability
	isSet bool
}

func (v NullableIngestersVulnerability) Get() *IngestersVulnerability {
	return v.value
}

func (v *NullableIngestersVulnerability) Set(val *IngestersVulnerability) {
	v.value = val
	v.isSet = true
}

func (v NullableIngestersVulnerability) IsSet() bool {
	return v.isSet
}

func (v *NullableIngestersVulnerability) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIngestersVulnerability(val *IngestersVulnerability) *NullableIngestersVulnerability {
	return &NullableIngestersVulnerability{value: val, isSet: true}
}

func (v NullableIngestersVulnerability) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIngestersVulnerability) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


