/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deepfence_server_client

import (
	"encoding/json"
)

// checks if the ReportersNodeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportersNodeInfo{}

// ReportersNodeInfo struct for ReportersNodeInfo
type ReportersNodeInfo struct {
	ComplianceCount int32 `json:"compliance_count"`
	ComplianceScanId string `json:"compliance_scan_id"`
	ImageName string `json:"image_name"`
	Name string `json:"name"`
	NodeId string `json:"node_id"`
	SecretsCount int32 `json:"secrets_count"`
	SecretsScanId string `json:"secrets_scan_id"`
	VulnerabilityCount int32 `json:"vulnerability_count"`
	VulnerabilityScanId string `json:"vulnerability_scan_id"`
}

// NewReportersNodeInfo instantiates a new ReportersNodeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportersNodeInfo(complianceCount int32, complianceScanId string, imageName string, name string, nodeId string, secretsCount int32, secretsScanId string, vulnerabilityCount int32, vulnerabilityScanId string) *ReportersNodeInfo {
	this := ReportersNodeInfo{}
	this.ComplianceCount = complianceCount
	this.ComplianceScanId = complianceScanId
	this.ImageName = imageName
	this.Name = name
	this.NodeId = nodeId
	this.SecretsCount = secretsCount
	this.SecretsScanId = secretsScanId
	this.VulnerabilityCount = vulnerabilityCount
	this.VulnerabilityScanId = vulnerabilityScanId
	return &this
}

// NewReportersNodeInfoWithDefaults instantiates a new ReportersNodeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportersNodeInfoWithDefaults() *ReportersNodeInfo {
	this := ReportersNodeInfo{}
	return &this
}

// GetComplianceCount returns the ComplianceCount field value
func (o *ReportersNodeInfo) GetComplianceCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ComplianceCount
}

// GetComplianceCountOk returns a tuple with the ComplianceCount field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetComplianceCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComplianceCount, true
}

// SetComplianceCount sets field value
func (o *ReportersNodeInfo) SetComplianceCount(v int32) {
	o.ComplianceCount = v
}

// GetComplianceScanId returns the ComplianceScanId field value
func (o *ReportersNodeInfo) GetComplianceScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ComplianceScanId
}

// GetComplianceScanIdOk returns a tuple with the ComplianceScanId field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetComplianceScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ComplianceScanId, true
}

// SetComplianceScanId sets field value
func (o *ReportersNodeInfo) SetComplianceScanId(v string) {
	o.ComplianceScanId = v
}

// GetImageName returns the ImageName field value
func (o *ReportersNodeInfo) GetImageName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetImageNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageName, true
}

// SetImageName sets field value
func (o *ReportersNodeInfo) SetImageName(v string) {
	o.ImageName = v
}

// GetName returns the Name field value
func (o *ReportersNodeInfo) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ReportersNodeInfo) SetName(v string) {
	o.Name = v
}

// GetNodeId returns the NodeId field value
func (o *ReportersNodeInfo) GetNodeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NodeId
}

// GetNodeIdOk returns a tuple with the NodeId field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetNodeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NodeId, true
}

// SetNodeId sets field value
func (o *ReportersNodeInfo) SetNodeId(v string) {
	o.NodeId = v
}

// GetSecretsCount returns the SecretsCount field value
func (o *ReportersNodeInfo) GetSecretsCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SecretsCount
}

// GetSecretsCountOk returns a tuple with the SecretsCount field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetSecretsCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretsCount, true
}

// SetSecretsCount sets field value
func (o *ReportersNodeInfo) SetSecretsCount(v int32) {
	o.SecretsCount = v
}

// GetSecretsScanId returns the SecretsScanId field value
func (o *ReportersNodeInfo) GetSecretsScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretsScanId
}

// GetSecretsScanIdOk returns a tuple with the SecretsScanId field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetSecretsScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretsScanId, true
}

// SetSecretsScanId sets field value
func (o *ReportersNodeInfo) SetSecretsScanId(v string) {
	o.SecretsScanId = v
}

// GetVulnerabilityCount returns the VulnerabilityCount field value
func (o *ReportersNodeInfo) GetVulnerabilityCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VulnerabilityCount
}

// GetVulnerabilityCountOk returns a tuple with the VulnerabilityCount field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetVulnerabilityCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VulnerabilityCount, true
}

// SetVulnerabilityCount sets field value
func (o *ReportersNodeInfo) SetVulnerabilityCount(v int32) {
	o.VulnerabilityCount = v
}

// GetVulnerabilityScanId returns the VulnerabilityScanId field value
func (o *ReportersNodeInfo) GetVulnerabilityScanId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.VulnerabilityScanId
}

// GetVulnerabilityScanIdOk returns a tuple with the VulnerabilityScanId field value
// and a boolean to check if the value has been set.
func (o *ReportersNodeInfo) GetVulnerabilityScanIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VulnerabilityScanId, true
}

// SetVulnerabilityScanId sets field value
func (o *ReportersNodeInfo) SetVulnerabilityScanId(v string) {
	o.VulnerabilityScanId = v
}

func (o ReportersNodeInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportersNodeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["compliance_count"] = o.ComplianceCount
	toSerialize["compliance_scan_id"] = o.ComplianceScanId
	toSerialize["image_name"] = o.ImageName
	toSerialize["name"] = o.Name
	toSerialize["node_id"] = o.NodeId
	toSerialize["secrets_count"] = o.SecretsCount
	toSerialize["secrets_scan_id"] = o.SecretsScanId
	toSerialize["vulnerability_count"] = o.VulnerabilityCount
	toSerialize["vulnerability_scan_id"] = o.VulnerabilityScanId
	return toSerialize, nil
}

type NullableReportersNodeInfo struct {
	value *ReportersNodeInfo
	isSet bool
}

func (v NullableReportersNodeInfo) Get() *ReportersNodeInfo {
	return v.value
}

func (v *NullableReportersNodeInfo) Set(val *ReportersNodeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableReportersNodeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableReportersNodeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportersNodeInfo(val *ReportersNodeInfo) *NullableReportersNodeInfo {
	return &NullableReportersNodeInfo{value: val, isSet: true}
}

func (v NullableReportersNodeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportersNodeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


