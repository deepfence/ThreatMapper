/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deepfence_server_client

import (
	"encoding/json"
)

// checks if the ReportersConnectionSummary type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportersConnectionSummary{}

// ReportersConnectionSummary struct for ReportersConnectionSummary
type ReportersConnectionSummary struct {
	Source string `json:"source"`
	Target string `json:"target"`
}

// NewReportersConnectionSummary instantiates a new ReportersConnectionSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportersConnectionSummary(source string, target string) *ReportersConnectionSummary {
	this := ReportersConnectionSummary{}
	this.Source = source
	this.Target = target
	return &this
}

// NewReportersConnectionSummaryWithDefaults instantiates a new ReportersConnectionSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportersConnectionSummaryWithDefaults() *ReportersConnectionSummary {
	this := ReportersConnectionSummary{}
	return &this
}

// GetSource returns the Source field value
func (o *ReportersConnectionSummary) GetSource() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Source
}

// GetSourceOk returns a tuple with the Source field value
// and a boolean to check if the value has been set.
func (o *ReportersConnectionSummary) GetSourceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Source, true
}

// SetSource sets field value
func (o *ReportersConnectionSummary) SetSource(v string) {
	o.Source = v
}

// GetTarget returns the Target field value
func (o *ReportersConnectionSummary) GetTarget() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Target
}

// GetTargetOk returns a tuple with the Target field value
// and a boolean to check if the value has been set.
func (o *ReportersConnectionSummary) GetTargetOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Target, true
}

// SetTarget sets field value
func (o *ReportersConnectionSummary) SetTarget(v string) {
	o.Target = v
}

func (o ReportersConnectionSummary) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportersConnectionSummary) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["source"] = o.Source
	toSerialize["target"] = o.Target
	return toSerialize, nil
}

type NullableReportersConnectionSummary struct {
	value *ReportersConnectionSummary
	isSet bool
}

func (v NullableReportersConnectionSummary) Get() *ReportersConnectionSummary {
	return v.value
}

func (v *NullableReportersConnectionSummary) Set(val *ReportersConnectionSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableReportersConnectionSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableReportersConnectionSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportersConnectionSummary(val *ReportersConnectionSummary) *NullableReportersConnectionSummary {
	return &NullableReportersConnectionSummary{value: val, isSet: true}
}

func (v NullableReportersConnectionSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportersConnectionSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


