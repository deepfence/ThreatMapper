/*
Deepfence ThreatMapper

Deepfence Runtime API provides programmatic control over Deepfence microservice securing your container, kubernetes and cloud deployments. The API abstracts away underlying infrastructure details like cloud provider,  container distros, container orchestrator and type of deployment. This is one uniform API to manage and control security alerts, policies and response to alerts for microservices running anywhere i.e. managed pure greenfield container deployments or a mix of containers, VMs and serverless paradigms like AWS Fargate.

API version: 2.0.0
Contact: community@deepfence.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package deepfence_server_client

import (
	"encoding/json"
)

// checks if the ModelApiAuthRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelApiAuthRequest{}

// ModelApiAuthRequest struct for ModelApiAuthRequest
type ModelApiAuthRequest struct {
	ApiToken string `json:"api_token"`
}

// NewModelApiAuthRequest instantiates a new ModelApiAuthRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelApiAuthRequest(apiToken string) *ModelApiAuthRequest {
	this := ModelApiAuthRequest{}
	this.ApiToken = apiToken
	return &this
}

// NewModelApiAuthRequestWithDefaults instantiates a new ModelApiAuthRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelApiAuthRequestWithDefaults() *ModelApiAuthRequest {
	this := ModelApiAuthRequest{}
	return &this
}

// GetApiToken returns the ApiToken field value
func (o *ModelApiAuthRequest) GetApiToken() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApiToken
}

// GetApiTokenOk returns a tuple with the ApiToken field value
// and a boolean to check if the value has been set.
func (o *ModelApiAuthRequest) GetApiTokenOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApiToken, true
}

// SetApiToken sets field value
func (o *ModelApiAuthRequest) SetApiToken(v string) {
	o.ApiToken = v
}

func (o ModelApiAuthRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelApiAuthRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["api_token"] = o.ApiToken
	return toSerialize, nil
}

type NullableModelApiAuthRequest struct {
	value *ModelApiAuthRequest
	isSet bool
}

func (v NullableModelApiAuthRequest) Get() *ModelApiAuthRequest {
	return v.value
}

func (v *NullableModelApiAuthRequest) Set(val *ModelApiAuthRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableModelApiAuthRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableModelApiAuthRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelApiAuthRequest(val *ModelApiAuthRequest) *NullableModelApiAuthRequest {
	return &NullableModelApiAuthRequest{value: val, isSet: true}
}

func (v NullableModelApiAuthRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelApiAuthRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


