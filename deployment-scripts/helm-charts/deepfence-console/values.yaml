# Default values for deepfence-console.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Set docker hub username and password provided by Deepfence
registry:
  name: "https://index.docker.io/v1/"
  # Set docker hub username and password provided by Deepfence
  # This will create a secret called "deepfence-docker-secret"
  username: ""
  password: ""
  # If kubernetes secret is already defined externally, change following value to false
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  createRegistrySecret: "true"

# Docker image settings. Can be overridden by the per-component specific maps,
# e.g by changing api.image.repository, api.image.tag, etc.
image:
  repository: deepfenceio
  tag: 1.3.1
  name: "" # Expected to be overridden by the per-component specific maps.
  fullname: # can be used instead of repository, tag, & name
  pullPolicy: Always
  pullSecretName: deepfence-docker-secret

fetcher:
  # Override image settings just for the fetcher pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_fetcher_ce
    fullname:
    pullPolicy:
    pullSecretName:

topology:
  # Override image settings just for the topology pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_discovery_ce
    fullname:
    pullPolicy:
    pullSecretName:

discovery:
  # Override image settings just for the discovery pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_discovery_ce
    fullname:
    pullPolicy:
    pullSecretName:

api:
  # Override image settings just for the API pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_api_ce
    fullname:
    pullPolicy:
    pullSecretName:

celery:
  # Override image settings just for the celery API pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_api_ce
    fullname:
    pullPolicy:
    pullSecretName:

backend:
  # Override image settings just for the backend API pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_api_ce
    fullname:
    pullPolicy:
    pullSecretName:

ui:
  # Override image settings just for the web UI pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_ui_ce
    fullname:
    pullPolicy:
    pullSecretName:

diagnosis:
  nodeMetrics: "true"

  # Override image settings just for the diagnosis pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_diagnosis_ce
    fullname:
    pullPolicy:
    pullSecretName:

secretScanner:
  # Override image settings just for the secret-scanner pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_secret_scanner_ce
    fullname:
    pullPolicy:
    pullSecretName:

router:
  uiServiceName: "deepfence-ui"

  # Override image settings just for the router pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_router_ce
    fullname:
    pullPolicy:
    pullSecretName:

internalRouter:
  # Override image settings just for the internal router pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_router_ce
    fullname:
    pullPolicy:
    pullSecretName:

vulnerabilityMapper:
  # Override image settings just for the vulnerability mapper pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_vulnerability_mapper_ce
    fullname:
    pullPolicy:
    pullSecretName:

packageScanner:
  # Override image settings just for the package scanner pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_package_scanner_ce
    fullname:
    pullPolicy:
    pullSecretName:

elasticsearch:
  # Override image settings just for the Elasticsearch pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_elastic_ce
    fullname:
    pullPolicy:
    pullSecretName:

redis:
  # Override image settings just for the Redis pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag:
    name: deepfence_redis_ce
    fullname:
    pullPolicy: IfNotPresent
    pullSecretName:

postgresql:
  # If config update needed for postgres instance
  #extendedConf: |-
  #  huge_pages = off
  
  # Override image settings just for the PostgreSQL pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag: 12.8.0-debian-10-r71
    name: postgresql-repmgr
    fullname:
    pullPolicy: IfNotPresent
    pullSecretName:

postgresqlPgpool:
  # Override image settings just for the PostgreSQL PG-pool pods.
  # All values here default to the root image.* fields.
  image:
    repository:
    tag: 4.2.5-debian-10-r37
    name: pgpool
    fullname:
    pullPolicy: IfNotPresent
    pullSecretName:

# Use custom ssl certificate for Deepfence UI
# Copy *.key and *.crt file to current directory (same directory as values.yaml file)
# Supported file extensions are .crt and .key (.pem, .cert not supported)
# tls:
#  certFile: "server.crt"
#  keyFile: "server.key"
tls:
  certFile: ""
  keyFile: ""

# Configure port for browser / agents
managementConsolePort: "443"

volume:
  storageClass: openebs-hostpath
  # Change stoage class when using different PV provisioner.
  # For example, it will be 'openebs-hostpath' when using openebs
  # or it will be 'default' when using cloud managed Persistent Volumes.
  esStorage: 30Gi
  postgresStorage: 30Gi

clusterDomain: "cluster.local"

db:
  # If kubernetes secret is already defined externally, change following value to false
  createDbSecret: "true"
  #  Change following values accordingly if using externally managed database
  postgresUserDb:
    host: deepfence-postgres
    port: "5432"
    user: "deepfence"
    password: "KeTn4LA4SBN2"
    dbname: "users"
    sslmode: "disable"
  elasticsearch:
    scheme: "http"
    host: deepfence-es
    port: "9200"
    user: ""
    password: ""
  redis:
    host: deepfence-redis
    port: "6379"

# Replication factor for elasticsearch
# Recommended: 3+ for production, 1 for dev setup, minikube
elasticsearchReplicationFactor: 3

# (Optional) Set custom name for the cluster and hostname prefix for console vm's to easily identify in Deepfence UI.
# Example: df-console or deepfence-console
# It will be suffixed with hostname - df-console-aks-agentpool-123456-vmss000001
clusterName: "df-console"

# Service name for access from agents and vulnerability mapper
agentServiceName: deepfence-router

# Show console vm in management console UI
runConsoleDiscovery: "true"
# Run UI pod
runUIPod: "true"

vulnerabilityScanConcurrency: "15"

# Mount container runtime socket path to agent pod. Agent will detect which runtime it is using these files.
mountContainerRuntimeSocket:
  dockerSock: "false"
  dockerSockPath: "/var/run/docker.sock"
  containerdSock: "true"
  containerdSockPath: "/run/containerd/containerd.sock"

# Optionally set node affinity for topology pod
topologyNodeAffinityHostName: ""
# Optionally set node affinity for backend pod
backendNodeAffinityHostName: ""

topologyResources:
  requests:
    cpu: 1000m
    memory: 2Gi
  limits:
    cpu: 16000m
    memory: 32Gi

elasticsearchResources:
  requests:
    cpu: 200m
    memory: 2Gi
  limits:
    cpu: 8000m
    memory: 8Gi
elasticsearchHeapSize: "2g"

defaultResourceLimits:
  requests:
    cpu: 50m
    memory: 40Mi
  limits:
    cpu: 16000m
    memory: 32Gi
setDefaultResourceLimits: "false"

enablePacketCaptureService: "true"

serviceAccountName: deepfence-console

namespace: default

nameOverride: ""
fullnameOverride: ""
