---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepfence-redis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deepfence-console.labels" . | nindent 4 }}
    app: deepfence-console
    name: deepfence-redis
spec:
  replicas: 1
  selector:
    matchLabels:
      name: deepfence-redis
      {{- include "deepfence-console.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: deepfence-console
        name: deepfence-redis
        {{- include "deepfence-console.selectorLabels" . | nindent 8 }}
    spec:
{{- if .Values.redis.initContainerRequired }}
      initContainers:
      - name: init-sysctl
        image: busybox:latest
        imagePullPolicy: IfNotPresent
        securityContext:
          privileged: true
        command:
        - /bin/sh
        - -c
        - |
          sysctl -w fs.file-max=1048576
          sysctl -w net.core.somaxconn=512
          sysctl vm.overcommit_memory=1
{{ end }}
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      automountServiceAccountToken: false
      containers:
        - name: deepfence-redis
          image: "{{ .Values.registry.imagePrefix }}{{ .Values.redis.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: "{{ .Values.redis.image.pullPolicy }}"
          env:
            - name: INITIALIZE_REDIS
              value: "Y"
          ports:
            - containerPort: 6379
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
      {{- with .Values.redis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.redis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
