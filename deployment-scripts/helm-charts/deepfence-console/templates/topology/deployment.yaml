apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepfence-topology
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deepfence-console.labels" . | nindent 4 }}
    app: deepfence-console
    name: deepfence-topology
spec:
  {{- if not .Values.topology.autoscaling.enabled }}
  replicas: {{ .Values.topology.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      name: deepfence-topology
      {{- include "deepfence-console.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: deepfence-console
        name: deepfence-topology
        {{- include "deepfence-console.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: deepfence-topology
          env:
            - name: ELASTICSEARCH_HOST
              valueFrom:
                configMapKeyRef:
                  name: "main-cm-{{ include "deepfence-console.fullname" . }}"
                  key: elasticsearch_host
            - name: ELASTICSEARCH_PORT
              valueFrom:
                configMapKeyRef:
                  name: "main-cm-{{ include "deepfence-console.fullname" . }}"
                  key: elasticsearch_port
            - name: ELASTICSEARCH_SCHEME
              valueFrom:
                configMapKeyRef:
                  name: "main-cm-{{ include "deepfence-console.fullname" . }}"
                  key: es_scheme
            {{- if .Values.db.elasticsearch.user }}
            - name: ELASTICSEARCH_USER
              valueFrom:
                secretKeyRef:
                  name: "es-secret-{{ include "deepfence-console.fullname" . }}"
                  key: es_user
            {{- end }}
            {{- if .Values.db.elasticsearch.password }}
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "es-secret-{{ include "deepfence-console.fullname" . }}"
                  key: es_password
            {{- end }}
            {{- if .Values.saas_deployment }}
            - name: CUSTOMER_UNIQUE_ID
              valueFrom:
                secretKeyRef:
                  name: "es-secret-{{ include "deepfence-console.fullname" . }}"
                  key: es_customer_unique_id
            {{- end }}
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: "main-cm-{{ include "deepfence-console.fullname" . }}"
                  key: redis_host
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: "main-cm-{{ include "deepfence-console.fullname" . }}"
                  key: redis_port
          image: "{{ .Values.registry.imagePrefix }}{{ .Values.topology.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.topology.image.pullPolicy }}
          args:
            - topology
          ports:
            - name: http
              containerPort: 8004
              protocol: TCP
          resources:
            {{- toYaml .Values.topology.resources | nindent 12 }}
      {{- with .Values.topology.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topology.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
