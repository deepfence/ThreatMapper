{{- if .Values.discovery.runConsoleDiscovery }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: deepfence-discovery
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deepfence-console.labels" . | nindent 4 }}
    app: deepfence-console
    name: deepfence-discovery
spec:
  selector:
    matchLabels:
      name: deepfence-discovery
      {{- include "deepfence-console.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: deepfence-console
        name: deepfence-discovery
        {{- include "deepfence-console.selectorLabels" . | nindent 8 }}
    spec:
      hostPID: true
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      automountServiceAccountToken: false
      volumes:
        {{- if .Values.mountContainerRuntimeSocket.dockerSock }}
        - name: docker-sock
          hostPath:
            path: {{ .Values.mountContainerRuntimeSocket.dockerSockPath }}
            type: Socket
        {{ end }}
        {{- if .Values.mountContainerRuntimeSocket.containerdSock }}
        - name: containerd-sock
          hostPath:
            path: {{ .Values.mountContainerRuntimeSocket.containerdSockPath }}
            type: Socket
        {{ end }}
        {{- if .Values.mountContainerRuntimeSocket.crioSock }}
        - name: crio-sock
          hostPath:
            path: {{ .Values.mountContainerRuntimeSocket.crioSockPath }}
            type: Socket
        - hostPath:
            path: /var/lib/containers
            type: Directory
          name: containers
        {{- end }}
        - name: kernel-sys
          hostPath:
            path: /sys/kernel/debug
            type: Directory
      containers:
        - name: deepfence-discovery
          image: "{{ .Values.registry.imagePrefix }}{{ .Values.discovery.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.discovery.image.pullPolicy }}
          args:
            - discovery
            - deepfence-topology.{{ .Release.Namespace }}.svc.{{ .Values.clusterDomain }}
          env:
            - name: DF_ENABLE_PROCESS_REPORT
              value: "{{ .Values.discovery.enableGraphReport }}"
            - name: DF_CLUSTER_NAME
              value: "{{ .Values.clusterName }}"
            - name: AGENT_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- if .Values.clusterName }}
            - name: SCOPE_HOSTNAME
              value: "{{ .Values.clusterName }}-$(AGENT_HOSTNAME)"
            {{- else }}
            - name: SCOPE_HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            {{- end }}
            {{- if .Values.mountContainerRuntimeSocket.dockerSock }}
            - name: DOCKER_SOCKET_PATH
              value: "{{ .Values.mountContainerRuntimeSocket.dockerSockPath }}"
            {{ end }}
            {{- if .Values.mountContainerRuntimeSocket.containerdSock }}
            - name: CONTAINERD_SOCKET_PATH
              value: "{{ .Values.mountContainerRuntimeSocket.containerdSockPath }}"
            {{ end }}
            {{- if .Values.mountContainerRuntimeSocket.crioSock }}
            - name: CRIO_SOCKET_PATH
              value: "{{ .Values.mountContainerRuntimeSocket.crioSockPath }}"
            {{ end }}
          ports:
            - name: http
              containerPort: 8009
              protocol: TCP
          volumeMounts:
            {{- if .Values.mountContainerRuntimeSocket.dockerSock }}
            - mountPath: {{ .Values.mountContainerRuntimeSocket.dockerSockPath }}
              name: docker-sock
            {{ end }}
            {{- if .Values.mountContainerRuntimeSocket.containerdSock }}
            - mountPath: {{ .Values.mountContainerRuntimeSocket.containerdSockPath }}
              name: containerd-sock
            {{ end }}
            {{- if .Values.mountContainerRuntimeSocket.crioSock }}
            - mountPath: {{ .Values.mountContainerRuntimeSocket.crioSockPath }}
              name: crio-sock
            - mountPath: /var/lib/containers
              name: containers
            {{ end }}
            - mountPath: /sys/kernel/debug
              name: kernel-sys
          securityContext:
            privileged: true
          resources:
            {{- toYaml .Values.discovery.resources | nindent 12 }}
      {{- with .Values.discovery.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.discovery.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }}
