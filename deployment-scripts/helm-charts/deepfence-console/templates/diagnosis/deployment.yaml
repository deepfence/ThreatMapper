apiVersion: apps/v1
kind: Deployment
metadata:
  name: deepfence-diagnosis
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "deepfence-console.labels" . | nindent 4 }}
    app: deepfence-console
    name: deepfence-diagnosis
spec:
  {{- if not .Values.diagnosis.autoscaling.enabled }}
  replicas: {{ .Values.diagnosis.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      name: deepfence-diagnosis
      {{- include "deepfence-console.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: deepfence-console
        name: deepfence-diagnosis
        {{- include "deepfence-console.selectorLabels" . | nindent 8 }}
    spec:
      imagePullSecrets:
        - name: {{ .Values.image.pullSecretName }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      automountServiceAccountToken: true
      volumes:
{{- if .Values.mountContainerRuntimeSocket.dockerSock }}
      - name: docker-sock
        hostPath:
          path: {{ .Values.mountContainerRuntimeSocket.dockerSockPath }}
          type: Socket
{{ end }}
{{- if .Values.mountContainerRuntimeSocket.containerdSock }}
      - name: containerd-sock
        hostPath:
          path: {{ .Values.mountContainerRuntimeSocket.containerdSockPath }}
          type: Socket
{{ end }}
{{- if .Values.mountContainerRuntimeSocket.crioSock }}
      - name: crio-sock
        hostPath:
          path: {{ .Values.mountContainerRuntimeSocket.crioSockPath }}
          type: Socket
{{ end }}
      containers:
        - name: deepfence-diagnosis
          image: "{{ .Values.registry.imagePrefix }}{{ .Values.diagnosis.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.diagnosis.image.pullPolicy }}
          args:
            - kubernetes
          env:
            - name: NODE_METRICS
              value: "{{ .Values.diagnosis.nodeMetrics }}"
            - name: UI_SERVICE_NAME
              value: "{{ .Values.router.uiServiceName }}"
            - name: CONSOLE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            {{- if .Values.mountContainerRuntimeSocket.dockerSock }}
            - name: DOCKER_SOCKET_PATH
              value: "{{ .Values.mountContainerRuntimeSocket.dockerSockPath }}"
            {{ end }}
            {{- if .Values.mountContainerRuntimeSocket.containerdSock }}
            - name: CONTAINERD_SOCKET_PATH
              value: "{{ .Values.mountContainerRuntimeSocket.containerdSockPath }}"
            {{ end }}
            {{- if .Values.mountContainerRuntimeSocket.crioSock }}
            - name: CRIO_SOCKET_PATH
              value: "{{ .Values.mountContainerRuntimeSocket.crioSockPath }}"
            {{ end }}
          ports:
            - name: http
              containerPort: 8009
              protocol: TCP
          volumeMounts:
{{- if .Values.mountContainerRuntimeSocket.dockerSock }}
          - mountPath: {{ .Values.mountContainerRuntimeSocket.dockerSockPath }}
            name: docker-sock
{{ end }}
{{- if .Values.mountContainerRuntimeSocket.containerdSock }}
          - mountPath: {{ .Values.mountContainerRuntimeSocket.containerdSockPath }}
            name: containerd-sock
{{ end }}
{{- if .Values.mountContainerRuntimeSocket.crioSock }}
          - mountPath: {{ .Values.mountContainerRuntimeSocket.crioSockPath }}
            name: crio-sock
{{ end }}
          resources:
            {{- toYaml .Values.diagnosis.resources | nindent 12 }}
      {{- with .Values.diagnosis.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.diagnosis.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}