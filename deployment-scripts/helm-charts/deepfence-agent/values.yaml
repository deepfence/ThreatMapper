# Default values for deepfence.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

registry:
  name: "https://index.docker.io/v1/"
  # Set docker hub username and password provided by Deepfence
  # This will create a secret called "deepfence-docker-secret"
  username: ""
  password: ""
  # If kubernetes secret is already defined externally, change following value to false
  # https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  createRegistrySecret: true

image:
  # deepfence agent runs as a daemonset in all nodes in the cluster
  name: deepfenceio/deepfence_agent_ce
  tag: 1.4.2
  # cluster agent runs as a single pod
  clusterAgentImageName: deepfenceio/deepfence_discovery_ce
  clusterAgentImageTag: 1.4.2
  pullPolicy: Always
  pullSecretName: deepfence-docker-secret

managementConsoleUrl: &managementConsoleUrl ""
managementConsolePort: &managementConsolePort "443"

priorityClassName: ""

# Auth: Get deepfence api key from UI -> Settings -> User Management
deepfenceKey: &deepfenceKey ""
# If kubernetes secret is already defined externally, change following value to false
createDeepfenceKeySecret: true

# Suffix cloud instance id to hostnames
instanceIdSuffix: "N"

# comma separated list of tags (labels) to set for all agents
userDefinedTags: ""

# Set custom name for the cluster and hostname prefix for agent vm's to easily identify in Deepfence UI.
# Example: prod-cluster or dev1-cluster
# It will be suffixed with hostname - prod-cluster-aks-agentpool-123456-vmss000001
clusterName: &clusterName ""

# Deploy Deepfence Kubernetes Scanner helm chart along with agent
deployKubernetesScanner: false

enableGraphReport: true

# Mount container runtime socket path to agent pod. Agent will detect which runtime it is using these files.
mountContainerRuntimeSocket:
  dockerSock: false
  # Change if socket path is not the following
  dockerSockPath: "/var/run/docker.sock"
  containerdSock: true
  # Change if socket path is not the following
  containerdSockPath: "/run/containerd/containerd.sock"
  crioSock: false
  # Change if socket path is not the following
  crioSockPath: "/var/run/crio/crio.sock"

resources:
  requests:
    cpu: 150m
    memory: 512Mi
  limits:
    cpu: 1500m
    memory: 1536Mi

clusterAgentResources:
  requests:
    cpu: 25m
    memory: 80Mi
  limits:
    cpu: 1500m
    memory: 1536Mi

nodeSelector: {"kubernetes.io/os": "linux"}

tolerations:
  - operator: "Exists"
    effect: "NoSchedule"
  - operator: "Exists"
    effect: "NoExecute"

affinity: {}

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  name: "deepfence-agent"

nameOverride: ""
fullnameOverride: ""

deepfence-k8s-scanner:
  managementConsoleUrl: *managementConsoleUrl
  managementConsolePort: *managementConsolePort
  deepfenceKey: *deepfenceKey
  clusterName: *clusterName
  createDeepfenceKeySecret: false
  image:
    tag: "1.0.0"