---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.service.name }}
  labels:
    app: deepfence-router
    {{- include "deepfence-router.labels" . | nindent 4 }}
  namespace: {{ .Release.Namespace }}
  {{- with .Values.service.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if .Values.service.externalIPs }}
  externalIPs:
  {{ toYaml .Values.service.externalIPs | indent 4 }}
  {{- end }}
  {{- if .Values.service.loadBalancerIP }}
  loadBalancerIP: "{{ .Values.service.loadBalancerIP }}"
  {{- end }}
  {{- if .Values.service.loadBalancerSourceRanges }}
  loadBalancerSourceRanges:
  {{ toYaml .Values.service.loadBalancerSourceRanges | indent 4 }}
  {{- end }}
  {{- if  eq "LoadBalancer" .Values.service.type   }}
  externalTrafficPolicy: "{{ .Values.service.externalTrafficPolicy }}"
  {{- end }}
  {{- if eq "Ingress" .Values.service.type }}
  type: ClusterIP
  {{- else }}
  type: {{ .Values.service.type }}
  {{- end }}
  selector:
    name: {{ .Values.service.name }}
  ports:
    - name: https-port
      port: {{ required "managementConsolePort is required" .Values.managementConsolePort }}
      protocol: TCP
      {{- if or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "Ingress") }}
      targetPort: 443
      {{- end }}
      {{- if eq .Values.service.type "NodePort"}}
      {{- if .Values.service.nodePortHttps }}
      nodePort: {{ .Values.service.nodePortHttps }}
      {{- else }}
      nodePort: 30007
      {{- end }}
      {{- end }}
    - name: http-port
      port: 80
      protocol: TCP
      {{- if or (eq .Values.service.type "LoadBalancer") (eq .Values.service.type "Ingress") }}
      targetPort: 80
      {{- end }}
      {{- if eq .Values.service.type "NodePort" }}
      {{- if .Values.service.nodePortHttp }}
      nodePort: {{ .Values.service.nodePortHttp }}
      {{- else }}
      nodePort: 30008
      {{- end }}
      {{- end }}
