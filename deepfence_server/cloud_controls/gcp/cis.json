[
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_1",
    "description": "Use corporate login credentials instead of personal accounts, such as Gmail accounts.",
    "title": "1.1 Ensure that corporate login credentials are used",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.1",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nUse corporate login credentials instead of personal accounts, such as Gmail accounts.\n\nIt is recommended fully-managed corporate Google accounts be used for increased visibility, auditing, and controlling access to Cloud Platform resources. Email accounts based outside of the user's organization, such as personal accounts, should not be used for business purposes.\n\n## Remediation\n\nFollow the documentation and setup corporate login accounts.\n\n### Prevention\n\nTo ensure that no email addresses outside the organization can be granted IAM permissions to its Google Cloud projects, folders or organization, turn on the Organization Policy for `Domain Restricted Sharing`. Learn more at: [https://cloud.google.com/resource-manager/docs/organization-policy/restrictingdomains](https://cloud.google.com/resource-manager/docs/organization-policy/restrictingdomains) (Page 16)\n\n### Default Value\n\nBy default, no email addresses outside the organization's domain have access to its Google Cloud deployments, but any user email account can be added to the IAM policy for Google Cloud Platform projects, folders, or organizations.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_2",
    "description": "Setup multi-factor authentication for Google Cloud Platform accounts.",
    "title": "1.2 Ensure that multi-factor authentication is enabled for all non-service accounts",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.2",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nSetup multi-factor authentication for Google Cloud Platform accounts.\n\nMulti-factor authentication requires more than one mechanism to authenticate a user. This secures user logins from attackers exploiting stolen or weak credentials.\n\n## Remediation\n\n### From Console\n\nFor each Google Cloud Platform project:\n\n  1. Identify non-service accounts.\n  2. Setup multi-factor authentication for each account.\n\n### Default Value\n\nBy default, multi-factor authentication is not set.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_3",
    "description": "Setup Security Key Enforcement for Google Cloud Platform admin accounts.",
    "title": "1.3 Ensure that Security Key Enforcement is enabled for all admin accounts",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.3",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nSetup Security Key Enforcement for Google Cloud Platform admin accounts.\n\nGoogle Cloud Platform users with Organization Administrator roles have the highest level of privilege in the organization. These accounts should be protected with the strongest form of two-factor authentication: Security Key Enforcement. Ensure that admins use Security Keys to log in instead of weaker second factors like SMS or one-time passwords (OTP). Security Keys are actual physical keys used to access Google Organization Administrator Accounts. They send an encrypted signature rather than a code, ensuring that logins cannot be phished.\n\n## Remediation\n\n1. Identify users with the Organization Administrator role.\n2. Setup Security Key Enforcement for each account. Learn more at: [https://cloud.google.com/security-key/](https://cloud.google.com/security-key/)\n\n### Default Value\n\nBy default, Security Key Enforcement is not enabled for Organization Administrators.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_4",
    "description": "User managed service accounts should not have user-managed keys.",
    "title": "1.4 Ensure that there are only GCP-managed service account keys for each service account",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.4",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nUser managed service accounts should not have user-managed keys.\n\nAnyone who has access to the keys will be able to access resources through the service account. GCP-managed keys are used by Cloud Platform services such as App Engine and Compute Engine. These keys cannot be downloaded. Google will keep the keys and automatically rotate them on an approximately weekly basis. User-managed keys are created, downloadable, and managed by users. They expire 10 years from creation.\n\nFor user-managed keys, the user has to take ownership of key management activities which include:\n- Key storage\n- Key distribution\n- Key revocation\n- Key rotation\n- Protecting the keys from unauthorized users\n- Key recovery\n\nEven with key owner precautions, keys can be easily leaked by common development malpractices like checking keys into the source code or leaving them in the Downloads directory, or accidentally leaving them on support blogs/channels.\n\nIt is recommended to prevent user-managed service account keys\n\n## Remediation\n\n### From Console\n\n1. Login to IAM page in the GCP Console using [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam)\n2. In the left navigation pane, click `Service accounts`. All service accounts and their corresponding keys are listed.\n3. Click the service account.\n4. Click the `edit` and delete the keys.\n\n### From Command Line\n\nTo delete a user managed Service Account Key,\n\n```bash\ngcloud iam service-accounts keys delete --iam-account=\u003cuser-managed-serviceaccount-EMAIL\u003e \u003cKEY-ID\u003e\n```\n\n### Prevention\n\nYou can disable service account key creation through the `Disable service account key creation` Organization policy by visiting [https://console.cloud.google.com/iam-admin/orgpolicies/iam-disableServiceAccountKeyCreation](https://console.cloud.google.com/iam-admin/orgpolicies/iam-disableServiceAccountKeyCreation). Learn more at: [https://cloud.google.com/resource-manager/docs/organization-policy/restricting-service-accounts](https://cloud.google.com/resource-manager/docs/organization-policy/restricting-service-accounts). In addition, if you do not need to have service accounts in your project, you can also prevent the creation of service accounts through the `Disable service account creation` Organization policy: [https://console.cloud.google.com/iam-admin/orgpolicies/iam-disableServiceAccountCreation](https://console.cloud.google.com/iam-admin/orgpolicies/iam-disableServiceAccountCreation).\n\n### Default Value\n\nBy default, there are no user-managed keys created for user-managed service accounts.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_5",
    "description": "A service account is a special Google account that belongs to an application or a VM, instead of to an individual end-user. The application uses the service account to call the service's Google API so that users aren't directly involved. It's recommended not to use admin access for ServiceAccount.",
    "title": "1.5 Ensure that Service Account has no Admin privileges",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.5",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nA service account is a special Google account that belongs to an application or a VM, instead of to an individual end-user. The application uses the service account to call the service's Google API so that users aren't directly involved. It's recommended not to use admin access\nfor ServiceAccount.\n\nService accounts represent service-level security of the Resources (application or a VM) which can be determined by the roles assigned to it. Enrolling ServiceAccount with Admin rights gives full access to an assigned application or a VM. A ServiceAccount Access holder can perform critical actions like delete, update change settings, etc. without user intervention. For this reason, it's recommended that service accounts not have Admin\nrights.\n\n## Remediation\n\n### From Console\n\n1. Go to `IAM \u0026 admin/IAM` using [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam)\n2. Go to the `Members`\n3. Identify `User-Managed user created` service account with roles containing `*Admin` or `*admin` or role matching `Editor` or role matching `Owner`\n4. Click the `Delete bin` icon to remove the role from the member (service account in this case)\n\n### From Command Line\n\n```bash\ngcloud projects get-iam-policy PROJECT_ID --format json \u003e iam.json\n```\n\n  1. Using a text editor, Remove `Role` which contains `roles/*Admin` or `roles/*admin` or matched `=roles/editor` or matches `roles/owner`. Add a role to the bindings array that defines the group members and the role for those members.\n\nFor example, to grant the role roles/appengine.appViewer to the `ServiceAccount` which is roles/editor, you would change the example shown below as follows:\n\n```bash\n  {\n    \"bindings\": [\n    {\n      \"members\": [\n        \"serviceAccount:our-project-123@appspot.gserviceaccount.com\",\n      ],\n      \"role\": \"roles/appengine.appViewer\"\n    },\n    {\n      \"members\": [\n        \"user:email1@gmail.com\"\n      ],\n      \"role\": \"roles/owner\"\n    },\n    {\n      \"members\": [\n        \"serviceAccount:our-project-123@appspot.gserviceaccount.com\",\n        \"serviceAccount:123456789012-compute@developer.gserviceaccount.com\"\n      ],\n      \"role\": \"roles/editor\"\n    }\n    ],\n    \"etag\": \"BwUjMhCsNvY=\"\n  }\n```\n\n  2. Update the project's IAM policy:\n\n```bash\ngcloud projects set-iam-policy PROJECT_ID iam.json\n```\n\n### Default Value\n\nUser Managed (and not user-created) default service accounts have the `Editor (roles/editor)` role assigned to them to support GCP services they offer.\nBy default, there are no roles assigned to `User Managed User created` service accounts.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_6",
    "description": "It is recommended to assign the Service Account User (iam.serviceAccountUser) and Service Account Token Creator (iam.serviceAccountTokenCreator) roles to a user for a specific service account rather than assigning the role to a user at project level.",
    "title": "1.6 Ensure that IAM users are not assigned the Service Account User or Service Account Token Creator roles at project level",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.6",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nIt is recommended to assign the `Service Account User (iam.serviceAccountUser)` and `Service Account Token Creator (iam.serviceAccountTokenCreator)` roles to a user for a specific service account rather than assigning the role to a user at project level.\n\nA service account is a special Google account that belongs to an application or a virtual machine (VM), instead of to an individual end-user. Application/VM-Instance uses the service account to call the service's Google API so that users aren't directly involved. In\naddition to being an identity, a service account is a resource that has IAM policies attached to it. These policies determine who can use the service account.\n\nUsers with IAM roles to update the App Engine and Compute Engine instances (such as App Engine Deployer or Compute Instance Admin) can effectively run code as the service accounts used to run these instances, and indirectly gain access to all the resources for which the service accounts have access. Similarly, SSH access to a Compute Engine instance may also provide the ability to execute code as that instance/Service account.\n\nBased on business needs, there could be multiple user-managed service accounts configured for a project. Granting the `iam.serviceAccountUser` or `iam.serviceAserviceAccountTokenCreatorccountUser` roles to a user for a project gives the user access to all service accounts in the project, including service accounts that may be created in the future. This can result in elevation of privileges by using service accounts and corresponding `Compute Engine instances`.\n\nIn order to implement `least privileges` best practices, IAM users should not be assigned the Service Account User or Service Account Token Creator roles at the project level. Instead, these roles should be assigned to a user for a specific service account, giving that user access to the service account. The `Service Account User` allows a user to bind a service account to a long-running job service, whereas the `Service Account Token Creator role` allows a user to directly impersonate (or assert) the identity of a service account.\n\n## Remediation\n\n### From Console\n\n1. Go to the IAM page in the GCP Console by visiting: [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam).\n2. Click on the filter table text bar. Type `Role: Service Account User`\n3. Click the `Delete Bin` icon in front of the role `Service Account User` for every user listed as a result of a filter.\n4. Click on the filter table text bar. Type `Role: Service Account Token Creator`\n5. Click the `Delete Bin` icon in front of the role `Service Account Token Creator` for every user listed as a result of a filter.\n\n### From Command Line\n\n1. Using a text editor, remove the bindings with the `roles/iam.serviceAccountUser` or `roles/iam.serviceAccountTokenCreator`.\n\nFor example, you can use the iam.json file shown below as follows:\n\n```bash\n{\n    \"bindings\": [\n        {\n            \"members\": [\n                \"serviceAccount:our-project-123@appspot.gserviceaccount.com\"\n            ],\n            \"role\": \"roles/appengine.appViewer\"\n        },\n        {\n            \"members\": [\n                \"user:email1@gmail.com\"\n            ],\n            \"role\": \"roles/owner\"\n        },\n        {\n            \"members\": [\n                \"serviceAccount:our-project-123@appspot.gserviceaccount.com\",\n                \"serviceAccount:123456789012-compute@developer.gserviceaccount.com\"\n            ],\n            \"role\": \"roles/editor\"\n        }\n    ],\n    \"etag\": \"BwUjMhCsNvY=\"\n}\n```\n\n2. Update the project's IAM policy:\n\n```bash\ngcloud projects set-iam-policy PROJECT_ID iam.json\n```\n\n### Default Value\n\nBy default, users do not have the Service Account User or Service Account Token Creator role assigned at project level.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_7",
    "description": "Service Account keys consist of a key ID (Private_key_Id) and Private key, which are used to sign programmatic requests users make to Google cloud services accessible to that particular service account. It is recommended that all Service Account keys are regularly rotated.",
    "title": "1.7 Ensure user-managed/external keys for service accounts are rotated every 90 days or less",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.7",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nService Account keys consist of a key ID (Private_key_Id) and Private key, which are used to sign programmatic requests users make to Google cloud services accessible to that particular service account. It is recommended that all Service Account keys are regularly rotated.\n\nRotating Service Account keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used. Service Account keys should be rotated to ensure that data cannot be accessed with an old key that might have been lost, cracked, or stolen.\n\nEach service account is associated with a key pair managed by Google Cloud Platform (GCP). It is used for service-to-service authentication within GCP. Google rotates the keys daily.\n\n## Remediation\n\n### From Console\n\n#### Delete any external (user-managed) Service Account Key older than 90 days:\n\n1. Go to GCP console at `APIs \u0026 Services\\Credentials` using [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials)\n2.  In the Section `Service Account Keys`, for every external (user-managed) service account key where `creation date` is greater than or equal to the past 90 days, click `Delete Bin Icon` to `Delete Service Account key`\n\n#### Create a new external (user-managed) Service Account Key for a Service Account:\n\n1. Go to `APIs \u0026 Services\\Credentials` using [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials)\n2. Click `Create Credentials` and Select `Service Account Key`.\n3. Choose the service account in the drop-down list for which an External (user-managed) Service Account key needs to be created.\n4. Select the desired key type format among `JSON` or `P12`.\n5. Click `Create`. It will download the `private key`. Keep it safe.\n6. Click `Close` if prompted.\n7. The site will redirect to the `APIs \u0026 Services\\Credentials` page. Make a note of the new `ID` displayed in the `Service account keys` section.\n\n### Default Value\n\nGCP does not provide an automation option for External (user-managed) Service key rotation.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_8",
    "description": "It is recommended that the principle of 'Separation of Duties' is enforced while assigning service-account related roles to users.",
    "title": "1.8 Ensure that Separation of duties is enforced while assigning service account related roles to users",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.8",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nIt is recommended that the principle of 'Separation of Duties' is enforced while assigning service-account related roles to users.\n\nThe built-in/predefined IAM role `Service Account admin` allows the user/identity to create, delete, and manage service account(s). The built-in/predefined IAM role `Service Account User` allows the user/identity (with adequate privileges on Compute and App Engine) to assign service account(s) to Apps/Compute Instances.\n\nSeparation of duties is the concept of ensuring that one individual does not have all necessary permissions to be able to complete a malicious action. In Cloud IAM - service accounts, this could be an action such as using a service account to access resources that user should not normally have access to.\n\nSeparation of duties is a business control typically used in larger organizations, meant to help avoid security or privacy incidents and errors. It is considered best practice.\n\nNo user should have `Service Account Admin` and `Service Account User` roles assigned at the same time.\n\n## Remediation\n\n### From Console\n\n1. Go to `IAM \u0026 Admin/IAM` using [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam).\n2. For any member having both `Service Account Admin` and `Service account User` roles granted/assigned, click the `Delete Bin` icon to remove either role from the member. Removal of a role should be done based on the business requirements.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_9",
    "description": "It is recommended that the IAM policy on Cloud KMS cryptokeys should restrict anonymous and/or public access.",
    "title": "1.9 Ensure that Cloud KMS cryptokeys are not anonymously or publicly accessible",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.9",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/KMS"
    },
    "documentation": "## Description\n\nIt is recommended that the IAM policy on Cloud KMS `cryptokeys` should restrict anonymous and/or public access.\n\nGranting permissions to `allUsers` or `allAuthenticatedUsers` allows anyone to access the dataset. Such access might not be desirable if sensitive data is stored at the location. In this case, ensure that anonymous and/or public access to a Cloud KMS `cryptokey` is not allowed.\n\n## Remediation\n\n### From Command Line\n\n1. List all Cloud KMS Cryptokeys.\n\n```bash\ngcloud kms keys list --keyring=[key_ring_name] --location=global --format=json | jq '.[].name'\n```\n\n2. Remove IAM policy binding for a KMS key to remove access to `allUsers` and `allAuthenticatedUsers` using the below command.\n\n```bash\ngcloud kms keys remove-iam-policy-binding [key_name] --keyring=[key_ring_name] --location=global --member='allAuthenticatedUsers' --role='[role]' \ngcloud kms keys remove-iam-policy-binding [key_name] --keyring=[key_ring_name] --location=global --member='allUsers' --role='[role]'\n```\n\n### Default Value\n\nBy default Cloud KMS does not allow access to `allUsers` or `allAuthenticatedUsers`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_10",
    "description": "Google Cloud Key Management Service stores cryptographic keys in a hierarchical structure designed for useful and elegant access control management. The format for the rotation schedule depends on the client library that is used. For the gcloud command-line tool, the next rotation time must be in ISO or RFC3339 format, and the rotation period must be in the form INTEGER[UNIT], where units can be one of seconds (s), minutes (m), hours (h) or days (d).",
    "title": "1.10 Ensure KMS encryption keys are rotated within a period of 90 days",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.10",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/KMS"
    },
    "documentation": "## Description\n\nGoogle Cloud Key Management Service stores cryptographic keys in a hierarchical structure designed for useful and elegant access control management. The format for the rotation schedule depends on the client library that is used. For the gcloud command-line tool, the next rotation time must be in `ISO` or `RFC3339` format, and the rotation period must be in the form `INTEGER[UNIT]`, where units can be one of seconds (s), minutes (m), hours (h) or days (d).\n\nSet a key rotation period and starting time. A key can be created with a specified `rotation period`, which is the time between when new key versions are generated automatically. A key can also be created with a specified next rotation time. A key is a named object representing a `cryptographic` key used for a specific purpose. The key material, the actual bits used for `encryption`, can change over time as new key versions are created.\n\nA key is used to protect some `corpus of data`. A collection of files could be encrypted with the same key and people with `decrypt` permissions on that key would be able to decrypt those files. Therefore, it's necessary to make sure the `rotation period` is set to a specific time.\n\n## Remediation\n\n### From Console\n\n1. Go to `Cryptographic Keys` by visiting: [https://console.cloud.google.com/security/kms](https://console.cloud.google.com/security/kms).\n2. Click on the specific key ring\n3. From the list of keys, choose the specific key and Click on `Right side pop up the blade (3 dots)`.\n4. Click on `Edit rotation period`.\n5. On the pop-up window, `Select a new rotation period` in days which should be less than 90 and then choose `Starting on` date (date from which the rotation period begins).\n\n### From Command Line\n\n1. Update and schedule rotation by ROTATION_PERIOD and NEXT_ROTATION_TIME for each key:\n\n```bash\ngcloud kms keys update new --keyring=KEY_RING --location=LOCATION --next-rotation-time=NEXT_ROTATION_TIME --rotation-period=ROTATION_PERIOD\n```\n\n### Default Value\n\nBy default, KMS encryption keys are rotated every 90 days.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_11",
    "description": "It is recommended that the principle of 'Separation of Duties' is enforced while assigning KMS related roles to users.",
    "title": "1.11 Ensure that Separation of duties is enforced while assigning KMS related roles to users",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.11",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/KMS"
    },
    "documentation": "## Description\n\nIt is recommended that the principle of 'Separation of Duties' is enforced while assigning KMS related roles to users.\n\nThe built-in/predefined IAM role `Cloud KMS Admin` allows the user/identity to create, delete, and manage service account(s). The built-in/predefined IAM role `Cloud KMS CryptoKey Encrypter/Decrypter` allows the user/identity (with adequate privileges on concerned resources) to encrypt and decrypt data at rest using an encryption key(s).\n\nThe built-in/predefined IAM role `Cloud KMS CryptoKey Encrypter` allows the user/identity (with adequate privileges on concerned resources) to encrypt data at rest using an encryption key(s). The built-in/predefined IAM role `Cloud KMS CryptoKey Decrypter` allows the user/identity (with adequate privileges on concerned resources) to decrypt data at rest using an encryption key(s).\n\nSeparation of duties is the concept of ensuring that one individual does not have all necessary permissions to be able to complete a malicious action. In Cloud KMS, this could be an action such as using a key to access and decrypt data a user should not normally have access to. Separation of duties is a business control typically used in larger organizations, meant to help avoid security or privacy incidents and errors. It is considered best practice.\n\nNo user(s) should have `Cloud KMS Admin` and any of the `Cloud KMS CryptoKey Encrypter/Decrypter`, `Cloud KMS CryptoKey Encrypter`, `Cloud KMS CryptoKey Decrypter` roles assigned at the same time.\n\n## Remediation\n\n### From Console\n\n1. Go to `IAM \u0026 Admin/IAM` using [https://console.cloud.google.com/iam-admin/iam](https://console.cloud.google.com/iam-admin/iam)\n2. For any member having `Cloud KMS Admin` and any of the `Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter` roles granted/assigned, click the `Delete Bin` icon to remove the role from the member.\n\n**Note**: Removing a role should be done based on the business requirement.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_12",
    "description": "API Keys should only be used for services in cases where other authentication methods are unavailable. Unused keys with their permissions in tact may still exist within a project. Keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to use standard authentication flow instead.",
    "title": "1.12 Ensure API Keys Only Exist for Active Services",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.12",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nAPI Keys should only be used for services in cases where other authentication methods are unavailable. Unused keys with their permissions in tact may still exist within a project. Keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to use standard authentication flow instead.\n\nTo avoid the security risk in using API keys, it is recommended to use standard authentication flow instead. Security risks involved in using API-Keys appear below:\n\n- API keys are simple encrypted strings\n- API keys do not identify the user or the application making the API request\n- API keys are typically accessible to clients, making it easy to discover and steal an API key\n\n## Remediation\n\n### From Console\n\n1. Go to `APIs \u0026 Services\\Credentials` using\n2. In the section `API Keys`, to delete API Keys: Click the `Delete Bin Icon` in front of every `API Key Name`.\n\n### From Google Cloud Command Line\n\n1. Run the following from within the project you wish to audit **`gcloud services api-keys list --filter`**\n2. **Pipe the results into** `gcloud alpha services api-keys delete`\n\n### Default Value\n\nBy default, API keys are not created for a project.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_13",
    "description": "Unrestricted keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API key usage to trusted hosts, HTTP referrers and apps.",
    "title": "1.13 Ensure API keys are restricted to use by only specified Hosts and Apps",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.13",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nAPI Keys should only be used for services in cases where other authentication methods are unavailable. In this case, unrestricted keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API key usage to trusted hosts, HTTP referrers and apps. It is recommended to use the more secure standard authentication flow instead.\n\nSecurity risks involved in using API-Keys appear below:\n\n- API keys are simple encrypted strings\n- API keys do not identify the user or the application making the API request\n- API keys are typically accessible to clients, making it easy to discover and steal an API key\n\nIn light of these potential risks, Google recommends using the standard authentication flow instead of API keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.\n\nIn order to reduce attack vectors, API-Keys can be restricted only to trusted hosts, HTTP referrers and applications.\n\n## Remediation\n\n### From Console\n\n### *Leaving Keys in Place*\n\n1. Go to `APIs \u0026 Services\\Credentials` using [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials)\n2. In the section `API Keys`, Click the `API Key Name`. The API Key properties display on a new page.\n3. In the `Key restrictions` section, set the application restrictions to any of `HTTP referrers, IP addresses, Android apps, iOS apps`.\n4. Click `Save`.\n5. Repeat steps 2,3,4 for every unrestricted API key.\n\n**Note**: Do not set `HTTP referrers` to wild-cards (* or *.[TLD] or .[TLD]/) allowing access to any/wide HTTP referrer(s) Do not set `IP addresse`s and referrer to `any host (0.0.0.0 or 0.0.0.0/0 or ::0)`\n\n### *Removing Keys*\n\nAnother option is to remove the keys entirely.\n\n1. Go to `APIs \u0026 Services\\Credentials` using [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials)\n2. In the section `API Keys`, select the check box next to each key you wish to remove\n3. Select `Delete` and confirm.\n\n### Default Value\n\nBy default, `Application Restrictions` are set to `None`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_14",
    "description": "API keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API keys to use (call) only APIs required by an application.",
    "title": "1.14 Ensure API keys are restricted to only APIs that application needs access",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.14",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nAPI Keys should only be used for services in cases where other authentication methods are unavailable. API keys are always at risk because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API keys to use(call) only APIs required by an application.\n\nSecurity risks involved in using API-Keys appear below:\n\n- API keys are simple encrypted strings\n- API keys do not identify the user or the application making the API request\n- API keys are typically accessible to clients, making it easy to discover and steal an API key\n\nIn light of these potential risks, Google recommends using the standard authentication flow instead of API keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.\n\nIn order to reduce attack surfaces by providing `least privileges`, API-Keys can be restricted to use (call) only APIs required by an application.\n\n## Remediation\n\n### From Console\n\n1. Go to `APIs \u0026 Services\\Credentials` using [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials)\n2. In the section `API Keys`, Click the `API Key Name`. The API Key properties display on a new page.\n3. In the `Key restrictions` section go to `API restrictions`.\n4. Click the `Select API` drop-down to choose an API.\n5. Click `Save`.\n6. Repeat steps 2,3,4,5 for every unrestricted API key\n\n**Note**: Do not set `API restrictions` to `Google Cloud APIs`, as this option allows access to all services offered by Google cloud.\n\n### From Command Line\n\n1. List all API keys.\n\n```bash\ngcloud services api-keys list\n```\n\n**Note** the `UID` of the key to add restrictions to.\n\n2. Run the update command with the appropriate flags to add the required restrictions.\n\n```bash\ngcloud alpha services api-keys update \u003cUID\u003e \u003crestriction_flags\u003e\n```\n\n**Note** - Flags can be found by running\n\n```bash\ngcloud alpha services api-keys update --help\n```\n\nor in this documentation [https://cloud.google.com/sdk/gcloud/reference/alpha/services/api-keys/update](https://cloud.google.com/sdk/gcloud/reference/alpha/services/api-keys/update)\n\n### Default Value\n\nBy default, `API restrictions` are set to `None`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_15",
    "description": "It is recommended to rotate API keys every 90 days.",
    "title": "1.15 Ensure API keys are rotated every 90 days",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.15",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/IAM"
    },
    "documentation": "## Description\n\nAPI Keys should only be used for services in cases where other authentication methods are unavailable. If they are in use it is recommended to rotate API keys every 90 days.\n\nSecurity risks involved in using API-Keys appear below:\n\n- API keys are simple encrypted strings\n- API keys do not identify the user or the application making the API request\n- API keys are typically accessible to clients, making it easy to discover and steal an API key\n\nBecause of these potential risks, Google recommends using the standard authentication flow instead of API Keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.\n\nOnce a key is stolen, it has no expiration, meaning it may be used indefinitely unless the project owner revokes or regenerates the key. Rotating API keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.\n\nAPI keys should be rotated to ensure that data cannot be accessed with an old key that might have been lost, cracked, or stolen.\n\n## Remediation\n\n### From Console\n\nTo find the listed API Keys with creation date\n\n1. Login to `APIs \u0026 Services\\Credentials` using [https://console.cloud.google.com/apis/credentials](https://console.cloud.google.com/apis/credentials)\n2. In the section `API Keys`, Click the `API Key Name`. The API Key properties display on a new page.\n3. Click `REGENERATE KEY` to rotate API key from the top section of the page.\n4. Click `Save`.\n5. Repeat steps 2,3,4 for every API key that has not been rotated in the last 90 days.\n\n**Note**: Do not set `HTTP referrers` to wild-cards (* or *.[TLD] or .[TLD]/) allowing access to any/wide HTTP referrer(s) Do not set `IP addresses` and referrer to `any host (0.0.0.0 or 0.0.0.0/0 or ::0)`\n\n### From Command Line\n\nThere is not currently a way to regenerate and API key using gcloud commands. To'regenerate' a key you will need to create a new one, duplicate the restrictions from the key being rotated, and delete the old key.\n\n1. List existing keys.\n\n```bash\ngcloud services api-keys list\n```\n\n2. Note the `UID` and restrictions of the key to regenerate.\n3. Run this command to create a new API key. \u003ckey_name\u003e is the display name of the new key.\n\n```bash\ngcloud alpha services api-keys create --display-name=\"\u003ckey_name\u003e\"\n```\n\nNote the `UID` of the newly created key\n\n4. Run the update command to add required restrictions.\n\n**Note** - the restriction may vary for each key. Refer to this documentation for the appropriate flags.\n\n[https://cloud.google.com/sdk/gcloud/reference/alpha/services/api-keys/update](https://cloud.google.com/sdk/gcloud/reference/alpha/services/api-keys/update)\n\n```bash\ngcloud alpha services api-keys update \u003cUID of new key\u003e\n```\n\n5. Delete the old key.\n\n```bash\ngcloud alpha services api-keys delete \u003cUID of old key\u003e\n```\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_16",
    "description": "It is recommended that Essential Contacts is configured to designate email addresses for Google Cloud services to notify of important technical or security information.",
    "title": "1.16 Ensure essential contacts is configured for Organization",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.16",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Organization"
    },
    "documentation": "## Description\n\nIt is recommended that Essential Contacts is configured to designate email addresses for Google Cloud services to notify of important technical or security information.\n\nMany Google Cloud services, such as Cloud Billing, send out notifications to share important information with Google Cloud users. By default, these notifications are sent to members with certain Identity and Access Management (IAM) roles. With Essential Contacts, you can customize who receives notifications by providing your own list of contacts.\n\n## Remediation\n\n### From Console\n\n1. Go to `Essential Contacts` by visiting [https://console.cloud.google.com/iam-admin/essential-contacts](https://console.cloud.google.com/iam-admin/essential-contacts)\n2. Make sure the organization appears in the resource selector at the top of the page. The resource selector tells you what project, folder, or organization you are currently managing contacts for.\n3. Click `+Add contact`\n4. In the `Email` and `Confirm Email` fields, enter the email address of the contact.\n5. From the `Notification categories` drop-down menu, select the notification categories that you want the contact to receive communications for.\n6. Click `Save`\n\n### From Command Line\n\n1. To add an organization Essential Contacts run a command:\n\n```bash\ngcloud essential-contacts create --email=\"\u003cEMAIL\u003e\" \\--notification-categories=\"\u003cNOTIFICATION_CATEGORIES\u003e\" \\--organization=\u003cORGANIZATION_ID\u003e\n```\n\n### Default Value\n\nBy default, there are no Essential Contacts configured.\nIn the absence of an Essential Contact, the following IAM roles are used to identify users to notify for the following categories:\n\n- Legal: `roles/billing.admin`\n- Security: `roles/resourcemanager.organizationAdmin`\n- Suspension: `roles/owner`\n- Technical: `roles/owner`\n- Technical Incidents: `roles/owner`\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_17",
    "description": "When you use Dataproc, cluster and job data is stored on Persistent Disks (PDs) associated with the Compute Engine VMs in your cluster and in a Cloud Storage staging bucket. This PD and bucket data is encrypted using a Google-generated data encryption key (DEK) and key encryption key (KEK). The CMEK feature allows you to create, use, and revoke the key encryption key (KEK). Google still controls the data encryption key (DEK).",
    "title": "1.17 Ensure that dataproc cluster is encrypted using customer-managed encryption key",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.17",
      "cis_level": "2",
      "cis_section_id": "1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Dataproc"
    },
    "documentation": "## Description\n\nWhen you use Dataproc, cluster and job data is stored on Persistent Disks (PDs) associated with the Compute Engine VMs in your cluster and in a Cloud Storage staging bucket. This PD and bucket data is encrypted using a Google-generated data encryption key (DEK) and key encryption key (KEK). The CMEK feature allows you to create, use, and revoke the key encryption key (KEK). Google still controls the data encryption key (DEK).\n\n\"Cloud services offer the ability to protect data related to those services using encryption keys managed by the customer within Cloud KMS. These encryption keys are called customer-managed encryption keys (CMEK). When you protect data in Google Cloud services with CMEK, the CMEK key is within your control.\n\n## Remediation\n\n### From Console\n\n1. Login to the GCP Console and navigate to the Dataproc Cluster page by visiting [https://console.cloud.google.com/dataproc/clusters](https://console.cloud.google.com/dataproc/clusters).\n2. Select the project from the projects dropdown list.\n3. On the `Dataproc Cluster` page, click on the `Create Cluster` to create a new cluster with Customer managed encryption keys.\n4. On `Create a cluster` page, perform below steps:\n\n    * Inside `Set up cluster` section perform below steps:\n\n      In the `Name` textbox, provide a name for your cluster.\n        - From `Location` select the location in which you want to deploy a cluster.\n        - Configure other configurations as per your requirements.\n    * Inside `Configure Nodes` and `Customize cluster` section configure the settings as per your requirements.\n    * Inside `Manage security` section, perform below steps:\n        - From `Encryption`, select `Customer-managed key`.\n        - Select a customer-managed key from dropdown list.\n        - Ensure that the selected KMS Key have Cloud KMS CryptoKey Encrypter/Decrypter role assign to Dataproc Cluster service account(\"serviceAccount:service-\u003cproject_number\u003e@compute-system.iam.gserviceaccount.com\").\n        - Click on `Create` to create a cluster.\n    * Once the cluster is created migrate all your workloads from the older cluster to the new cluster and delete the old cluster by performing the below steps:\n        - On the `Clusters` page, select the old cluster and click on `Delete cluster`.\n        - On the `Confirm deletion` window, click on `Confirm` to delete the cluster.\n        - Repeat step above for other Dataproc clusters available in the selected project.\n    * Change the project from the project dropdown list and repeat the remediation procedure for other Dataproc clusters available in other projects.\n\n### From Command Line\n\nBefore creating cluster ensure that the selected KMS Key have Cloud KMS CryptoKey Encrypter/Decrypter role assign to Dataproc Cluster service account(\"serviceAccount:service-\u003cproject_number\u003e@compute-system.iam.gserviceaccount.com\").\nRun clusters create command to create new cluster with customer-managed key:\n\n```bash\ngcloud dataproc clusters create \u003ccluster_name\u003e --region=us-central1 --gce-pd-kms-key=\u003ckey_resource_name\u003e\n```\n\nThe above command will create a new cluster in the selected region. Once the cluster is created migrate all your workloads from the older cluster to the new cluster and Run clusters delete command to delete cluster:\n\n```bash\ngcloud dataproc clusters delete \u003ccluster_name\u003e --region=us-central1\n```\n\nRepeat step no. 1 to create a new Dataproc cluster.Change the project by running the below command and repeat the remediation procedure for other projects:\n\n```bash\ngcloud config set project \u003cproject_ID\u003e\"\n```\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 1 Identity and Access Management",
    "category_hierarchy": [
      "CIS v2.0.0",
      "1 Identity and Access Management"
    ],
    "control_id": "gcp_compliance.control.cis_v200_1_18",
    "description": "Google Cloud Functions allow you to host serverless code that is executed when an event is triggered, without the requiring the management a host operating system. These functions can also store environment variables to be used by the code that may contain authentication or other information that needs to remain confidential.",
    "title": "1.18 Ensure Secrets are Not Stored in Cloud Functions Environment Variables by Using Secret Manager",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "1.18",
      "cis_level": "1",
      "cis_section_id": "1",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Dataproc"
    },
    "documentation": "## Description\n\nGoogle Cloud Functions allow you to host serverless code that is executed when an event is triggered, without the requiring the management a host operating system. These functions can also store environment variables to be used by the code that may contain authentication or other information that needs to remain confidential.\n\nIt is recommended to use the Secret Manager, because environment variables are stored unencrypted, and accessible for all users who have access to the code.\n\n## Remediation\n\nEnable the Secret Manager API for the GCP Project.\n\n### From Console\n\n1. Within the project you wish to enable, select the Navigation hamburger menu in the top left. Hover over 'APIs \u0026 Services' to under the heading 'Serverless', then select 'Enabled APIs \u0026 Services' in the menu that opens up.\n2. Click the button '+ Enable APIS and Services'\n3. In the Search bar, search for 'Secret Manager API' and select it.\n4. Click the blue box that says 'Enable'.\n\n### From Command Line\n\n1. Within the project you wish to enable the API in, run the following command.\n\n```bash\ngcloud services enable Secret Manager API\n```\n\nReviewing Environment Variables That Should Be Migrated to Secret Manager\n### From Console\n\n1. Log in to the Google Cloud Web Portal [https://console.cloud.google.com/](https://console.cloud.google.com/)\n2. Go to Cloud Functions\n3. Click on a function name from the list\n4. Click on Edit and review the Runtime environment for variables that should be secrets. Leave this list open for the next step.\n\n### From Command Line\n\n1. To view a list of your cloud functions run\n\n```bash\ngcloud functions list\n```\n\n2. For each cloud function run the following command.\n\n```bash\ngcloud functions describe \u003cfunction_name\u003e\n```\n\n3. Review the settings of the buildEnvironmentVariables and environmentVariables. Keep this information for the next step.\n\nMigrating Environment Variables to Secrets within the Secret Manager\n\n### From Console\n\n1. Go to the Secret Manager page in the Cloud Console.\n2. On the Secret Manager page, click Create Secret.\n3. On the Create secret page, under Name, enter the name of the Environment Variable you are replacing. This will then be the Secret Variable you will\nreference in your code.\n4. You will also need to add a version. This is the actual value of the variable that will be referenced from the code. To add a secret version when creating the initial secret, in the Secret value field, enter the value from the Environment Variable you are replacing.\n5. Leave the Regions section unchanged.\n6. Click the Create secret button.\n7. RepeatforallEnvironmentVariables\n\n### From Command Line\n\n1. Run the following command with the Environment Variable name you are replacing in the `\u003csecret-id\u003e`. It is most secure to point this command to a file with the Environment Variable value located in it, as if you entered it via command line it would show up in your shell’s command history.\n\n```bash\ngcloud secrets create \u003csecret-id\u003e --data-file=\"/path/to/file.txt\"\n```\n\nGranting your Runtime's Service Account Access to Secrets\n\n### From Console\n\n1. Within the project containing your runtime login with account that has the 'roles/secretmanager.secretAccessor' permission.\n2. Select the Navigation hamburger menu in the top left. Hover over 'Security' to under the then select 'Secret Manager' in the menu that opens up.\n3. Click the name of a secret listed in this screen.\n4. If it is not already open, click Show Info Panel in this screen to open the panel.\n  - In the info panel, click Add principal.\n  - In the New principals field, enter the service account your function uses for its identity. (If you need help locating or updating your runtime's service account, please see the 'docs/securing/function-identity#runtime_service_account' reference.)\n5. In the Select a role dropdown, choose Secret Manager and then Secret Manager Secret Accessor.\n\n### From Command Line\n\nAs of the time of writing, using Google CLI to list Runtime variables is only in beta. Because this is likely to change we are not including it here.Modifying the Code to use the Secrets in Secret Manager\n\n### From Console\n\nThis depends heavily on which language your runtime is in. For the sake of the brevity of this recommendation, please see the '/docs creating-and-accessing-secrets#access' reference for language specific instructions.\n\n### From Command Line\n\nThis depends heavily on which language your runtime is in. For the sake of the brevity of this recommendation, please see the' /docs/creating-and-accessing-secrets#access' reference for language specific instructions.\n\nDeleting the Insecure Environment Variables - **Be certain to do this step last**. Removing variables from code actively referencing them will prevent it from completing successfully.\n\n### From Console\n\n1. Select the Navigation hamburger menu in the top left. Hover over 'Security' then select 'Secret Manager' in the menu that opens up.\n2. Click the name of a function. Click Edit.\n3. Click Runtime, build and connections settings to expand the advanced configuration options.\n4. Click 'Security’. Hover over the secret you want to remove, then click 'Delete'.\n5. Click Next. Click Deploy. The latest version of the runtime will now reference the secrets in Secret Manager.\n\n### From Command Line\n\n```bash\ngcloud functions deploy \u003cFunction name\u003e --remove-env-vars \u003cenv vars\u003e\n```\n\nIf you need to find the env vars to remove, they are from the step where ‘gcloud functions describe \u003cfunction_name\u003e’ was run.\n\n### Default Value\n\nBy default Secret Manager is not enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_1",
    "description": "It is recommended that Cloud Audit Logging is configured to track all admin activities and read, write access to user data.",
    "title": "2.1 Ensure that Cloud Audit Logging is configured properly",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.1",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that Cloud Audit Logging is configured to track all admin activities and read, write access to user data.\n\nCloud Audit Logging maintains two audit logs for each project, folder, and organization: Admin Activity and Data Access.\n\n1. Admin Activity logs contain log entries for API calls or other administrative actions that modify the configuration or metadata of resources. Admin Activity audit logs are enabled for all services and cannot be configured.\n2. Data Access audit logs record API calls that create, modify, or read user-provided data. These are disabled by default and should be enabled.\n\nThere are three kinds of Data Access audit log information:\n   - Admin read: Records operations that read metadata or configuration information. Admin activity audit logs record writes of metadata and configuration information that cannot be disabled.\n   - Data read: Records operations that read user-provided data.\n   - Data write: Records operations that write user-provided data.\n\nIt is recommended to have an effective default audit config configured in such a way that:\n\n1. Logtype is set to DATA_READ (to log user activity tracking) and DATA_WRITES (to log changes/tampering to user data).\n2. Audit config is enabled for all the services supported by the Data Access audit logs feature.\n3. Logs should be captured for all users, i.e., there are no exempted users in any of the audit config sections. This will ensure overriding the audit config will not contradict the requirement.\n\n## Remediation\n\n### From Console\n\n1. Go to `Audit Logs` by visiting [https://console.cloud.google.com/iam-admin/audit](https://console.cloud.google.com/iam-admin/audit).\n2. Follow the steps at [https://cloud.google.com/logging/docs/audit/configure-data-access](https://cloud.google.com/logging/docs/audit/configure-data-access) to enable audit logs for all Google Cloud services. Ensure that no exemptions are allowed.\n\n### From Command Line\n\n1. To read the project's IAM policy and store it in a file run a command:\n\n```bash\ngcloud projects get-iam-policy PROJECT_ID \u003e /tmp/project_policy.yaml\n```\n\nAlternatively, the policy can be set at the organization or folder level. If setting the policy at the organization level, it is not necessary to also set it for each folder or project.\n\n```bash\ngcloud organizations get-iam-policy ORGANIZATION_ID \u003e /tmp/org_policy.yaml \ngcloud resource-manager folders get-iam-policy FOLDER_ID \u003e /tmp/folder_policy.yaml\n```\n\n2. Edit policy in /tmp/policy.yaml, adding or changing only the audit logs configuration to:\n\n  **Note: Admin Activity Logs are enabled by default, and cannot be disabled. So they are not listed in these configuration changes.**\n\n```bash\nauditConfigs:\n- auditLogConfigs:\n  - logType: DATA_WRITE\n  - logType: DATA_READ\n  service: allServices\n```\n\n**Note**: `exemptedMembers`: is not set as audit logging should be enabled for all the users\n\n3. To write new IAM policy run command:\n\n```bash\ngcloud organizations set-iam-policy ORGANIZATION_ID /tmp/org_policy.yaml \ngcloud resource-manager folders set-iam-policy FOLDER_ID /tmp/folder_policy.yaml\ngcloud projects set-iam-policy PROJECT_ID /tmp/project_policy.yaml\n```\n\nIf the preceding command reports a conflict with another change, then repeat these steps, starting with the first step.\n\n### Default Value\n\nAdmin Activity logs are always enabled. They cannot be disabled. Data Access audit logs are disabled by default because they can be quite large.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_2",
    "description": "It is recommended to create a sink that will export copies of all the log entries. This can help aggregate logs from multiple projects and export them to a Security Information and Event Management (SIEM).",
    "title": "2.2 Ensure that sinks are configured for all log entries",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.2",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended to create a sink that will export copies of all the log entries. This can help aggregate logs from multiple projects and export them to a Security Information and Event Management (SIEM).\n\nLog entries are held in Cloud Logging. To aggregate logs, export them to a SIEM. To keep them longer, it is recommended to set up a log sink. Exporting involves writing a filter that selects the log entries to export, and choosing a destination in Cloud Storage, BigQuery, or Cloud Pub/Sub. The filter and destination are held in an object called a sink. To ensure all log entries are exported to sinks, ensure that there is no filter configured for a sink. Sinks can be created in projects, organizations, folders, and billing accounts.\n\n## Remediation\n\n### From Console\n\n1. Go to `Logs Router` by visiting https://console.cloud.google.com/logs/router.\n2. Click on the arrow symbol with `CREATE SINK` text.\n3. Fill out the fields for `Sink details`.\n4. Choose Cloud Logging bucket in the Select sink destination drop down menu.\n5. Choose a log bucket in the next drop down menu.\n6. If an inclusion filter is not provided for this sink, all ingested logs will be routed to the destination provided above. This may result in higher than expected resource usage.\n7. Click `Create Sink`.\n\nFor more information, see\n[https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create](https://cloud.google.com/logging/docs/export/configure_export_v2#dest-create).\n### From Command Line\n\n1. To create a sink to export all log entries in a Google Cloud Storage bucket:\n\n```bash\ngcloud logging sinks create \u003csink-name\u003e storage.googleapis.com/DESTINATION_BUCKET_NAME\n```\n\n2. Sinks can be created for a folder or organization, which will include all projects.\n\n```bash\ngcloud logging sinks create \u003csink-name\u003e storage.googleapis.com/DESTINATION_BUCKET_NAME --include-children --folder=FOLDER_ID | --organization=ORGANIZATION_ID\n```\n\n**Note**:\n1. A sink created by the command-line above will export logs in storage buckets. However, sinks can be configured to export logs into BigQuery, or Cloud Pub/Sub, or `Custom Destination`.\n2. While creating a sink, the sink option `--log-filter` is not used to ensure the sink exports all log entries.\n3. A sink can be created at a folder or organization level that collects the logs of all the projects underneath bypassing the option `--include-children` in the gcloud command.\n4. By default, there are no sinks configured.\n\n### Default Value\n\nBy default, there are no sinks configured.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_3",
    "description": "Enabling retention policies on log buckets will protect logs stored in cloud storage buckets from being overwritten or accidentally deleted. It is recommended to set up retention policies and configure Bucket Lock on all storage buckets that are used as log sinks.",
    "title": "2.3 Ensure that retention policies on log buckets are configured using Bucket Lock",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.3",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nEnabling retention policies on log buckets will protect logs stored in cloud storage buckets from being overwritten or accidentally deleted. It is recommended to set up retention policies and configure Bucket Lock on all storage buckets that are used as log sinks.\n\nLogs can be exported by creating one or more sinks that include a log filter and a destination. As cloud logging receives new log entries, they are compared against each sink. If a log entry matches a sink's filter, then a copy of the log entry is written to the destination.\n\nSinks can be configured to export logs in storage buckets. It is recommended to configure a data retention policy for these cloud storage buckets and to lock the data retention policy; thus permanently preventing the policy from being removed.\nThis way, if the system is ever compromised by an attacker or a malicious insider who wants to cover their tracks, the activity logs are definitely preserved for forensics and security investigations.\n\nLocking a bucket is an irreversible action. Once you lock a bucket, you cannot remove the retention policy from the bucket or decrease the retention period for the policy. You \nwill then have to wait for the retention period for all items within the bucket before you can delete them, and then the bucket.\n\n## Remediation\n\n### From Console\n\n1. If sinks are not configured, first follow the instructions in the recommendation: `Ensure that sinks are configured for all Log entries`.\n2. For each storage bucket configured as a sink, go to the Cloud Storage browser at `https://console.cloud.google.com/storage/browser/\u003cBUCKET_NAME\u003e`.\n3. Select the Bucket Lock tab near the top of the page.\n4. In the Retention policy entry, click the Add Duration link. The `Set a retention policy` dialog box appears.\n5. Enter the desired length of time for the retention period and click `Save policy`.\n6. Set the `Lock status` for this retention policy to `Locked`.\n\n### From Command Line\n\n1. To list all sinks destined to storage buckets:\n\n```bash\ngcloud logging sinks list --folder=FOLDER_ID | --organization=ORGANIZATION_ID | --project=PROJECT_ID\n```\n\n2. For each storage bucket listed above, set a retention policy and lock it:\n\n```bash\ngsutil retention set [TIME_DURATION] gs://[BUCKET_NAME]\ngsutil retention lock gs://[BUCKET_NAME]\n```\n\nFor more information, visit [https://cloud.google.com/storage/docs/using-bucket-lock#set-policy](https://cloud.google.com/storage/docs/using-bucket-lock#set-policy).\n\n### Default Value\n\nBy default, storage buckets used as log sinks do not have retention policies and Bucket Lock configured.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_4",
    "description": "In order to prevent unnecessary project ownership assignments to users/service-accounts and further misuses of projects and resources, all roles/Owner assignments should be monitored. Members (users/Service-Accounts) with a role assignment to primitive role roles/Owner are project owners.",
    "title": "2.4 Ensure log metric filter and alerts exist for project ownership assignments/changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.4",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIn order to prevent unnecessary project ownership assignments to users/service-accounts and further misuses of projects and resources, all `roles/Owner` assignments should be monitored.\nMembers (users/Service-Accounts) with a role assignment to primitive role `roles/Owner` are project owners.\nThe project owner has all the privileges on the project the role belongs to. These are summarized below:\n- All viewer permissions on all GCP Services within the project\n- Permissions for actions that modify the state of all GCP services within the project\n- Manage roles and permissions for a project and all resources within the project\n- Set up billing for a project\nGranting the owner role to a member (user/Service-Account) will allow that member to modify the Identity and Access Management (IAM) policy. Therefore,grant the owner role only if the member has a legitimate purpose to manage the IAM policy. This is because the project IAM policy contains sensitive access control data. Having a minimal set of users allowed to manage IAM policy will simplify any auditing that may be necessary.\n\n## Remediation\n\n### From Console\nCreate the prescribed log metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```bash\n(protoPayload.serviceName=\"cloudresourcemanager.googleapis.com\")\nAND (ProjectOwnership OR projectOwnerInvitee)\nOR (protoPayload.serviceData.policyDelta.bindingDeltas.action=\"REMOVE\"\nAND protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\") OR (protoPayload.serviceData.policyDelta.bindingDeltas.action=\"ADD\"\nAND protoPayload.serviceData.policyDelta.bindingDeltas.role=\"roles/owner\")\n```\n\n4. Click `Submit Filter`. The logs display based on the filter text entered by the user.\n5. In the `Metric Editor` menu on the right, fill out the name field. Set `Units` to `1`(default) and the `Type` to `Counter`. This ensures that the log metric counts the number of log entries matching the advanced logs query.\n6. Click `Create Metric`.\n\n#### Create the display prescribed Alert Policy:\n\n1. Identify the newly created metric under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the desired metric and select `Create alert from Metric`. A new page opens.\n3. Fill out the alert policy configuration and click `Save`. Choosethealertingthreshold and configuration that makes sense for the user's organization. For example, a threshold of zero(0) for the most recent value will ensure that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate a prescribed Log Metric:\n   - Use the command: gcloud beta logging metrics create.\n   - Reference for Command Usage: [https://cloud.google.com/sdk/gcloud/reference/beta/logging/metrics/create](https://cloud.google.com/sdk/gcloud/reference/beta/logging/metrics/create).\n\nCreate a prescribed Alert Policy:\n   - Use the command: gcloud alpha monitoring policies create.\n   - Reference for Command Usage: [https://cloud.google.com/sdk/gcloud/reference/alpha/monitoring/policies/create](https://cloud.google.com/sdk/gcloud/reference/alpha/monitoring/policies/create).\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_5",
    "description": "Cloud audit logging records information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by GCP services. Cloud audit logging provides a history of GCP API calls for an account, including API calls made via the console, SDKs, command-line tools, and other GCP services.",
    "title": "2.5 Ensure that the log metric filter and alerts exist for Audit Configuration changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.5",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nGoogle Cloud Platform (GCP) services write audit log entries to the Admin Activity and Data Access logs to help answer the questions of, \"who did what, where, and when?\" within GCP projects.\n\nCloud audit logging records information includes the identity of the API caller, the time of the API call, the source IP address of the API caller, the request parameters, and the response elements returned by GCP services.\n\nAdmin activity and data access logs produced by cloud audit logging enable security analysis, resource change tracking, and compliance auditing.\n\nConfiguring the metric filter and alerts for audit configuration changes ensures the recommended state of audit configuration is maintained so that all activities in the project are audit-able at any point in time.\n\n## Remediation\n\n### From Console\n\nCreate the prescribed log metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```\nprotoPayload.methodName=\"SetIamPolicy\" AND\nprotoPayload.serviceData.policyDelta.auditConfigDeltas:*\n```\n\n4. Click `Submit Filter`. Display logs appear based on the filter text entered by the user.\n5. In the `Metric Editor` menu on the right, fill out the name field. Set `Units` to `1` (default) and `Type` to `Counter`. This will ensure that the log metric counts the number of log entries matching the user's advanced logs query.\n6. Click `Create Metric`.\n\nCreate a prescribed Alert Policy:\n\n1. Identify the new metric the user just created, under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the new metric and select `Create alert from Metric`. A new page opens.\n3. Fill out the alert policy configuration and click `Save`.Choose the alerting threshold and configuration that makes sense for the organization. For example, a threshold of zero(0) for the most recent value will ensure that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate a prescribed Log Metric:\n   - Use the command: gcloud beta logging metrics create.\n   - Reference for Command Usage [https://cloud.google.com/sdk/gcloud/reference/beta/logging/metrics/create](https://cloud.google.com/sdk/gcloud/reference/beta/logging/metrics/create).\n\nCreate a prescribed Alert Policy:\n   - Use the command: gcloud alpha monitoring policies create.\n   - Reference for Command Usage [https://cloud.google.com/sdk/gcloud/reference/alpha/monitoring/policies/create](https://cloud.google.com/sdk/gcloud/reference/alpha/monitoring/policies/create).\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_6",
    "description": "It is recommended that a metric filter and alarm be established for changes to Identity and Access Management (IAM) role creation, deletion and updating activities.",
    "title": "2.6 Ensure that the log metric filter and alerts exist for Custom Role changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.6",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that a metric filter and alarm be established for changes to Identity and Access Management (IAM) role creation, deletion and updating activities.\n\nGoogle Cloud IAM provides predefined roles that give granular access to specific Google Cloud Platform resources and prevent unwanted access to other resources. However, to cater to organization-specific needs, IAM also provides the ability to create custom roles.\n\nProject owners and administrators with the Organization Role Administrator role or the IAM Role Administrator role can create custom roles. Monitoring role creation, deletion and updating activities will help in identifying any over-privileged role at early stages.\n\n## Remediation\n\n### From Console\n\nCreate the prescribed log metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```\nresource.type=\"iam_role\"\nAND (protoPayload.methodName = \"google.iam.admin.v1.CreateRole\"\nOR protoPayload.methodName=\"google.iam.admin.v1.DeleteRole\"\nOR protoPayload.methodName=\"google.iam.admin.v1.UpdateRole\")\n```\n\n4. Click Submit Filter. Display logs appear based on the filter text entered by the user.\n5. In the Metric Editor menu on the right, fill out the name field. Set Units to 1 (default) and Type to Counter. This ensures that the log metric counts the number of log entries matching the advanced logs query.\n6. Click Create Metric.\n\nCreate a prescribed Alert Policy:\n1. Identify the new metric that was just created under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the metric and select `Create alert from Metric`. A new page displays.\n3. Fill out the alert policy configuration and click `Save`.Choosethealertingthreshold and configuration that makes sense for the user's organization. For example, a threshold of zero(0) for the most recent value ensures that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate the prescribed Log Metric:\n- Use the command: gcloud logging metrics create\n\nCreate the prescribed Alert Policy:\n- Use the command: gcloud alpha monitoring policies create\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_7",
    "description": "It is recommended that a metric filter and alarm be established for Virtual Private Cloud (VPC) Network Firewall rule changes.",
    "title": "2.7 Ensure that the log metric filter and alerts exist for VPC Network Firewall rule changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.7",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that a metric filter and alarm be established for Virtual Private Cloud(VPC) Network Firewall rule changes.\n\nMonitoring for create or update firewall rule events gives insight to network access changes and may reduce the time it takes to detect suspicious activity.\n\n## Remediation\n\n### From Console\n\nCreate the prescribed log metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```bash\nresource.type=\"gce_firewall_rule\"\nAND (protoPayload.methodName:\"compute.firewalls.patch\"\nOR protoPayload.methodName:\"compute.firewalls.insert\"\nOR protoPayload.methodName:\"compute.firewalls.delete\")\n```\n\n4. Click `Submit Filter`. Display logs appear based on the filter text entered by the user.\n5. In the `Metric Editor` menu on the right, fill out the name field. Set `Units` to `1` (default) and `Type` to `Counter`. This ensures that the log metric counts the number of log entries matching the advanced logs query.\n6. Click `Create Metric`.\n\nCreate the prescribed Alert Policy:\n\n1. Identify the newly created metric under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the new metric and select `Create alert from Metric`. A new page displays.\n3. Fill out the alert policy configuration and click `Save`. Choose the alerting threshold and configuration that makes sense for the user's organization. For example, a threshold of zero(0) for the most recent value ensures that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate the prescribed Log Metric:\n- Use the command: gcloud logging metrics create\n\nCreate the prescribed Alert Policy:\n- Use the command: gcloud alpha monitoring policies create\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_8",
    "description": "It is recommended that a metric filter and alarm be established for Virtual Private Cloud (VPC) network route changes.",
    "title": "2.8 Ensure that the log metric filter and alerts exist for VPC network route changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.8",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that a metric filter and alarm be established for Virtual Private Cloud (VPC) network route changes.\n\nGoogle Cloud Platform (GCP) routes define the paths network traffic takes from a VM instance to another destination. The other destination can be inside the organization VPC network (such as another VM) or outside of it. Every route consists of a destination and a next hop. Traffic whose destination IP is within the destination range is sent to the next hop for delivery.\n\nMonitoring changes to route tables will help ensure that all VPC traffic flows through an expected path.\n\n## Remediation\n\n### From Console\n\nCreate the prescribed Log Metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`\n3. Clear any text and add:\n\n```\nresource.type=\"gce_route\"\nAND (protoPayload.methodName:\"compute.routes.delete\"\nOR protoPayload.methodName:\"compute.routes.insert\")\n```\n\n4. Click `Submit Filter`. Display logs appear based on the filter text entered by the user.\n5. In the `Metric Editor` menu on the right, fill out the name field. Set `Units` to `1` (default) and `Type` to `Counter`. This ensures that the log metric counts the number of log entries matching the user's advanced logs query.\n6. Click `Create Metric`.\n\nCreate the prescribed alert policy:\n\n1. Identify the newly created metric under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the new metric and select `Create alert from Metric`. A new page displays.\n3. Fill out the alert policy configuration and click `Save`. Choose the alerting threshold and configuration that makes sense for the user's organization. For example, a threshold of zero(0) for the most recent value ensures that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate the prescribed Log Metric:\n- Use the command: gcloud logging metrics create\n\nCreate the prescribed Alert Policy:\n- Use the command: gcloud alpha monitoring policies create\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_9",
    "description": "It is recommended that a metric filter and alarm be established for Virtual Private Cloud (VPC) network changes.",
    "title": "2.9 Ensure that the log metric filter and alerts exist for VPC network changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.9",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that a metric filter and alarm be established for Virtual Private Cloud (VPC) changes.\n\nIt is possible to have more than one VPC within a project. In addition, it is also possible to create a peer connection between two VPCs enabling network traffic to route between VPCs.\n\nMonitoring changes to a VPC will help ensure VPC traffic flow is not getting impacted.\n\n## Remediation\n\n### From Console\n\nCreate the prescribed log metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```bash\nresource.type=gce_network\nAND (protoPayload.methodName=\"beta.compute.networks.insert\"\nOR protoPayload.methodName=\"beta.compute.networks.patch\"\nOR protoPayload.methodName=\"v1.compute.networks.delete\"\nOR protoPayload.methodName=\"v1.compute.networks.removePeering\" OR protoPayload.methodName=\"v1.compute.networks.addPeering\")\n```\n\n4. Click `Submit Filter`. Display logs appear based on the filter text entered by the user.\n5. In the `Metric Editor` menu on the right, fill out the name field. Set `Units` to `1` (default) and `Type` to `Counter`. This ensures that the log metric counts the number of log entries matching the user's advanced logs query.\n6. Click `Create Metric`.\n\nCreate the prescribed alert policy:\n\n1. Identify the newly created metric under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the new metric and select `Create alert from Metric`. A new page appears.\n3. Fill out the alert policy configuration and click `Save`. Choose the alerting threshold and configuration that makes sense for the user's organization. For example, a threshold of 0 for the most recent value will ensure that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate the prescribed Log Metric:\n- Use the command: gcloud logging metrics create\n\nCreate the prescribed Alert Policy:\n- Use the command: gcloud alpha monitoring policies create\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_10",
    "description": "It is recommended that a metric filter and alarm be established for Cloud Storage Bucket IAM changes.",
    "title": "2.10 Ensure that the log metric filter and alerts exist for Cloud Storage IAM permission changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.10",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that a metric filter and alarm be established for Cloud Storage Bucket IAM changes.\n\nMonitoring changes to cloud storage bucket permissions may reduce the time needed to detect and correct permissions on sensitive cloud storage buckets and objects inside the bucket.\n\n## Remediation\n\n### From Console\n\nCreate the prescribed log metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```bash\nresource.type=\"gcs_bucket\"\nAND protoPayload.methodName=\"storage.setIamPermissions\"\n```\n\n4. Click `Submit Filter`. Display logs appear based on the filter text entered by the user.\n5. In the `Metric Editor` menu on right,fill out the name field.Set `Units` to `1` (default) and `Type` to `Counter`. This ensures that the log metric counts the number of log entries matching the user's advanced logs query.\n6. Click `Create Metric`.\n\nCreate the prescribed Alert Policy:\n\n1. Identify the newly created metric under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the new metric and select `Create alert from Metric`. A new page appears.\n3. Fill out the alert policy configuration and click Save.Choosethealertingthreshold and configuration that makes sense for the user's organization. For example, a threshold of zero(0) for the most recent value will ensure that a notification is triggered for every owner change in the project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n- Condition: above\n- Threshold: 0\n- For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate the prescribed Log Metric:\n- Use the command: gcloud beta logging metrics create\n\nCreate the prescribed Alert Policy:\n- Use the command: gcloud alpha monitoring policies create\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_11",
    "description": "It is recommended that a metric filter and alarm be established for SQL instance configuration changes.",
    "title": "2.11 Ensure that the log metric filter and alerts exist for SQL instance configuration changes",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.11",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nIt is recommended that a metric filter and alarm be established for SQL instance configuration changes.\n\nMonitoring changes to SQL instance configuration changes may reduce the time needed to detect and correct misconfigurations done on the SQL server.\n\nBelow are a few of the configurable options which may the impact security posture of an SQL instance:\n   - Enable auto backups and high availability: Misconfiguration may adversely impact business continuity, disaster recovery, and high availability\n   - Authorize networks: Misconfiguration may increase exposure to untrusted networks\n\n## Remediation\n\n### From Console\n\nCreate the prescribed Log Metric:\n\n1. Go to `Logging/Logs-based Metrics` by visiting [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics) and click \"CREATE METRIC\".\n2. Click the down arrow symbol on the `Filter Bar` at the rightmost corner and select `Convert to Advanced Filter`.\n3. Clear any text and add:\n\n```bash\nprotoPayload.methodName=\"cloudsql.instances.update\"\n```\n\n4. Click `Submit Filter`. Display logs appear based on the filter text entered by the user.\n5. In the `Metric Editor` menu on right,fill out the name field.Set `Units` to `1` (default) and Type to Counter. This ensures that the log metric counts the number of log entries matching the user's advanced logs query.\n6. Click `Create Metric`\n\n#### Create the prescribed alert policy:\n\n1. Identify the newly created metric under the section `User-defined Metrics` at [https://console.cloud.google.com/logs/metrics](https://console.cloud.google.com/logs/metrics).\n2. Click the 3-dot icon in the rightmost column for the new metric and select `Create alert from Metric`. A new page appears.\n3. Fill out the alert policy configuration and click `Save`. Choose the alerting threshold and configuration that makes sense for the user's organization. For example, a threshold of zero(0) for the most recent value will ensure that a notification is triggered for every owner change in the user's project:\n\n```bash\nSet `Aggregator` to `Count`\nSet `Configuration`:\n - Condition: above\n - Threshold: 0\n - For: most recent value\n```\n\n4. Configure the desired notifications channels in the section `Notifications`.\n5. Name the policy and click `Save`.\n\n### From Command Line\n\nCreate the prescribed log metric:\n   - Use the command: gcloud logging metrics create\n\nCreate the prescribed alert policy:\n   - Use the command: gcloud alpha monitoring policies create\n   - Reference for Command Usage: [https://cloud.google.com/sdk/gcloud/reference/alpha/monitoring/policies/create](https://cloud.google.com/sdk/gcloud/reference/alpha/monitoring/policies/create).\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_12",
    "description": "Cloud DNS logging records the queries from the name servers within your VPC to Stackdriver. Logged queries can come from Compute Engine VMs, GKE containers, or other GCP resources provisioned within the VPC.",
    "title": "2.12 Ensure that Cloud DNS logging is enabled for all VPC networks",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.12",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/DNS"
    },
    "documentation": "## Description\n\nCloud DNS logging records the queries from the name servers within your VPC to Stackdriver. Logged queries can come from Compute Engine VMs, GKE containers, or other GCP resources provisioned within the VPC.\n\nSecurity monitoring and forensics cannot depend solely on IP addresses from VPC flow logs, especially when considering the dynamic IP usage of cloud resources, HTTP virtual host routing, and other technology that can obscure the DNS name used by a client from the IP address.\n\nMonitoring of Cloud DNS logs provides visibility to DNS names requested by the clients within the VPC. These logs can be monitored for anomalous domain names, evaluated against threat intelligence , and\n\nNote: For full capture of DNS, firewall must block egress UDP/53 (DNS) and TCP/443 (DNS over HTTPS) to prevent client from using external DNS name server for resolution.\n\n## Remediation\n\n### From Command Line\n\nAdd New DNS Policy With Logging Enabled\n\nFor each VPC network that needs a DNS policy with logging enabled:\n\n```bash\ngcloud dns policies create enable-dns-logging --enable-logging --description=\"Enable DNS Logging\" --networks=VPC_NETWORK_NAME\n```\n\nThe VPC_NETWORK_NAME can be one or more networks in comma-separated list\n\nEnable Logging for Existing DNS Policy\nFor each VPC network that has an existing DNS policy that needs logging enabled\n\n```bash\ngcloud dns policies update POLICY_NAME --enable-logging --networks=VPC_NETWORK_NAME\n```\n\nThe VPC_NETWORK_NAME can be one or more networks in comma-separated list\n\n### Default Value\n\nCloud DNS logging is disabled by default on each network.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_13",
    "description": "GCP Cloud Asset Inventory is services that provides a historical view of GCP resources and IAM policies through a time-series database. The information recorded includes metadata on Google Cloud resources, metadata on policies set on Google Cloud projects or resources, and runtime information gathered within a Google Cloud resource.",
    "title": "2.13 Ensure Cloud Asset Inventory Is Enabled",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.13",
      "cis_level": "1",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Project"
    },
    "documentation": "## Description\n\nGCP Cloud Asset Inventory is services that provides a historical view of GCP resources and IAM policies through a time-series database. The information recorded includes metadata on Google Cloud resources, metadata on policies set on Google Cloud projects or resources, and runtime information gathered within a Google Cloud resource.\n\nThe GCP resources and IAM policies captured by GCP Cloud Asset Inventory enables security analysis, resource change tracking, and compliance auditing.\n\nIt is recommended GCP Cloud Asset Inventory be enabled for all GCP projects.\n\n## Remediation\n\n### From Console\n\nEnable the Cloud Asset API:\n\n1. Go to `API \u0026 Services/Library` by visiting [https://console.cloud.google.com/apis/library](https://console.cloud.google.com/apis/library)\n2. Search for `Cloud Asset API` and select the result for *Cloud Asset API*\n3. Click the `ENABLE` button.\n\n### From Command Line\n\nEnable the Cloud Asset API:\n\n1. Enable the Cloud Asset API through the services interface:\n\n```bash\ngcloud services enable cloudasset.googleapis.com\n```\n\n### Default Value\n\nThe Cloud Asset Inventory API is disabled by default in each project.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_14",
    "description": "GCP Access Transparency provides audit logs for all actions that Google personnel take in your Google Cloud resources.",
    "title": "2.14 Ensure 'Access Transparency' is 'Enabled'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.14",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Project"
    },
    "documentation": "## Description\n\nGCP Access Transparency provides audit logs for all actions that Google personnel take in your Google Cloud resources.\n\nControlling access to your information is one of the foundations of information security. Given that Google Employees do have access to your organizations' projects for support reasons, you should have logging in place to view who, when, and why your information is being accessed.\n\n## Remediation\n\n### From Console\n\n#### Add privileges to enable Access Transparency\n\n1. From the Google Cloud Home, within the project you wish to check, click on the Navigation hamburger menu in the top left. Hover over the 'IAM and Admin'. Select `IAM` in the top of the column that opens.\n2. Click the blue button the says `+add` at the top of the screen.\n3. In the `principals` field, select a user or group by typing in their associated email address.\n4. Click on the `role` field to expand it. In the filter field enter `Access Transparency Admin` and select it.\n5. Click `save`.\n\n#### Verify that the Google Cloud project is associated with a billing account\n\n1. From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Select `Billing`.\n2. If you see `This project is not associated with a billing account` you will need to enter billing information or switch to a project with a billing account.\n\n#### Enable Access Transparency\n\n1. From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Hover over the IAM \u0026 Admin Menu. Select `settings` in the middle of the column that opens.\n2. Click the blue button labeled Enable `Access Transparency for Organization`\n\n### Default Value\n\nBy default Access Transparency is not enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_15",
    "description": "GCP Access Approval enables you to require your organizations' explicit approval whenever Google support try to access your projects. You can then select users within your organization who can approve these requests through giving them a security role in IAM. All access requests display which Google Employee requested them in an email or Pub/Sub message that you can choose to Approve. This adds an additional control and logging of who in your organization approved/denied these requests.",
    "title": "2.15 Ensure 'Access Approval' is 'Enabled'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.15",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Project"
    },
    "documentation": "## Description\n\nGCP Access Approval enables you to require your organizations' explicit approval whenever Google support try to access your projects. You can then select users within your organization who can approve these requests through giving them a security role in IAM. All access requests display which Google Employee requested them in an email or Pub/Sub message that you can choose to Approve. This adds an additional control and logging of who in your organization approved/denied these requests.\n\nControlling access to your information is one of the foundations of information security. Google Employees do have access to your organizations' projects for support reasons. With Access Approval, organizations can then be certain that their information is accessed by only approved Google Personnel.\n\n## Remediation\n\n### From Console\n\n1. From the Google Cloud Home, within the project you wish to enable, click on the Navigation hamburger menu in the top left. Hover over the `Security` Menu. Select `Access Approval` in the middle of the column that opens.\n2. The status will be displayed here. On this screen, there is an option to click `Enroll`. If it is greyed out and you see an error bar at the top of the screen that says `Access Transparency is not enabled` please view the corresponding reference within this section to enable it.\n3. In the second screen click `Enroll`.\n\nGrant an IAM Group or User the role with permissions to Add Users to be Access Approval message Recipients\n\n1. From the Google Cloud Home, within the project you wish to enable, click on the Navigation hamburger menu in the top left. Hover over the `IAM and Admin`. Select `IAM` in the middle of the column that opens.\n2. Click the blue button the says `+ADD` at the top of the screen.\n3. In the `principals` field, select a user or group by typing in their associated email address.\n4. Click on the role field to expand it. In the filter field enter `Access Approval Approver` and select it.\n5. Click `save`.\n\nAdd a Group or User as an Approver for Access Approval Requests\n\n1. As a user with the `Access Approval Approver` permission, within the project where you wish to add an email address to which request will be sent, click on the Navigation hamburger menu in the top left. Hover over the `Security` Menu. Select `Access Approval` in the middle of the column that opens.\n2. Click `Manage Settings`\n3. Under `Set up approval notifications`, enter the email address associated with a Google Cloud User or Group you wish to send Access Approval requests to. All future access approvals will be sent as emails to this address.\n\n### From Command Line\n\n1. To update all services in an entire project, run the following command from an account that has permissions as an 'Approver for Access Approval Requests'\n\n```bash\ngcloud access-approval settings update --project=\u003cproject name\u003e --enrolled_services=all --notification_emails='\u003cemail recipient for access approval requests\u003e@\u003cdomain name\u003e'\n```\n\n### Default Value\n\nBy default Access Approval and its dependency of Access Transparency are not enabled.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 2 Logging and Monitoring",
    "category_hierarchy": [
      "CIS v2.0.0",
      "2 Logging and Monitoring"
    ],
    "control_id": "gcp_compliance.control.cis_v200_2_16",
    "description": "Logging enabled on a HTTPS Load Balancer will show all network traffic and its destination.",
    "title": "2.16 Ensure Logging is enabled for HTTP(S) Load Balancer",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "2.16",
      "cis_level": "2",
      "cis_section_id": "2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Logging"
    },
    "documentation": "## Description\n\nLogging enabled on a HTTPS Load Balancer will show all network traffic and its destination.\n\nLogging will allow you to view HTTPS network traffic to your web applications.\n\n## Remediation\n\n### From Console\n\n1. From Google Cloud home open the Navigation Menu in the top left.\n2. Under the `Networking` heading select `Network services`.\n3. Select the HTTPS load-balancer you wish to audit.\n4. Select `Edit` then `Backend Configuration`.\n5. Select `Edit` on the corresponding backend service.\n6. Click `Enable Logging`.\n7. Set `Sample Rate` to a desired value. This is a percentage as a decimal point. 1.0 is 100%.\n\n### From Command Line\n\n1. Run the following command\n\n```bash\ngcloud compute backend-services update \u003cserviceName\u003e --region=REGION --enable-logging --logging-sample-rate=\u003cpercentageAsADecimal\u003e\n```\n\n### Default Value\n\nBy default logging for https load balancing is disabled. When logging is enabled it sets the default sample rate as 1.0 or 100%. Ensure this value fits the need of your organization to avoid high storage costs.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_1",
    "description": "To prevent use of default network, a project should not have a default network.",
    "title": "3.1 Ensure that the default network does not exist in a project",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.1",
      "cis_level": "2",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nTo prevent use of `default` network, a project should not have a `default` network.\n\nThe `default` network has a preconfigured network configuration and automatically generates the following insecure firewall rules:\n\n- default-allow-internal: Allows ingress connections for all protocols and ports among instances in the network.\n- default-allow-ssh: Allows ingress connections on TCP port 22(SSH) from any source to any instance in the network.\n- default-allow-rdp: Allows ingress connections on TCP port 3389(RDP) from any source to any instance in the network.\n- default-allow-icmp: Allows ingress ICMP traffic from any source to any instance in the network.\n\nThese automatically created firewall rules do not get audit logged and cannot be configured to enable firewall rule logging.\n\nFurthermore, the default network is an auto mode network, which means that its subnets use the same predefined range of IP addresses, and as a result, it's not possible to use Cloud VPN or VPC Network Peering with the default network. \n\nBased on organization security and networking requirements, the organization should create a new network and delete the `default` network. \n\n## Remediation\n\n### From Console\n\n1. Login to the `VPC networks` page by visiting: [https://console.cloud.google.com/networking/networks/list](https://console.cloud.google.com/networking/networks/list)\n2. Click the network named `default`.\n3. On the network detail page, click `EDIT`.\n4. Click `DELETE VPC NETWORK`.\n5. If needed, create a new network to replace the default network.\n\n### From Command Line\n\nFor each Google Cloud Platform project,\n\n1. Delete the default network:\n\n```bash\ngcloud compute networks delete default\n```\n\n2. If needed, create a new network to replace it:\n\n```bash\ngcloud compute networks create NETWORK_NAME\n```\n\n### Prevention\n\nThe user can prevent the default network and its insecure default firewall rules from being created by setting up an Organization Policy to `Skip default network creation` at [https://console.cloud.google.com/iam-admin/orgpolicies/compute-skipDefaultNetworkCreation](https://console.cloud.google.com/iam-admin/orgpolicies/compute-skipDefaultNetworkCreation).\n\n### Default Value\n\nBy default, for each project, a `default` network is created.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_2",
    "description": "In order to prevent use of legacy networks, a project should not have a legacy network configured.",
    "title": "3.2 Ensure legacy networks do not exist for a project",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.2",
      "cis_level": "1",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nIn order to prevent use of legacy networks, a project should not have a legacy network configured. As of now, Legacy Networks are gradually being phased out, and you can no longer create projects with them. This recommendation is to check older projects to ensure that they are not using Legacy Networks.\n\nLegacy networks have a single network IPv4 prefix range and a single gateway IP address for the whole network. The network is global in scope and spans all cloud regions. Subnetworks cannot be created in a legacy network and are unable to switch from legacy to auto or custom subnet networks. Legacy networks can have an impact for high network traffic projects and are subject to a single point of contention or failure.\n\n## Remediation\n\nFor each Google Cloud Platform project,\n\n1. Follow the documentation and create a non-legacy network suitable for the organization's requirements.\n2. Follow the documentation and delete the networks in the `legacy` mode.\n\n### Default Value\n\nBy default, networks are not created in the `legacy` mode.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_3",
    "description": "Cloud Domain Name System (DNS) is a fast, reliable and cost-effective domain name system that powers millions of domains on the internet. Domain Name System Security Extensions (DNSSEC) in Cloud DNS enables domain owners to take easy steps to protect their domains against DNS hijacking and man-in-the-middle and other attacks.",
    "title": "3.3 Ensure that DNSSEC is enabled for Cloud DNS",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.3",
      "cis_level": "1",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/DNS"
    },
    "documentation": "## Description\n\nCloud Domain Name System (DNS) is a fast, reliable and cost-effective domain name system that powers millions of domains on the internet. Domain Name System Security Extensions (DNSSEC) in Cloud DNS enables domain owners to take easy steps to protect their domains against DNS hijacking and man-in-the-middle and other attacks.\n\nDomain Name System Security Extensions (DNSSEC) adds security to the DNS protocol by enabling DNS responses to be validated. Having a trustworthy DNS that translates a domain name like [www.example.com](www.example.com) into its associated IP address is an increasingly important building block of today’s web-based applications. Attackers can hijack this process of domain/IP lookup and redirect users to a malicious site through DNS hijacking and man-in-the-middle attacks. DNSSEC helps mitigate the risk of such attacks by cryptographically signing DNS records. As a result, it prevents attackers from issuing fake DNS responses that may misdirect browsers to nefarious websites.\n\n## Remediation\n\n### From Console\n\n1. Go to `Cloud DNS` by visiting [https://console.cloud.google.com/net-services/dns/zones](https://console.cloud.google.com/net-services/dns/zones).\n2. For each zone of `Type Public`, set `DNSSEC` to `On`.\n\n### From Command Line\n\nUse the below command to enable `DNSSEC` for Cloud DNS Zone Name.\n\n```bash\ngcloud dns managed-zones update ZONE_NAME --dnssec-state on\n```\n\n### Default Value\n\nBy default DNSSEC is not enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_4",
    "description": "DNSSEC algorithm numbers in this registry may be used in CERT RRs. Zone signing (DNSSEC) and transaction security mechanisms (SIG(0) and TSIG) make use of particular subsets of these algorithms. The algorithm used for key signing should be a recommended one and it should be strong.",
    "title": "3.4 Ensure that RSASHA1 is not used for the key-signing key in Cloud DNS DNSSEC",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.4",
      "cis_level": "1",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/DNS"
    },
    "documentation": "## Description\n\n**NOTE**: Currently, the SHA1 algorithm has been removed from general use by Google, and, if being used, needs to be whitelisted on a project basis by Google and will also, therefore, require a Google Cloud support contract.\n\nDNSSEC algorithm numbers in this registry may be used in CERT RRs. Zone signing (DNSSEC) and transaction security mechanisms (SIG(0) and TSIG) make use of particular subsets of these algorithms. The algorithm used for key signing should be a recommended one and it should be strong.\n\nThe algorithm used for key signing should be a recommended one and it should be strong. When enabling DNSSEC for a managed zone, or creating a managed zone with DNSSEC, the user can select the DNSSEC signing algorithms and the denial-of-existence type. Changing the DNSSEC settings is only effective for a managed zone if DNSSEC is not already enabled. If there is a need to change the settings for a managed zone where it has been enabled, turn DNSSEC off and then re-enable it with different settings.\n\n## Remediation\n\n### From Command Line\n\n1. If it is necessary to change the settings for a managed zone where it has been enabled, NSSEC must be turned off and re-enabled with different settings. To turn off DNSSEC, run the following command:\n\n```bash\ngcloud dns managed-zones update ZONE_NAME --dnssec-state off\n```\n\n2. To update key-signing for a reported managed DNS Zone, run the following command:\n\n```bash\ngcloud dns managed-zones update ZONE_NAME \\\n--dnssec-state on \\\n--ksk-algorithm KSK_ALGORITHM \\\n--ksk-key-length KSK_KEY_LENGTH \\\n--zsk-algorithm ZSK_ALGORITHM \\\n--zsk-key-length ZSK_KEY_LENGTH \\\n--denial-of-existence DENIAL_OF_EXISTENCE\n```\n\nSupported algorithm options and key lengths are as follows.\n\n```\nAlgorithm         KSK Length    ZSK Length\n---------         ----------    ----------\nRSASHA1           1024,2048     1024,2048\nRSASHA256         1024,2048     1024,2048\nRSASHA512         1024,2048     1024,2048\nECDSAP256SHA256   256           256\nECDSAP384SHA384   384           384\n```\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_5",
    "description": "DNSSEC algorithm numbers in this registry may be used in CERT RRs. Zone signing (DNSSEC) and transaction security mechanisms (SIG(0) and TSIG) make use of particular subsets of these algorithms. The algorithm used for key signing should be a recommended one and it should be strong.",
    "title": "3.5 Ensure that RSASHA1 is not used for the zone-signing key in Cloud DNS DNSSEC",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.5",
      "cis_level": "1",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/DNS"
    },
    "documentation": "## Description\n\n**NOTE**: Currently, the SHA1 algorithm has been removed from general use by Google, and, if being used, needs to be whitelisted on a project basis by Google and will also, therefore, require a Google Cloud support contract.\n\nDNSSEC algorithm numbers in this registry may be used in CERT RRs. Zone signing (DNSSEC) and transaction security mechanisms (SIG(0) and TSIG) make use of particular subsets of these algorithms. The algorithm used for key signing should be a recommended one and it should be strong.\n\nThe algorithm used for key signing should be a recommended one and it should be strong. When enabling DNSSEC for a managed zone, or creating a managed zone with DNSSEC, the user can select the DNSSEC signing algorithms and the denial-of-existence type. Changing the DNSSEC settings is only effective for a managed zone if DNSSEC is not already enabled. If there is a need to change the settings for a managed zone where it has been enabled, turn\nDNSSEC off and then re-enable it with different settings.\n\n## Remediation\n\n### From Command Line\n\n1. If it is necessary to change the settings for a managed zone where it has been enabled, `DNSSEC` must be turned off and re-enabled with different settings. To turn off DNSSEC, run the following command:\n\n```bash\ngcloud dns managed-zones update ZONE_NAME --dnssec-state off\n```\n\n2. To update zone-signing for a reported managed DNS Zone, run the following command:\n\n```bash\ngcloud dns managed-zones update ZONE_NAME \\\n--dnssec-state on \\\n--ksk-algorithm KSK_ALGORITHM \\\n--ksk-key-length KSK_KEY_LENGTH \\\n--zsk-algorithm ZSK_ALGORITHM \\\n--zsk-key-length ZSK_KEY_LENGTH \\\n--denial-of-existence DENIAL_OF_EXISTENCE\n```\n\nSupported algorithm options and key lengths are as follows.\n\n```\nAlgorithm         KSK Length    ZSK Length\n---------         ----------    ----------\nRSASHA1           1024,2048     1024,2048\nRSASHA256         1024,2048     1024,2048\nRSASHA512         1024,2048     1024,2048\nECDSAP256SHA256   256           256\nECDSAP384SHA384   384           384\n```\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_6",
    "description": "GCP Firewall Rules are specific to a VPC Network. Each rule either allows or denies traffic when its conditions are met. Its conditions allow the user to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.",
    "title": "3.6 Ensure that SSH access is restricted from the internet",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.6",
      "cis_level": "2",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nGCP `Firewall Rules` are specific to a `VPC Network`. Each rule either `allows` or `denies` traffic when its conditions are met. Its conditions allow the user to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.\n\nFirewall rules are defined at the VPC network level and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, only an `IPv4` address or `IPv4 block in CIDR` notation can be used. Generic `(0.0.0.0/0)` incoming traffic from the internet to VPC or VM instance using `SSH` on `Port 22` can be avoided.\n\nGCP `Firewall Rules` within a `VPC Network` apply to outgoing (egress) traffic from instances and incoming (ingress) traffic to instances in the network. Egress and ingress traffic flows are controlled even if the traffic stays within the network (for example, instance-to-instance communication). For an instance to have outgoing Internet access, the network must have a valid Internet gateway route or custom route whose destination IP is specified. This route simply defines the path to the Internet, to avoid the most general `(0.0.0.0/0)` destination `IP Range` specified from the Internet through `SSH` with the default `Port 22`. Generic access from the Internet to a specific IP Range needs to be restricted.\n\n## Remediation\n\n### From Console\n\n1. Go to `VPC Network`.\n2. Go to the `Firewall Rules`.\n3. Click the `Firewall Rule` you want to modify.\n4. Click `Edit`.\n5. Modify `Source IP ranges` to specific `IP`.\n6. Click `Save`.\n\n### From Command Line\n\n1. Update the Firewall rule with the new `SOURCE_RANGE` from the below command:\n\n```bash\ngcloud compute firewall-rules update FirewallName --allow=[PROTOCOL[:PORT[-PORT]],...] --source-ranges=[CIDR_RANGE,...]\n```\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_7",
    "description": "GCP Firewall Rules are specific to a VPC Network. Each rule either allows or denies traffic when its conditions are met. Its conditions allow users to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.",
    "title": "3.7 Ensure that RDP access is restricted from the Internet",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.7",
      "cis_level": "2",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nGCP `Firewall Rules` are specific to a `VPC Network`. Each rule either `allows` or `denies` traffic when its conditions are met. Its conditions allow the user to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.\n\nFirewall rules are defined at the VPC network level and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, only an `IPv4` address or `IPv4 block in CIDR` notation can be used. Generic `(0.0.0.0/0)` incoming traffic from the internet to VPC or VM instance using\n`RDP` on `Port 3389` can be avoided.\n\nGCP `Firewall Rules` within a `VPC Network` apply to outgoing (egress) traffic from instances and incoming (ingress) traffic to instances in the network. Egress and ingress traffic flows are controlled even if the traffic stays within the network (for example, instance-to-instance communication). For an instance to have outgoing Internet access, the network must have a valid Internet gateway route or custom route whose destination IP is specified. This route simply defines the path to the Internet, to avoid the most general `(0.0.0.0/0)` destination `IP Range` specified from the Internet through `RDP` with the default Port `3389`. Generic access from the Internet to a specific IP Range needs to be restricted.\n\n## Remediation\n\n### From Console\n\n1. Go to `VPC Network`.\n2. Go to the `Firewall Rules`.\n3. Click the `Firewall Rule` to be modified.\n4. Click `Edit`.\n5. Modify `Source IP ranges` to specific `IP`.\n6. Click `Save`.\n\n### From Command Line\n\n1. Update RDP Firewall rule with new `SOURCE_RANGE` from the below command:\n\n```bash\ngcloud compute firewall-rules update FirewallName --allow=[PROTOCOL[:PORT[- PORT]],...] --source-ranges=[CIDR_RANGE,...]\n```",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_8",
    "description": "Flow Logs is a feature that enables users to capture information about the IP traffic going to and from network interfaces in the organization's VPC Subnets. Once a flow log is created, the user can view and retrieve its data in Stackdriver Logging. It is recommended that Flow Logs be enabled for every business-critical VPC subnet.",
    "title": "3.8 Ensure that VPC Flow Logs is enabled for every subnet in a VPC Network",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.8",
      "cis_level": "2",
      "cis_section_id": "3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nFlow Logs is a feature that enables users to capture information about the IP traffic going to and from network interfaces in the organization's VPC Subnets. Once a flow log is created, the user can view and retrieve its data in Stackdriver Logging. It is recommended that Flow Logs be enabled for every business-critical VPC subnet.\n\nVPC networks and subnetworks not reserved for internal HTTP(S) load balancing provide logically isolated and secure network partitions where GCP resources can be launched. When Flow Logs are enabled for a subnet, VMs within that subnet start reporting on all Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) flows. Each VM samples the TCP and UDP flows it sees, inbound and outbound, whether the flow is to or from another VM, a host in the on-premises datacenter, a Google service, or a host on the Internet. If two GCP VMs are communicating, and both are in subnets that have VPC Flow Logs enabled, both VMs report the flows.\n\nFlow Logs supports the following use cases: \n- Network monitoring \n- Understanding network usage and optimizing network traffic expenses \n- Network forensics \n- Real-time security analysis\n\nFlow Logs provide visibility into network traffic for each VM inside the subnet and can be used to detect anomalous traffic or provide insight during security workflows.\n\nThe Flow Logs must be configured such that all network traffic is logged, the interval of logging is granular to provide detailed information on the connections, no logs are filtered, and metadata to facilitate investigations are included.\n\n**Note**: Subnets reserved for use by internal HTTP(S) load balancers do not support VPC flow logs. \n\n## Remediation\n\n### From Console\n\n1. Go to the VPC network GCP Console visiting [https://console.cloud.google.com/networking/networks/list](https://console.cloud.google.com/networking/networks/list)\n2. Click the name of a subnet, The `Subnet details` page displays.\n3. Click the `EDIT` button.\n4. Set `Flow Logs` to `On`.\n5. Expand the `Configure Logs` section.\n6. Set `Aggregation Interval` to  `5 SEC`.\n7. Check the box beside `Include metadata`.\n8. Set `Sample rate` to `100`.\n9. Click Save.\n\n**Note**: It is not possible to configure a Log filter from the console.\n\n### From Command Line\n\nTo enable VPC Flow Logs for a network subnet, run the following command:\n\n```bash\ngcloud compute networks subnets update [SUBNET_NAME] --region [REGION] --enable-flow-logs --logging-aggregation-interval=interval-5-sec --logging-flow-sampling=1 --logging-metadata=include-all\n```\n\n### Default Value\n\nBy default, Flow Logs is set to Off when a new VPC network subnet is created.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_9",
    "description": "Secure Sockets Layer (SSL) policies determine what port Transport Layer Security (TLS) features clients are permitted to use when connecting to load balancers.",
    "title": "3.9 Ensure no HTTPS or SSL proxy load balancers permit SSL policies with weak cipher suites",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.9",
      "cis_level": "1",
      "cis_section_id": "3",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nSecure Sockets Layer (SSL) policies determine what port Transport Layer Security (TLS) features clients are permitted to use when connecting to load balancers. To prevent usage of insecure features, SSL policies should use (a) at least TLS 1.2 with the MODERN profile; or (b) the RESTRICTED profile, because it effectively requires clients to use TLS 1.2 regardless of the chosen minimum TLS version; or (3) a CUSTOM profile that does not\nsupport any of the following features:\n```\nTLS_RSA_WITH_AES_128_GCM_SHA256\nTLS_RSA_WITH_AES_256_GCM_SHA384\nTLS_RSA_WITH_AES_128_CBC_SHA\nTLS_RSA_WITH_AES_256_CBC_SHA\nTLS_RSA_WITH_3DES_EDE_CBC_SHA\n```\n\nLoad balancers are used to efficiently distribute traffic across multiple servers. Both SSL proxy and HTTPS load balancers are external load balancers, meaning they distribute traffic from the Internet to a GCP network. GCP customers can configure load balancer SSL policies with a minimum TLS version (1.0, 1.1, or 1.2) that clients can use to establish a connection, along with a profile (Compatible, Modern, Restricted, or Custom) that specifies permissible cipher suites. To comply with users using outdated protocols, GCP load balancers can be configured to permit insecure cipher suites. In fact, the GCP default SSL policy uses a minimum TLS version of 1.0 and a Compatible profile, which allows the widest range of insecure cipher suites. As a result, it is easy for customers to configure a load balancer without even knowing that they are permitting outdated cipher suites.\n\n## Remediation\n\n### From Console\n\nIf the TargetSSLProxy or TargetHttpsProxy does not have an SSL policy configured, create a new SSL policy. Otherwise, modify the existing insecure policy.\n\n1. Navigate to the `SSL Policies` page by visiting: [https://console.cloud.google.com/net-security/sslpolicies](https://console.cloud.google.com/net-security/sslpolicies)\n2. Click on the name of the insecure policy to go to its `SSL policy details` page.\n3. Click `EDIT`.\n4. Set `Minimum TLS version` to `TLS 1.2`.\n5. Set `Profile` to `Modern` or `Restricted`.\n6. Alternatively, if the user selects the profile `Custom`, make sure that the following features are disabled:\n\n```bash\nTLS_RSA_WITH_AES_128_GCM_SHA256\nTLS_RSA_WITH_AES_256_GCM_SHA384\nTLS_RSA_WITH_AES_128_CBC_SHA\nTLS_RSA_WITH_AES_256_CBC_SHA\nTLS_RSA_WITH_3DES_EDE_CBC_SHA\n```\n\n### From Command Line\n\n1. For each insecure SSL policy, update it to use secure cyphers:\n\n```bash\ngcloud compute ssl-policies update NAME [--profile COMPATIBLE|MODERN|RESTRICTED|CUSTOM] --min-tls-version 1.2 [--custom-features\nFEATURES]\n```\n\n2. If the target proxy has a GCP default SSL policy, use the following command corresponding to the proxy type to update it.\n\n```bash\ngcloud compute target-ssl-proxies update TARGET_SSL_PROXY_NAME --ssl-policy SSL_POLICY_NAME\n\ngcloud compute target-https-proxies update TARGET_HTTPS_POLICY_NAME --sslpolicy SSL_POLICY_NAME\n```\n\n### Default Value\n\nThe GCP default SSL policy is the least secure setting: Min TLS 1.0 and Compatible profile.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 3 Networking",
    "category_hierarchy": [
      "CIS v2.0.0",
      "3 Networking"
    ],
    "control_id": "gcp_compliance.control.cis_v200_3_10",
    "description": "IAP authenticates the user requests to your apps via a Google single sign in. You can then manage these users with permissions to control access. It is recommended to use both IAP permissions and firewalls to restrict this access to your apps with sensitive information.",
    "title": "3.10 Use Identity Aware Proxy (IAP) to Ensure Only Traffic From Google IP Addresses are 'Allowed'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "3.10",
      "cis_level": "2",
      "cis_section_id": "3",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nIAP authenticates the user requests to your apps via a Google single sign in. You can then manage these users with permissions to control access. It is recommended to use both IAP permissions and firewalls to restrict this access to your apps with sensitive information.\n\nIAP ensure that access to VMs is controlled by authenticating incoming requests. Access to your apps and the VMs should be restricted by firewall rules that allow only the proxy IAP IP addresses contained in the 35.235.240.0/20 subnet. Otherwise, unauthenticated requests can be made to your apps. To ensure that load balancing works correctly health checks should also be allowed.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud Console [VPC network \u003e Firewall rules](https://console.cloud.google.com/networking/firewalls/list?_ga=2.72166934.480049361.1580860862-1336643914.1580248695).\n2. Select the checkbox next to the following rules:\n    - default-allow-http\n    - default-allow-https\n    - default-allow-internal\n3. Click Delete.\n4. Click Create firewall rule and set the following values:\n    - Name: allow-iap-traffic\n    - Targets: All instances in the network\n    - Source IP ranges (press Enter after you paste each value in the box, copy the value below the bold text including the dash):\n\n        * `IAP Proxy Addresses` 35.235.240.0/20\n        * `Google Health Check` 130.211.0.0/22\n        * `Google Health Check` 35.191.0.0/16\n\n    - Protocols and ports:\n\n        * Specified protocols and ports required for access and management of your app. For example most health check connection protocols would be covered by;\n        * tcp:80 (Default HTTP Health Check port)\n        * tcp:443--(Default HTTPS Health Check port)\n        \n  **Note: if you have custom ports used by your load balancers, you will need to list them here**\n\n5. When you're finished updating values, click Create.\n\n### Default Value\n\nBy default all traffic is allowed.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_1",
    "description": "It is recommended to configure your instance to not use the default Compute Engine service account because it has the Editor role on the project.",
    "title": "4.1 Ensure that instances are not configured to use the default service account",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.1",
      "cis_level": "1",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nIt is recommended to configure your instance to not use the default Compute Engine service account because it has the Editor role on the project.\n\nThe default Compute Engine service account has the Editor role on the project, which allows read and write access to most Google Cloud Services. To defend against privilege escalations if your VM is compromised and prevent an attacker from gaining access to all of your project, it is recommended to not use the default Compute Engine service account. Instead, you should create a new service account and assigning only the permissions\nneeded by your instance.\n\nThe default Compute Engine service account is named `[PROJECT_NUMBER]- compute@developer.gserviceaccount.com`.\n\n## Remediation\n\n### From Console\n\n1. Go to the `VM instances` page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n2. Click on the instance name to go to its `VM instance details` page.\n3. Click `STOP` and then click `EDIT`.\n4. Under the section `API and identity management`, select a service account other than the default Compute Engine service account. You may first need to create a new service account.\n5. Click `Save` and then click `START`.\n\n### From Command Line\n\n1. Stop the instance:\n\n```bash\ngcloud compute instances stop \u003cINSTANCE_NAME\u003e\n```\n\n2. Update the instance:\n\n```bash\ngcloud compute instances set-service-account \u003cINSTANCE_NAME\u003e --serviceaccount=\u003cSERVICE_ACCOUNT\u003e\n```\n\n3. Restart the instance:\n\n```bash\ngcloud compute instances start \u003cINSTANCE_NAME\u003e\n```\n\n### Default Value\n\nBy default, Compute instances are configured to use the default Compute Engine service account.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_2",
    "description": "To support principle of least privileges and prevent potential privilege escalation it is recommended that instances are not assigned to default service account Compute Engine default service account with Scope Allow full access to all Cloud APIs.",
    "title": "4.2 Ensure that instances are not configured to use the default service account with full access to all Cloud APIs",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.2",
      "cis_level": "1",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nTo support principle of least privileges and prevent potential privilege escalation it is recommended that instances are not assigned to default service account `Compute Engine default service account` with Scope `Allow full access to all Cloud APIs`.\n\nAlong with ability to optionally create, manage and use user managed custom service accounts, Google Compute Engine provides default service account `Compute Engine default service account` for an instances to access necessary cloud services. `Project Editor role` is assigned to `Compute Engine default service account` hence, This service account has almost all capabilities over all cloud services except billing. However, when `Compute Engine default service account` assigned to an instance it can operate in 3 scopes.\n\n```\n1. Allow default access: Allows only minimum access required to run an Instance (Least Privileges)\n2. Allow full access to all Cloud APIs: Allow full access to all the cloud APIs/Services (Too much access)\n3. Set access for each API: Allows Instance administrator to choose only those APIs that are needed to perform specific business functionality expected by instance\n```\n\nWhen an instance is configured with `Compute Engine default service account` with Scope `Allow full access to all Cloud APIs`, based on IAM roles assigned to the user(s) accessing Instance, it may allow user to perform cloud operations/API calls that user is not supposed to perform leading to successful privilege escalation.\n\n## Remediation\n\n### From Console\n\n1. Go to the `VM instances` page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n2. Click on the impacted VM instance.\n3. If the instance is not stopped, click the `Stop` button. Wait for the instance to be stopped.\n4. Next, click the `Edit` button.\n5. Scroll down to the `Service Account` section.\n6. Select a different service account or ensure that `Allow full access to all Cloud APIs` is not selected.\n7. Click the `Save` button to save your changes and then click `START`.\n\n### From Command Line\n\n1. Stop the instance:\n\n```bash\ngcloud compute instances stop \u003cINSTANCE_NAME\u003e\n```\n\n2. Update the instance:\n\n```bash\ngcloud compute instances set-service-account \u003cINSTANCE_NAME\u003e --service- account=\u003cSERVICE_ACCOUNT\u003e --scopes [SCOPE1, SCOPE2...]\n```\n\n3. Restart the instance:\n\n```bash\ngcloud compute instances start \u003cINSTANCE_NAME\u003e\n```\n\n### Default Value\n\nWhile creating an VM instance, default service account is used with scope `Allow default access`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_3",
    "description": "It is recommended to use Instance specific SSH key(s) instead of using common/shared project-wide SSH key(s) to access Instances.",
    "title": "4.3 Ensure 'Block Project-wide SSH keys' is enabled for VM instances",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.3",
      "cis_level": "1",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nIt is recommended to use Instance specific SSH key(s) instead of using common/shared project-wide SSH key(s) to access Instances.\n\nProject-wide SSH keys are stored in Compute/Project-meta-data. Project wide SSH keys can be used to login into all the instances within project. Using project-wide SSH keys eases the SSH key management but if compromised, poses the security risk which can impact all the instances within project. It is recommended to use Instance specific SSH keys which can limit the attack surface if the SSH keys are compromised.\n\n## Remediation\n\n### From Console\n\n1. Go to the `VM instances` page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances). It will list all the instances in your project.\n2. Click on the name of the Impacted instance\n3. Click `Edit` in the toolbar\n4. Under SSH Keys, go to the `Block project-wide SSH keys` checkbox\n5. To block users with project-wide SSH keys from connecting to this instance, select `Block project-wide SSH keys`\n6. Click `Save` at the bottom of the page\n7. Repeat steps for every impacted Instance\n\n### From Command Line\n\nTo block project-wide public SSH keys, set the metadata value to `TRUE`:\n\n```bash\ngcloud compute instances add-metadata \u003cINSTANCE_NAME\u003e --metadata block- project-ssh-keys=TRUE\n```\n\n### Default Value\n\nBy Default `Block Project-wide SSH keys` is not enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_4",
    "description": "Enabling OS login binds SSH certificates to IAM users and facilitates effective SSH certificate management.",
    "title": "4.4 Ensure oslogin is enabled for a Project",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.4",
      "cis_level": "1",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nEnabling OS login binds SSH certificates to IAM users and facilitates effective SSH certificate management.\n\nEnabling osLogin ensures that SSH keys used to connect to instances are mapped with IAM users. Revoking access to IAM user will revoke all the SSH keys associated with that particular user. It facilitates centralized and automated SSH key pair management which is useful in handling cases like response to compromised SSH key pairs and/or revocation of external/third-party/Vendor users.\n\n## Remediation\n\n### From Console\n\n1. Go to the VM compute metadata page by visiting: [https://console.cloud.google.com/compute/metadata](https://console.cloud.google.com/compute/metadata).\n2. Click `Edit`.\n3. Add a metadata entry where the key is `enable-oslogin` and the value is `TRUE`.\n4. Click `Save` to apply the changes.\n5. For every instance that overrides the project setting, go to the `VM Instances` page at [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n6. Click the name of the instance on which you want to remove the metadata value.\n7. At the top of the instance details page, click `Edit` to edit the instance settings.\n8. Under `Custom metadata`, remove any entry with key `enable-oslogin` and the value is `FALSE`\n9. At the bottom of the instance details page, click `Save` to apply your changes to the instance.\n\n### From Command Line\n\n1. Configure oslogin on the project\n\n```bash\ngcloud compute project-info add-metadata --metadata enable-oslogin=TRUE\n```\n\n2. Remove instance metadata that overrides the project setting.\n\n```bash\ngcloud compute instances remove-metadata INSTANCE_NAME --keys=enable-oslogin\n```\n\nOptionally, you can enable two factor authentication for OS login. For more information, see: [https://cloud.google.com/compute/docs/oslogin/setup-two-factor-authentication](https://cloud.google.com/compute/docs/oslogin/setup-two-factor-authentication).\n\n### Default Value\n\nBy default, parameter `enable-oslogin` is not set, which is equivalent to setting it to `FALSE`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_5",
    "description": "Interacting with a serial port is often referred to as the serial console, which is similar to using a terminal window, in that input and output is entirely in text mode and there is no graphical interface or mouse support.",
    "title": "4.5 Ensure 'Enable connecting to serial ports' is not enabled for VM Instance",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.5",
      "cis_level": "1",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nInteracting with a serial port is often referred to as the serial console, which is similar to using a terminal window, in that input and output is entirely in text mode and there is no graphical interface or mouse support. If you enable the interactive serial console on an instance, clients can attempt to connect to that instance from any IP address. Therefore interactive serial console support should be disabled.\n\nA virtual machine instance has four virtual serial ports. Interacting with a serial port is similar to using a terminal window, in that input and output is entirely in text mode and there is no graphical interface or mouse support.\n\nThe interactive serial console does not support IP-based access restrictions such as IP whitelists. If you enable the interactive serial console on an instance, clients can attempt to connect to that instance from any IP address. This allows anybody to connect to that instance if they know the correct SSH key, username, project ID, zone, and instance name.Therefore interactive serial console support should be disabled.\n\n## Remediation\n\nInteractive serial console support should be disabled.\n\n### From Console\n\n1. Login to Google Cloud console\n2. Go to Computer Engine\n3. Go to VMinstances\n4. Click on the Specific VM\n5. Click `EDIT`\n6. Unselect `Enable connecting to serial ports` below `Remote access` block.\n7. Click `Save`\n\n### From Command Line\n\nUse the below command to disable\n\n```bash\ngcloud compute instances add-metadata INSTANCE_NAME --zone=ZONE --metadata=serial-port-enable=false\n```\n\nor\n\n```bash\ngcloud compute instances add-metadata \u003cINSTANCE_NAME\u003e --zone=\u003cZONE\u003e --metadata=serial-port-enable=0\n```\n\n### Prevention\n\nYou can prevent VMs from having serial port access enable by `Disable VM serial port access` organization policy:\n[https://console.cloud.google.com/iam-admin/orgpolicies/compute-disableSerialPortAccess](https://console.cloud.google.com/iam-admin/orgpolicies/compute-disableSerialPortAccess).\n\n### Default Value\n\nBy default, connecting to serial ports is not enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_6",
    "description": "Compute Engine instance cannot forward a packet unless the source IP address of the packet matches the IP address of the instance. Similarly, GCP won't deliver a packet whose destination IP address is different than the IP address of the instance receiving the packet. However, both capabilities are required if you want to use instances to help route packets.",
    "title": "4.6 Ensure that IP forwarding is not enabled on Instances",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.6",
      "cis_level": "1",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nCompute Engine instance cannot forward a packet unless the source IP address of the packet matches the IP address of the instance. Similarly, GCP won't deliver a packet whose destination IP address is different than the IP address of the instance receiving the packet. However, both capabilities are required if you want to use instances to help route packets.\n\nForwarding of data packets should be disabled to prevent data loss or information disclosure.\n\nCompute Engine instance cannot forward a packet unless the source IP address of the packet matches the IP address of the instance. Similarly, GCP won't deliver a packet whose destination IP address is different than the IP address of the instance receiving the packet. However, both capabilities are required if you want to use instances to help route packets. To enable this source and destination IP check, disable the canIpForward field, which allows an instance to send and receive packets with non-matching destination or source IPs.\n\n## Remediation\n\nYou only edit the `canIpForward` setting at instance creation time. Therefore, you need to delete the instance and create a new one where `canIpForward` is set to `false`.\n\n### From Console\n\n1. Go to the `VM Instances` page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n2. Select the `VM Instance` you want to remediate.\n3. Click the `Delete` button.\n4. On the 'VM Instances' page, click `CREATE INSTANCE`.\n5. Create a new instance with the desired configuration. By default, the instance is configured to not allow IP forwarding.\n\n### From Command Line\n\n1. Delete the instance:\n\n```bash\ngcloud compute instances delete INSTANCE_NAME\n```\n\n2. Create a new instance to replace it, with `IP forwarding` set to `Off`\n\n```bash\ngcloud compute instances create\n```\n\n### Default Value\n\nBy default, instances are not configured to allow IP forwarding.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_7",
    "description": "Customer-Supplied Encryption Keys (CSEK) are a feature in Google Cloud Storage and Google Compute Engine. If you supply your own encryption keys, Google uses your key to protect the Google-generated keys used to encrypt and decrypt your data. By default, Google Compute Engine encrypts all data at rest. Compute Engine handles and manages this encryption for you without any additional actions on your part. However, if you wanted to control and manage this encryption yourself, you can provide your own encryption keys.",
    "title": "4.7 Ensure VM disks for critical VMs are encrypted with Customer-Supplied Encryption Keys (CSEK)",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.7",
      "cis_level": "2",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nCustomer-Supplied Encryption Keys (CSEK) are a feature in Google Cloud Storage and Google Compute Engine. If you supply your own encryption keys, Google uses your key to protect the Google-generated keys used to encrypt and decrypt your data. By default, Google Compute Engine encrypts all data at rest. Compute Engine handles and manages this encryption for you without any additional actions on your part. However, if you wanted to control and manage this encryption yourself, you can provide your own encryption keys.\n\nIf you provide your own encryption keys, Compute Engine uses your key to protect the Google-generated keys used to encrypt and decrypt your data. Only users who can provide the correct key can use resources protected by a customer-supplied encryption key.\n\nGoogle does not store your keys on its servers and cannot access your protected data unless you provide the key. This also means that if you forget or lose your key, there is no way for Google to recover the key or to recover any data encrypted with the lost key.\n\nAt least business critical VMs should have VM disks encrypted with CSEK.\n\n## Remediation\n\nCurrently there is no way to update the encryption of an existing disk. Therefore you should create a new disk with `Encryption` set to `Customer supplied`.\n\n### From Console\n\n1. Go to Compute Engine `Disks` by visiting: [https://console.cloud.google.com/compute/disks](https://console.cloud.google.com/compute/disks).\n2. Click `CREATE DISK`.\n3. Set `Encryption type` to `Customer supplied`\n4. Provide the `Key` in the box.\n5. Select `Wrapped key`.\n6. Click `Create`.\n\n### From Command Line\n\nIn the gcloud compute tool, encrypt a disk using the --csek-key-file flag during instance creation. If you are using an RSA-wrapped key, use the gcloud beta component:\n\n```bash\ngcloud compute instances create \u003cINSTANCE_NAME\u003e --csek-key-file \u003cexample-file.json\u003e\n```\n\nTo encrypt a standalone persistent disk:\n\n```bash\ngcloud compute disks create \u003cDISK_NAME\u003e --csek-key-file \u003cexample-file.json\u003e\n```\n\n### Default Value\n\nBy default, VM disks are encrypted with Google-managed keys. They are not encrypted with Customer-Supplied Encryption Keys.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_8",
    "description": "To defend against against advanced threats and ensure that the boot loader and firmware on your VMs are signed and untampered, it is recommended that Compute instances are launched with Shielded VM enabled.",
    "title": "4.8 Ensure Compute instances are launched with Shielded VM enabled",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.8",
      "cis_level": "2",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nTo defend against advanced threats and ensure that the boot loader and firmware on your VMs are signed and untampered, it is recommended that Compute instances are launched with Shielded VM enabled.\n\nShielded VMs are virtual machines (VMs) on Google Cloud Platform hardened by a set of security controls that help defend against rootkits and bootkits.\n\nIntegrity monitoring helps you understand and make decisions about the state of your VM instances and the Shielded VM vTPM enables Measured Boot by performing the measurements needed to create a known good boot baseline, called the integrity policy baseline. The integrity policy baseline is used for comparison with measurements from subsequent VM boots to determine if anything has changed.\n\nSecure Boot helps ensure that the system only runs authentic software by verifying the digital signature of all boot components, and halting the boot process if signature verification fails.\n\n## Remediation\n\nTo be able turn on `Shielded VM` on an instance, your instance must use an image with Shielded VM support.\n\n### From Console\n\n1. Go to the `VM instances` page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n2. Click on the instance name to see its `VM instance details` page.\n3. Click `STOP` to stop the instance.\n4. When the instancehas stopped, click `EDIT`.\n5. In the Shielded VM section,select `Turn on vTPM` and `Turn on Integrity Monitoring`.\n6. Optionally, if you do not use any custom or unsigned drivers on the instance, also select `Turn on Secure Boot`.\n7. Click the `Save` button to modify the instance and then click `START` to restart it.\n\n### From Command Line\n\nYou can only enable Shielded VM options on instances that have Shielded VM support. For a list of Shielded VM public images, run the gcloud compute images list command with the following flags:\n\n```bash\ngcloud compute images list --project gce-uefi-images --no-standard-images \n```\n\n1. Stop the instance:\n\n```bash\ngcloud compute instances stop \u003cINSTANCE_NAME\u003e\n```\n\n2. Update the instance:\n\n```bash\ngcloud compute instances update \u003cINSTANCE_NAME\u003e --shielded-vtpm --shielded-vmintegrity-monitoring\n```\n\n3. Optionally, if you do not use any custom or unsigned drivers on the instance, also turn on secure boot.\n\n```bash\ngcloud compute instances update \u003cINSTANCE_NAME\u003e --shielded-vm-secure-boot\n```\n\n4. Restart the instance:\n\n```bash\ngcloud compute instances start \u003cINSTANCE_NAME\u003e\n```\n\n### Prevention\n\nYou can ensure that all new VMs will be created with Shielded VM enabled by setting up an Organization Policy to for Shielded VM at [https://console.cloud.google.com/iam-admin/orgpolicies/compute-requireShieldedVm](https://console.cloud.google.com/iam-admin/orgpolicies/compute-requireShieldedVm). Learn more at: [https://cloud.google.com/security/shielded-cloud/shielded-vm#organization-policy-constraint](https://cloud.google.com/security/shielded-cloud/shielded-vm#organization-policy-constraint).\n\n### Default Value\n\nBy default, Compute Instances do not have Shielded VM enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_9",
    "description": "Compute instances should not be configured to have external IP addresses.",
    "title": "4.9 Ensure that Compute instances do not have public IP addresses",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.9",
      "cis_level": "2",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nCompute instances should not be configured to have external IP addresses.\n\nTo reduce your attack surface, Compute instances should not have public IP addresses. Instead, instances should be configured behind load balancers, to minimize the instance's exposure to the internet.\n\n## Remediation\n\nTo be able turn on Shielded VM on an instance, your instance must use an image with Shielded VM support.\n\n### From Console\n\n1. Gotothe `VM instances` page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n2. Click on the instance name to go the the `Instance detail page`.\n3. Click `Edit`.\n4. For each Network interface, ensure that `External IP` is set to `None`.\n5. Click Done and then click `Save`.\n\n### From Command Line\n\n1. Describe the instance properties:\n\n```bash\ngcloud compute instances describe \u003cINSTANCE_NAME\u003e --zone=\u003cZONE\u003e\n```\n\n2. Identify the access config name that contains the external IP address. This access config appears in the following format:\n\n```\nnetworkInterfaces:\n- accessConfigs:\n  - kind: compute#accessConfig\n    name: External NAT\n    natIP: 130.211.181.55\n    type: ONE_TO_ONE_NAT\n```\n\n3. Delete the access config.\n\n```bash\ngcloud compute instances delete-access-config \u003cINSTANCE_NAME\u003e --zone=\u003cZONE\u003e --access-config-name \u003cACCESS_CONFIG_NAME\u003e\n```\n\nIn the above example, the `ACCESS_CONFIG_NAME` is `External NAT`. The name of your access config might be different. The name of your access config might be different.\n\n### Prevention\n\nYou can configure the `Define allowed external IPs for VM instances` Organization Policy to prevent VMs from being configured with public IP addresses. Learn more at: [https://console.cloud.google.com/orgpolicies/compute-vmExternalIpAccess](https://console.cloud.google.com/orgpolicies/compute-vmExternalIpAccess)\n\n### Default Value\n\nBy default, Compute instances have a public IP address.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_10",
    "description": "In order to maintain the highest level of security all connections to an application should be secure by default.",
    "title": "4.10 Ensure that App Engine applications enforce HTTPS connections",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.10",
      "cis_level": "2",
      "cis_section_id": "4",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/AppEngine"
    },
    "documentation": "## Description\n\nIn order to maintain the highest level of security all connections to an application should be secure by default.\n\nInsecure HTTP connections maybe subject to eavesdropping which can expose sensitive data.\n\n## Remediation\n\nAdd a line to the app.yaml file controlling the application which enforces secure connections. For example\n\n```\nhandlers:\n- url: /.*\n  **secure: always**\n  redirect_http_response_code: 301\n  script: auto\n```\n\n[https://cloud.google.com/appengine/docs/standard/python3/config/appref](https://cloud.google.com/appengine/docs/standard/python3/config/appref)\n\n### Default Value\n\nBy default both HTTP and HTTP are supported\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_11",
    "description": "Google Cloud encrypts data at-rest and in-transit, but customer data must be decrypted for processing. Confidential Computing is a breakthrough technology which encrypts data in-use—while it is being processed. Confidential Computing environments keep data encrypted in memory and elsewhere outside the central processing unit (CPU).",
    "title": "4.11 Ensure that Compute instances have Confidential Computing enabled",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.11",
      "cis_level": "2",
      "cis_section_id": "4",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nGoogle Cloud encrypts data at-rest and in-transit, but customer data must be decrypted for processing. Confidential Computing is a breakthrough technology which encrypts data in-use while it is being processed. Confidential Computing environments keep data encrypted in memory and elsewhere outside the central processing unit (CPU).\n\nConfidential VMs leverage the Secure Encrypted Virtualization (SEV) feature of AMD EPYC™ CPUs. Customer data will stay encrypted while it is used, indexed, queried, or trained on. Encryption keys are generated in hardware, per VM, and not exportable. \nThanks to built-in hardware optimizations of both performance and security, there is no significant performance penalty to Confidential Computing workloads.\n\nConfidential Computing enables customers' sensitive code and other data encrypted in memory during processing. Google does not have access to the encryption keys. Confidential VM can help alleviate concerns about risk related to either dependency on Google infrastructure or Google insiders' access to customer data in the clear.\n\n## Remediation\n\nConfidential Computing can only be enabled when an instance is created. You must delete the current instance and create a new one.\n\n### From Console\n\n1. Go to the VM instances page by visiting: [https://console.cloud.google.com/compute/instances](https://console.cloud.google.com/compute/instances).\n2. Click `CREATE INSTANCE`.\n3. Fill out the desired configuration for your instance.\n4. Under the `Confidential VM service` section, check the option `Enable the Confidential Computing service on this VM instance`.\n5. Click `Create`.\n\n### From Command Line\n\nCreate a new instance with Confidential Compute enabled.\n\n```bash\ngcloud beta compute instances create INSTANCE_NAME --zone ZONE --confidential-compute --maintenance-policy=TERMINATE\n```\n\n### Default Value\n\nBy default, Confidential Computing is disabled for Compute instances.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 4 Virtual Machines",
    "category_hierarchy": [
      "CIS v2.0.0",
      "4 Virtual Machines"
    ],
    "control_id": "gcp_compliance.control.cis_v200_4_12",
    "description": "For the virtual machines where you manage the operating system in Infrastructure as a Service (IaaS), you are responsible for keeping these operating systems and programs up to date. There are multiple ways to manage updates yourself that would be difficult to fit into one recommendation. Check the CIS Benchmarks for each of your Operating Systems as well for potential solutions there. In this recommendation we will use a feature in Google Cloud via its VM manager API to manage updates called Operating System Patch Management (referred to OS Patch Management from here on out). This may requires installing the OS Config API if it is not already installed. Also if you install custom operating systems, they may not functionally support the local OS config agent required to gather operating system patch information and issue update commands. These update commands are the default Linux and Windows commands to install updates such as yum or apt. This feature allows for a central management to issue those commands. OS Patch management also does not host the updates itself, so your VMs will need to be public or be able to access the internet. This is not the only Patch Management solution available to your organization and you should weigh your needs before committing to using this.",
    "title": "4.12 Ensure the Latest Operating System Updates Are Installed On Your Virtual Machines in All Projects",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "4.12",
      "cis_level": "2",
      "cis_section_id": "4",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Compute"
    },
    "documentation": "## Description\n\nGoogle Cloud Virtual Machines have the ability via an OS Config agent API to periodically (about every 10 minutes) report OS inventory data. A patch compliance API periodically reads this data, and cross references metadata to determine if the latest updates are installed.This is not the only Patch Management solution available to your organization and you should weigh your needs before committing to using this method.\n\nKeeping virtual machine operating systems up to date is a security best practice. Using this service will simplify this process.\n\n## Remediation\n\n### From Console\n\n**Enabling OS Patch Management on a Project by Project Basis**\n\n**Install OS Config API for the Project**\n\n1. Navigate into a project. In the expanded hamburger menu located at the top left of the screen hover over \"APIs \u0026 Services\". Then in the menu right of that select \"API Libraries\"\n2. Search for \"VM Manager (OS Config API) or scroll down in the left hand column and select the filter labeled \"Compute\" where it is the last listed. Open this API.\n3. Click the blue 'Enable' button. \n\n**Add MetaData Tags for OSConfig Parsing**\n\n1. From the main Google Cloud console, open the hamburger menu in the top left. Mouse over Computer Engine to expand the menu next to it.\n2. Under the \"Settings\" heading, select \"Metadata\".\n3. In this view there will be a list of the project wide metadata tags for VMs. Click edit and 'add item' in the key column type 'enable-osconfig' and in the value column set it to 'true'.\n\n### From Command Line\n\n1. For project wide tagging, run the following command\n\n    ```bash\n    gcloud compute project-info add-metadata --project \u003cPROJECT_ID\u003e --metadata=enable-osconfig=TRUE\n    ```\n\nPlease see the reference /compute/docs/troubleshooting/vm-manager/verify-setup#metadata-enabled at the bottom for more options like instance specific tagging.\n\n**Note**: Adding a new tag via commandline may overwrite existing tags. You will need to do this at a time of low usage for the least impact.\n\n**Install and Start the Local OSConfig for Data Parsing**\n\nThere is no way to centrally manage or start the Local OSConfig agent. Please view the reference of manage-os#agent-install to view specific operating system commands.\n\n**Setup a project wide Service Account**\n\nPlease view Recommendation 4.1 to view how to setup a service account. Rerun the audit procedure to test if it has taken effect.\n\n**Enable NAT or Configure Private Google Access to allow Access to Public Update Hosting**\n\nFor the sake of brevity, please see the attached resources to enable NAT or Private Google Access. Rerun the audit procedure to test if it has taken effect.\n\nFrom Command Line:\n\n**Install OS Config API for the Project**\n\n1. In each project you wish to audit run gcloud services enable osconfig.googleapis.com\n\n**Install and Start the Local OSConfig for Data Parsing**\n\nPlease view the reference of manage-os#agent-install to view specific operating system commands.\n\n**Setup a project wide Service Account**\n\nPlease view Recommendation 4.1 to view how to setup a service account. Rerun the audit procedure to test if it has taken effect.\n\n**Enable NAT or Configure Private Google Access to allow Access to Public Update Hosting**\n\nFor the sake of brevity, please see the attached resources to enable NAT or Private Google Access. Rerun the audit procedure to test if it has taken effect. Determine if Instances can connect to public update hosting\n\nLinux\n\nDebian Based Operating Systems\n\n```bash\nsudo apt update\n```\n\nThe output should have a numbered list of lines with Hit: URL of updates.\n\nRedhat Based Operating Systems\n\n```bash\nyum check-update\n```\n\nThe output should show a list of packages that have updates available.\n\nWindows\n\n```bash\nping http://windowsupdate.microsoft.com/\n```\n\nThe ping should successfully be delivered and received.\n\n### Default Value\n\nBy default most operating systems and programs do not update themselves. The Google Cloud VM Manager which is a dependency of the OS Patch management feature is installed on Google Built OS images with a build date of v20200114 or later. The VM manager is not enabled in a project by default and will need to be setup.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_4"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_4",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 5 Storage",
    "category_hierarchy": [
      "CIS v2.0.0",
      "5 Storage"
    ],
    "control_id": "gcp_compliance.control.cis_v200_5_1",
    "description": "It is recommended that IAM policy on Cloud Storage bucket does not allows anonymous or public access.",
    "title": "5.1 Ensure that Cloud Storage bucket is not anonymously or publicly accessible",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "5.1",
      "cis_level": "1",
      "cis_section_id": "5",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Storage"
    },
    "documentation": "## Description\n\nIt is recommended that IAM policy on Cloud Storage bucket does not allows anonymous or public access.\n\nAllowing anonymous or public access grants permissions to anyone to access bucket content. Such access might not be desired if you are storing any sensitive data. Hence, ensure that anonymous or public access to a bucket is not allowed.\n\n## Remediation\n\n### From Console\n\n1. Go to `Storage browser` by visiting [https://console.cloud.google.com/storage/browser](https://console.cloud.google.com/storage/browser). \n2. Click on the bucket name to go to its `Bucket details` page. \n3. Click on the `Permissions` tab. \n4. Click `Delete` button in front of `allUsers` and `allAuthenticatedUsers` to remove that particular role assignment.\n\n### From Command Line\n\nRemove `allUsers` and `allAuthenticatedUsers` access.\n\n```bash\ngsutil iam ch -d allUsers gs://BUCKET_NAME\ngsutil iam ch -d allAuthenticatedUsers gs://BUCKET_NAME\n```\n\n### Prevention\n\nYou can prevent Storage buckets from becoming publicly accessible by setting up the `Domain restricted sharing` organization policy at: [https://console.cloud.google.com/iam-admin/orgpolicies/iam-allowedPolicyMemberDomains](https://console.cloud.google.com/iam-admin/orgpolicies/iam-allowedPolicyMemberDomains).\n\n### Default Value\n\nBy Default, Storage buckets are not publicly shared.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_5"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_5",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 5 Storage",
    "category_hierarchy": [
      "CIS v2.0.0",
      "5 Storage"
    ],
    "control_id": "gcp_compliance.control.cis_v200_5_2",
    "description": "It is recommended that uniform bucket-level access is enabled on Cloud Storage buckets.",
    "title": "5.2 Ensure that Cloud Storage buckets have uniform bucket-level access enabled",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "5.2",
      "cis_level": "2",
      "cis_section_id": "5",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/Storage"
    },
    "documentation": "## Description\n\nIt is recommended that uniform bucket-level access is enabled on Cloud Storage buckets.\n\nIt is recommended to use uniform bucket-level access to unify and simplify how you grant access to your Cloud Storage resources.\n\nCloud Storage offers two systems for granting users permission to access your buckets and objects: Cloud Identity and Access Management (Cloud IAM) and Access Control Lists (ACLs). These systems act in parallel - in order for a user to access a Cloud Storage resource, only one of the systems needs to grant the user permission. Cloud IAM is used throughout Google Cloud and allows you to grant a variety of permissions at the bucket and project levels. ACLs are used only by Cloud Storage and have limited permission options, but they allow you to grant permissions on a per-object basis.\n\nIn order to support a uniform permissioning system, cloud storage has uniform bucket- level access. Using this feature disables ACLs for all Cloud Storage resources: access to Cloud Storage resources then is granted exclusively through Cloud IAM. Enabling uniform bucket-level access guarantees that if a Storage bucket is not publicly accessible, no object in the bucket is publicly accessible either.\n\n## Remediation\n\n### From Console\n\n1. Open the Cloud Storage browser in the Google Cloud Console by visiting: [https://console.cloud.google.com/storage/browser](https://console.cloud.google.com/storage/browser) \n2. In the list of buckets, click on the name of the desired bucket.\n3. Select the `Permissions` tab near the top of the page. \n4. In the text box that starts with `This bucket uses fine-grained access control...`, click `Edit`. \n5. In the pop-up menu that appears, select `Uniform`. \n6. Click `Save`. \n\n### From Command Line\n\nUse the on option in a uniformbucketlevelaccess set command:\n\n```bash\ngsutil uniformbucketlevelaccess set on gs://BUCKET_NAME/\n```\n\n## Prevention\n\nYou can set up an Organization Policy to enforce that any new bucket has uniform bucket level access enabled. Learn more at: [https://cloud.google.com/storage/docs/setting-org-policies#uniform-bucket](https://cloud.google.com/storage/docs/setting-org-policies#uniform-bucket)\n\n### Default Value\n\nBy default, Cloud Storage buckets do not have uniform bucket-level access enabled.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_5"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_5",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.1 MySQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.1 MySQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_1_1",
    "description": "It is recommended to set a password for the administrative user (root by default) to prevent unauthorized access to the SQL database instances. This recommendation is applicable only for MySQL Instances. PostgreSQL does not offer any setting for No Password from the cloud console.",
    "title": "6.1.1 Ensure that a MySQL database instance does not allow anyone to connect with administrative privileges",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.1.1",
      "cis_level": "1",
      "cis_section_id": "6.1",
      "cis_type": "manual",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nIt is recommended to set a password for the administrative user (`root` by default) to prevent unauthorized access to the SQL database instances.\n\nThis recommendation is applicable only for *MySQL Instances*. PostgreSQL does not offer any setting for No Password from the cloud console.\n\nAt the time of MySQL Instance creation, not providing an administrative password allows anyone to connect to the SQL database instance with administrative privileges. The root password should be set to ensure only authorized users have these privileges.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Platform Console using [`https://console.cloud.google.com/sql/`](https://console.cloud.google.com/sql/)\n2. Select the instance to open its Overview page. \n3. Select `Access Control \u003e Users`.\n4. Click the `More actions icon` for the user to be updated. \n5. Select `Change password`, specify a `New password`, and click `OK`.\n\n### From Command Line\n\n1. Set a password to a MySql instance:\n\n```bash\ngcloud sql users set-password root --host=\u003chost\u003e --instance=\u003cinstance_name\u003e --prompt-for-password\n```\n\n2. A prompt will appear, requiring the user to enter a password:\n\n```bash\nInstance Password:\n```\n\n3. With a successful password configured, the following message should be seen:\n\n```bash\nUpdating Cloud SQL user...done.\n```\n\n### Default Value\n\nFrom the Google Cloud Platform Console, the `Create Instance` workflow enforces the rule to enter the root password unless the option `No Password` is selected explicitly.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.1 MySQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.1 MySQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_1_2",
    "description": "It is recommended to set skip_show_database database flag for Cloud SQL Mysql instance to on.",
    "title": "6.1.2 Ensure 'skip_show_database' database flag for Cloud SQL Mysql instance is set to 'on'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.1.2",
      "cis_level": "1",
      "cis_section_id": "6.1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nIt is recommended to set `skip_show_database` database flag for Cloud SQL MySQL instance to `on`.\n\n'skip_show_database' database flag prevents people from using the SHOW DATABASES statement if they do not have the SHOW DATABASES privilege. This can improve security if you have concerns about users being able to see databases belonging to other users. Its effect depends on the SHOW DATABASES privilege: If the variable value is ON, the SHOW DATABASES statement is permitted only to users who have the SHOW DATABASES privilege, and the statement displays all database names. If the value is OFF, SHOW DATABASES is permitted to all users, but displays the names of only those databases for which the user has the SHOW DATABASES or other privilege. This recommendation is applicable to Mysql database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the Mysql instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before click `Add item`, choose the flag `skip_show_database` from the drop-down menu, and set its value to `on`.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. List all Cloud SQL database Instances\n\n```bash\ngcloud sql instances list\n```\n\n2. Configure the `skip_show_database` database flag for every Cloud SQL MySQL database instance using the below command\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags skip_show_database=on\n```\n\n**Note** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.1 MySQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.1 MySQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_1_3",
    "description": "It is recommended to set the local_infile database flag for a Cloud SQL MySQL instance to off.",
    "title": "6.1.3 Ensure that the 'local_infile' database flag for a Cloud SQL Mysql instance is set to 'off'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.1.3",
      "cis_level": "1",
      "cis_section_id": "6.1",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nIt is recommended to set the `local_infile` database flag for a Cloud SQL MySQL instance to `off`.\n\nThe `local_infile` flag controls the server-side LOCAL capability for LOAD DATA statements. Depending on the `local_infile` setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.\n\nTo explicitly cause the server to refuse LOAD DATA LOCAL statements (regardless of how client programs and libraries are configured at build time or runtime), start mysqld with local_infile disabled. local_infile can also be set at runtime.\n\nDue to security issues associated with the `local_infile` flag, it is recommended to disable it. This recommendation is applicable to MySQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the MySQL instance where the database flag needs to be enabled.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before,click Add item,choose\nthe flag `local_infile` from the drop-down menu, and set its value to `off`.\n6. Click `Save`.\n7. Confirm the changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. List all Cloud SQL database Instances\n\n```bash\ngcloud sql instances list\n```\n\n2. Configure the `local_infile` database flag for every Cloud SQL Mysql database instance using the below command\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags local_infile=off\n```\n\n**Note** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `local_infile` is `on`.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_1"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_1",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_1",
    "description": "The log_error_verbosity flag controls the verbosity/details of messages logged. Valid values are: 'TERSE', 'DEFAULT', and 'VERBOSE'.",
    "title": "6.2.1 Ensure 'log_error_verbosity' database flag for Cloud SQL PostgreSQL instance is set to 'DEFAULT' or stricter",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.1",
      "cis_level": "2",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nThe `log_error_verbosity` flag controls the verbosity/details of messages logged. Valid values are:\n\n* `TERSE`\n* `DEFAULT`\n* `VERBOSE`\n\n`TERSE` excludes the logging of `DETAIL`, `HINT`, `QUERY`, and `CONTEXT` error information.\n\n`VERBOSE` output includes the `SQLSTATE` error code, source code file name, function name, and line number that generated the error.\n\nEnsure an appropriate value is set to 'DEFAULT' or stricter.\n\nAuditing helps in troubleshooting operational problems and also permits forensic analysis. If `log_error_verbosity` is not set to the correct value, too many details or too few details may be logged. This flag should be configured with a value of 'DEFAULT' or stricter. This recommendation is applicable to PostgreSQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the PostgreSQL instance for which you want to enable the database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_error_verbosity` from the drop-down menu and set appropriate value.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the log_error_verbosity database flag for every Cloud SQL PosgreSQL database instance using the below command.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_error_verbosity=\u003cTERSE|DEFAULT|VERBOSE\u003e\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `log_error_verbosity` is `DEFAULT`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_2",
    "description": "Enabling the log_connections setting causes each attempted connection to the server to be logged, along with successful completion of client authentication. This parameter cannot be changed after the session starts.",
    "title": "6.2.2 Ensure that the 'log_connections' database flag for Cloud SQL PostgreSQL instance is set to 'on'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.2",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nEnabling the `log_connections` setting causes each attempted connection to the server to be logged, along with successful completion of client authentication. This parameter cannot be changed after the session starts.\n\nPostgreSQL does not log attempted connections by default. Enabling the `log_connections` setting will create log entries for each attempted connection as well as successful completion of client authentication which can be useful in troubleshooting issues and to determine any unusual connection attempts to the server. This recommendation is applicable to PostgreSQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the PostgreSQL instance for which you want to enable the database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_connections` from the drop-down menu and set the value as `on`.\n6. Click `Save`.\n7. Confirm the changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `log_connections` database flag for every Cloud SQL PosgreSQL database instance using the below command.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_connections=on\n```\n\n**Note**: This command will overwrite all previously set database flags. To keep those and add new ones, include the values for all flags to be set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `log_connections` is `off`.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_3",
    "description": "Enabling the log_disconnections setting logs the end of each session, including the session duration.",
    "title": "6.2.3 Ensure that the 'log_disconnections' database flag for Cloud SQL PostgreSQL instance is set to 'on'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.3",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nEnabling the `log_disconnections` setting logs the end of each session, including the session duration.\n\nPostgreSQL does not log session details such as duration and session end by default. Enabling the `log_disconnections` setting will create log entries at the end of each session which can be useful in troubleshooting issues and determine any unusual activity across a time period. The `log_disconnections` and `log_connections` work hand in hand and generally, the pair would be enabled/disabled together. This recommendation is applicable to PostgreSQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the PostgreSQL instance where the database flag needs to be enabled.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_disconnections` from the drop-down menu and set the value as `on`.\n6. Click `Save`.\n7. Confirm the changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `log_disconnections` database flag for every Cloud SQL PosgreSQL database instance using the below command:\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_disconnections=on\n```\n\n**Note**: This command will overwrite all previously setdatabase flags. To keep those and add new ones, include the values for all flags to be set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `log_disconnections` is off.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_4",
    "description": "The value of log_statement flag determined the SQL statements that are logged. Valid values are: 'none', 'ddl', 'mod', and 'all'.",
    "title": "6.2.4 Ensure 'log_statement' database flag for Cloud SQL PostgreSQL instance is set appropriately",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.4",
      "cis_level": "2",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/SQL"
    },
    "documentation": "## Description\n\nThe value of `log_statement` flag determined the SQL statements that are logged. Valid values are:\n* none\n* ddl\n* mod\n* all\n\nThe value `ddl` logs all data definition statements. The value `mod` logs all ddl statements, plus data-modifying statements. The statements are logged after a basic parsing is done and statement type is determined, thus this does not logs statements with errors. When using extended query protocol, logging occurs after an Execute message is received and values of the Bind parameters are included.\n\nA value of 'ddl' is recommended unless otherwise directed by your organization's logging policy.\n\nAuditing helps in forensic analysis. If log_statement is not set to the correct value, too many statements may be logged leading to issues in finding the relevant information from the logs, or too few statements may be logged with relevant information missing from the logs. Setting log_statement to align with your organization's security and logging policies facilitates later auditing and review of database activities. This recommendation is applicable to PostgreSQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the PostgreSQL instance for which you want to enable the database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_statement` from the drop-down menu and set appropriate value.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `log_statement` database flag for every Cloud SQL PosgreSQL database instance using the below command.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_statement=\u003cddl|mod|all|none\u003e\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_5",
    "description": "The log_min_messages flag defines the minimum message severity level that is considered as an error statement. Messages for error statements are logged with the SQL statement. Valid values include DEBUG5, DEBUG4, DEBUG3, DEBUG2, DEBUG1, INFO, NOTICE, WARNING, ERROR, LOG, FATAL, and PANIC. Each severity level includes the subsequent levels mentioned above.",
    "title": "6.2.5 Ensure that the 'Log_min_messages' Flag for a Cloud SQL PostgreSQL Instance is set at minimum to 'Warning'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.5",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nThe `log_min_messages` flag defines the minimum message severity level that is considered as an error statement. Messages for error statements are logged with the SQL statement. Valid values include `DEBUG5`, `DEBUG4`, `DEBUG3`, `DEBUG2`, `DEBUG1`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `LOG`, `FATAL`, and `PANIC`. Each severity level includes the subsequent levels mentioned above. ERROR is considered the best practice setting. Changes should only be made in accordance with the organization's logging policy.\n\nAuditing helps in troubleshooting operational problems and also permits forensic analysis. If `log_min_messages` is not set to the correct value, messages may not be classified as error messages appropriately. An organization will need to decide their own threshold for logging `log_min_messages` flag.\n\nThis recommendation is applicable to PostgreSQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances)\n2. Select the PostgreSQL instance for which you want to enable the database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_min_messages` from the drop-down menu and set appropriate value.\n6. Click `Save` to save the changes.\n7. Confirm the changes under `Flags` on the Overview page.\n\n### From Command Line:\n\n1. Configure the `log_min_messages` database flag for every Cloud SQL PosgreSQL database instance using the below command.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_min_messages=\u003cDEBUG5|DEBUG4|DEBUG3|DEBUG2|DEBUG1|INFO|NOTICE|WARNING|ERROR|LOG|FATAL|PANIC\u003e\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags to be set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `log_min_messages` is `ERROR`.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_6",
    "description": "The log_min_error_statement flag defines the minimum message severity level that are considered as an error statement. Messages for error statements are logged with the SQL statement. Valid values include DEBUG5, DEBUG4, DEBUG3, DEBUG2, DEBUG1, INFO, NOTICE, WARNING, ERROR, LOG, FATAL, and PANIC. Each severity level includes the subsequent levels mentioned above. Ensure a value of ERROR or stricter is set.",
    "title": "6.2.6 Ensure 'log_min_error_statement' database flag for Cloud SQL PostgreSQL instance is set to 'Error' or stricter",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.6",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nThe `log_min_error_statement` flag defines the minimum message severity level that are considered as an error statement. Messages for error statements are logged with the SQL statement. Valid values include `DEBUG5`, `DEBUG4`, `DEBUG3`, `DEBUG2`, `DEBUG1`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `LOG`, `FATAL`, and `PANIC`. Each severity level includes the subsequent levels mentioned above. Ensure a value of `ERROR` or stricter is set.\n\nAuditing helps in troubleshooting operational problems and also permits forensic analysis. If `log_min_error_statement` is not set to the correct value, messages may not be classified as error messages appropriately. Considering general log messages as error messages would make is difficult to find actual errors and considering only stricter severity levels as error messages may skip actual errors to log their SQL statements. The `log_min_error_statement` flag should be set to `ERROR` or stricter. This recommendation is applicable to PostgreSQL database instances.\n\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the PostgreSQL instance for which you want to enable the database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_min_error_statement` from the drop-down menu and set appropriate value.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line:\n\n1. Configure the `log_min_error_statement` database flag for every Cloud SQL PosgreSQL database instance using the below command.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_min_error_statement=\u003cDEBUG5|DEBUG4|DEBUG3|DEBUG2|DEBUG1|INFO|NOTICE|WARNING|ERROR\u003e\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `log_min_error_statement` is `ERROR`.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_7",
    "description": "The log_min_duration_statement flag defines the minimum amount of execution time of a statement in milliseconds where the total duration of the statement is logged. Ensure that log_min_duration_statement is disabled, i.e., a value of -1 is set.",
    "title": "6.2.7 Ensure that the 'log_min_duration_statement' database flag for Cloud SQL PostgreSQL instance is set to '-1' (disabled)",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.7",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nThe `log_min_duration_statement` flag defines the minimum amount of execution time of a statement in milliseconds where the total duration of the statement is logged. Ensure that `log_min_duration_statement` is disabled, i.e., a value of `-1` is set.\n\nLogging SQL statements may include sensitive information that should not be recorded in logs. This recommendation is applicable to PostgreSQL database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the PostgreSQL instance where the database flag needs to be enabled.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `log_min_duration_statement` from the drop-down menu and set a value of `-1`.\n6. Click `Save`.\n7. Confirm the changes under `Flags` on the Overview page.\n\n### From Command Line:\n\n1. List all Cloud SQL database instances using the following command:\n\n```bash\ngcloud sql instances list\n```\n\n2. Configure the `log_min_duration_statement` flag for every Cloud SQL PosgreSQL database instance using the below command:\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags log_min_duration_statement=-1\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags to be set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `log_min_duration_statement` is `-1`.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_8",
    "description": "Ensure cloudsql.enable_pgaudit database flag for Cloud SQL PostgreSQL instance is set to on to allow for centralized logging.",
    "title": "6.2.8 Ensure That 'cloudsql.enable_pgaudit' Database Flag for each Cloud Sql Postgresql Instance Is Set to 'on' For Centralized Logging",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.8",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nEnsure `cloudsql.enable_pgaudit` database flag for Cloud SQL PostgreSQL instance is set to on to allow for centralized logging.\n\nAs numerous other recommendations in this section consist of turning on flags for logging purposes, your organization will need a way to manage these logs. You may have a solution already in place. If you do not, consider installing and enabling the open source pgaudit extension within PostgreSQL and enabling its corresponding flag of `cloudsql.enable_pgaudit`. This flag and installing the extension enables database auditing in PostgreSQL through the open-source pgAudit extension. This extension provides detailed session and object logging to comply with government, financial, \u0026 ISO standards and provides auditing capabilities to mitigate threats by monitoring security events on the instance. Enabling the flag and settings later in this recommendation will send these logs to Google Logs Explorer so that you can access them in a central location. to This recommendation is applicable only to PostgreSQL database instances.\n\n## Remediation\n\nInitialize the pgAudit flag\n\n### From Console\n\n1. Go to [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the instance to open its `Overview` page.\n3. Click `Edit`.\n4. Scroll down and expand `Flags`.\n5. To set a flag that has not been set on the instance before, click `Add item`.\n6. Enter `cloudsql.enable_pgaudit` for the flag name and set the flag to `on`.\n7. Click `Done`.\n8. Click `Save` to update the configuration.\n9. Confirm your changes under `Flags` on the `Overview` page.\n\n### From Command Line:\n\n1. Run the below command by providing \u003cINSTANCE_NAME\u003e to enable `cloudsql.enable_pgaudit` flag.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags=cloudsql.enable_pgaudit=on\n```\n**Note**: `RESTART` is required to get this configuration in effect.\n\n### Creating the extension\n\n1. Connect to the the server running PostgreSQL or through a SQL client of your choice.\n2. If SSHing to the server in the command line open the PostgreSQL shell by typing `psql`\n3. Run the following command as a superuser.\n\n```bash\nCREATE EXTENSION pgaudit;\n```\n\n### Updating the previously created pgaudit.log flag for your Logging Needs\n\n### From Console\n\n**Note**: there are multiple options here. This command will enable logging for all databases on a server. Please see the customizing database audit logging reference for more flag options.\n\n1. Go to [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the instance to open its `Overview` page.\n3. Click `Edit`.\n4. Scroll down and expand `Flags`.\n5. To set a flag that has not been set on the instance before, click `Add item`.\n6. Enter `pgaudit.log=all` for the flag name and set the flag to `on`.\n7. Click `Done`.\n8. Click `Save` to update the configuration.\n9. Confirm your changes under `Flags` on the `Overview` page.\n\n### From Command Line:\n\nRun the command\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags cloudsql.enable_pgaudit=on,pgaudit.log=all\n```\n\n### Determine if logs are being sent to Logs Explorer\n\n1. From the Google Console home page, open the hamburger menu in the top left.\n2. In the menu that pops open, scroll down to Logs Explorer under Operations.\n3. In the query box, paste the following and search\n\nresource.type=\"cloudsql_database\" logName=\"projects//logs/cloudaudit.googleapis.com%2Fdata_access\" protoPayload.request.@type=\"type.googleapis.com/google.cloud.sql.audit.v1.PgAuditEntry\"\n\n```\nIf it returns any log sources, they are correctly setup.\n```\n\n### Default Value\n\nBy default `cloudsql.enable_pgaudit` database flag is set to `off` and the extension is not enabled.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.2 PostgreSQL Database",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.2 PostgreSQL Database"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_2_9",
    "description": "Instance addresses can be public IP or private IP. Public IP means that the instance is accessible through the public internet. In contrast, instances using only private IP are not accessible through the public internet, but are accessible through a Virtual Private Cloud (VPC).",
    "title": "6.2.9 Ensure Instance IP assignment is set to private",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.2.9",
      "cis_level": "1",
      "cis_section_id": "6.2",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nInstance addresses can be public IP or private IP. Public IP means that the instance is accessible through the public internet. In contrast, instances using only private IP are not accessible through the public internet, but are accessible through a Virtual Private Cloud (VPC). Limiting network access to your database will limit potential attacks. Setting databases access only to private will reduce attack surface.\n\n## Remediation\n\n### From Console\n\n1. In the Google Cloud console, go to the `Cloud SQL Instances` page.\n2. Open the `Overview page` of an instance by clicking the instance name.\n3. Select `Connections` from the SQL navigation menu.\n4. Check the `Private IP` checkbox. A drop-down list shows the available networks in your project.\n5. Select the VPC network you want to use:\nIf you see `Private service connection required`:\n   1. Click `Set up connection`.\n   2. In the `Allocate an IP range` section, choose one of the following options:\n   3. Select one or more existing IP ranges or create a new one from the dropdown. The dropdown includes previously allocated ranges, if there are any, or you can select Allocate a new IP range and enter a new range and name.\n   4. Use an automatically allocated IP range in your network.\n   Note: You can specify an address range only for a primary instance, not for a read replica or clone.\n   5. Click Continue.\n   6. Click Create connection.\n   7. Verify that you see the Private service connection for network VPC_NETWORK_NAME has been successfully created status.\n6. [Optional step for Private Services Access - review reference links to VPC documents for additional detail] If you want to allow other Google Cloud services such as BigQuery to access data in Cloud SQL and make queries against this data over a private IP connection, then select the Private path for Google Cloud services check box.\n7. Click Save\n\n### From Command Line:\n\n1. List cloud SQL instances\n\n```bash\ngcloud sql instances list --format=\"json\" | jq '.[] |.connectionName,.ipAddresses'\n```\n**Note**: the `project name` of the instance you want to set to a private IP, this will be \u003cPROJECT_ID\u003e\n**Note**: the `instance name` of the instance you want to set to a private IP, this will be \u003cINSTANCE_ID\u003e\n\nExample public instance output:\n\n```bash\n\"my-project-123456:us-central1:my-instance\"\n {\n \"ipAddress\": \"0.0.0.0\",\n \"type\": \"PRIMARY\"\n },\n {\n \"ipAddress\": \"0.0.0.0\",\n \"type\": \"OUTGOING\"\n }\n```\n\n1. run the following command to list the available VPCs\n\n```bash\ngcloud compute networks list --format=\"json\" | jq '.[].name'\n```\n**Note** the name of the VPC to use for the instance private IP, this will be \u003cVPC_NETWORK_NAME\u003e\n\n3. run the following to set instance to a private IP\n\n```bash\ngcloud beta sql instances patch \u003cINSTANCE_ID\u003e \\--project=\u003cPROJECT_ID\u003e \\--network=projects/\u003cPROJECT_ID\u003e/global networks\u003cVPC_NETWORK_NAME\u003e \\--no-assign-ip\n```\n\n### Default Value\n\nPublic IP",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_2"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_2",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_1",
    "description": "It is recommended to set external scripts enabled database flag for Cloud SQL SQL Server instance to off.",
    "title": "6.3.1 Ensure 'external scripts enabled' database flag for Cloud SQL SQL Server instance is set to 'off'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.1",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to `set external scripts` enabled database flag for Cloud SQL SQL Server instance to `off`\n\n`external scripts enabled` enable the execution of scripts with certain remote language extensions. This property is OFF by default. When Advanced Analytics Services is installed, setup can optionally set this property to true. As the External Scripts Enabled feature allows scripts external to SQL such as files located in an R library to be executed, which could adversely affect the security of the system, hence this should be disabled.This recommendation is applicable to SQL Server database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the Flags section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `external scripts enabled` from the drop-down menu, and set its value to `off`.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `external scripts enabled` database flag for every Cloud SQL SQL Server database instance using the below command.\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags \"external scripts enabled=off\"\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `external scripts enabled` is `off`",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_2",
    "description": "It is recommended to set cross db ownership chaining database flag for Cloud SQL SQL Server instance to off.",
    "title": "6.3.2 Ensure that the 'cross db ownership chaining' database flag for Cloud SQL SQL Server instance is set to 'off'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.2",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to set `cross db ownership chaining` database flag for Cloud SQL SQL Server instance to `off`.\n\nUse the `cross db ownership` for chaining option to configure cross-database ownership chaining for an instance of Microsoft SQL Server. This server option allows you to control cross-database ownership chaining at the database level or to allow cross-database ownership chaining for all databases.Enabling `cross db ownership` is not recommended unless all of the databases hosted by the instance of SQL Server must participate in crossdatabase ownership chaining and you are aware of the security implications of this setting.This recommendation is applicable to SQL Server database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `cross db ownership chaining` from the drop-down menu, and set its value to `off`.\n6. Click `Save`.\n7. Confirm the changes under `Flags` on the Overview page.\n\n**Note:** Any changes to the database flag values, may require your instance to be restarted\n\n### From Command Line\n\n1. Configure the the `cross db ownership chaining` database flag for every Cloud SQL SQL Server database instance using the below command.\n\n```bash\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags \"cross db ownership chaining=off\"\n```\n\n**Note**: This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nAs you have to manually turn on this flag, the default value for this is 'On'. Though you would have had to design your database schema from the start to include this feature, it often is not enabled.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_3",
    "description": "It is recommended to set user connections database flag for Cloud SQL SQL Server instance according organization-defined value.",
    "title": "6.3.3 Ensure 'user connections' database flag for Cloud SQL SQL Server instance is set as appropriate",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.3",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to set `user connections` database flag for Cloud SQL SQL Server instance according organization-defined value.\n\nThe `user connections` option specifies the maximum number of simultaneous user connections that are allowed on an instance of SQL Server. The actual number of user connections allowed also depends on the version of SQL Server that you are using, and also the limits of your application or applications and hardware. SQL Server allows a maximum of 32,767 user connections. Because user connections is by default a self- configuring value, with SQL Server adjusting the maximum number of user connections automatically as needed, up to the maximum value allowable. For example, if only 10 users are logged in, 10 user connection objects are allocated. In most cases, you do not have to change the value for this option. The default is 0, which means that the maximum (32,767) user connections are allowed. However if there is a number defined here that limits connections, SQL Server will not allow anymore above this limit. If the connections are at the limit, any new requests will be dropped potentially causing lost data or outages for those using the database.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `user connections` from the drop-down menu, and set its value to your organization recommended value.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n**Note:** Any changes to the database flag values, may require your instance to be restarted\n\n### From Command Line\n\n1. Configure the `user connections` database flag for every Cloud SQL SQL Server database instance using the below command.\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags \"user connections=[0-32,767]\"\n```\n\n**Note:** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default `user connections` is set to '0' which does not limit the number of connections, giving the server free reign to facilitate a max of 32,767 connections.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_4",
    "description": "It is recommended that, user options database flag for Cloud SQL SQL Server instance should not be configured.",
    "title": "6.3.4 Ensure 'user options' database flag for Cloud SQL SQL Server instance is not configured",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.4",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended that, `user options` database flag for Cloud SQL SQL Server instance should not be configured.\n\nThe `user options` option specifies global defaults for all users. A list of default query processing options is established for the duration of a user's work session. The user options option allows you to change the default values of the SET options (if the server's default settings are not appropriate).\n\nA user can override these defaults by using the SET statement. You can configure user options dynamically for new logins. After you change the setting of user options, new login sessions use the new setting; current login sessions are not affected. This recommendation is applicable to SQL Server database instances.\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. Click the X next `user options` flag shown\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. List all Cloud SQL database Instances\n\n```bash\ngcloud sql instances list\n```\n\n2. Clear the `user options` database flag for every Cloud SQL SQL Server database instance using either of the below commands.\n\n```\n1.Clearing all flags to their default value\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --clear-database-flags\nOR\n2. To clear only `user options` database flag, configure the database flag by overriding the `user options`. Exclude `user options` flag and its value, and keep all other flags you want to configure.\ngcloud sql instances patch \u003cINSTANCE_NAME\u003e --database-flags [FLAG1=VALUE1,FLAG2=VALUE2]\n```\n\n**Note:** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default 'user options' is not configured.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_5",
    "description": "It is recommended to set remote access database flag for Cloud SQL SQL Server instance to off.",
    "title": "6.3.5 Ensure 'remote access' database flag for Cloud SQL SQL Server instance is set to 'off'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.5",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to set `remote access` database flag for Cloud SQL SQL Server instance to `off`.\n\nThe `remote access` option controls the execution of stored procedures from local or remote servers on which instances of SQL Server are running. This default value for this option is 1. This grants permission to run local stored procedures from remote servers or remote stored procedures from the local server.To prevent local stored procedures from being run from a remote server or remote stored procedures from being run on the local server, this must be disabled. The Remote Access option controls the execution of local stored procedures on remote servers or remote stored procedures on local server. 'Remote access' functionality can be abused to launch a Denial-of-Service (DoS) attack on remote servers by off-loading query processing to a target, hence this should be disabled.\n\nThis recommendation is applicable to SQL Server database instances.\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `remote access` from the drop-down menu, and set its value to `off`.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `remote access` database flag for every Cloud SQL SQL Server database instance using the below command.\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags \"remote access=off\"\n```\n\n**Note:** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nBy default 'remote access' is 'on'.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_6",
    "description": "It is recommended to set 3625 (trace flag) database flag for Cloud SQL SQL Server instance to off.",
    "title": "6.3.6 Ensure '3625 (trace flag)' database flag for Cloud SQL SQL Server instance is set to 'off'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.6",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to set `3625 (trace flag)` database flag for Cloud SQL SQL Server instance to `on`.\n\nMicrosoft SQL Trace Flags are frequently used to diagnose performance issues or to debug stored procedures or complex computer systems, but they may also be recommended by Microsoft Support to address behavior that is negatively impacting a specific workload. All documented trace flags and those recommended by Microsoft Support are fully supported in a production environment when used as directed. `3625(trace log)` Limits the amount of information returned to users who are not members of the sysadmin fixed server role, by masking the parameters of some error messages using '******'. Setting this in a Google Cloud flag for the instance allows for security through obscurity and prevents the disclosure of sensitive information, hence this is recommended to set this flag globally to on to prevent the flag having been left off, or changed by bad actors. This recommendation is applicable to SQL Server database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the flag `3625` from the drop-down menu, and set its value to `on`.\n6. Click `Save` to save your changes.\n7. Confirm your changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `3625` database flag for every Cloud SQL SQL Server database instance using the below command.\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags \"3625=on\"\n```\n\n**Note:** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n\n### Default Value\n\nMySQL implementations by default have trace flags turned off, as they are used for logging purposes.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services \u003e 6.3 SQL Server",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services",
      "6.3 SQL Server"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_3_7",
    "description": "It is recommended to set contained database authentication database flag for Cloud SQL on the SQL Server instance is set to off.",
    "title": "6.3.7 Ensure that the 'contained database authentication' database flag for Cloud SQL on the SQL Server instance is set to 'off'",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.3.7",
      "cis_level": "1",
      "cis_section_id": "6.3",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to set `contained database authentication` database flag for Cloud SQL on the SQL Server instance is set to `off`.\n\nA contained database includes all database settings and metadata required to define the database and has no configuration dependencies on the instance of the Database Engine where the database is installed. Users can connect to the database without authenticating a login at the Database Engine level. Isolating the database from the Database Engine makes it possible to easily move the database to another instance of SQL Server.Contained databases have some unique threats that should be understood and mitigated by SQL Server Database Engine administrators. Most of the threats are related to the USER WITH PASSWORD authentication process, which moves the authentication boundary from the Database Engine level to the database level, hence this is recommended to disable this flag.This recommendation is applicable to SQL Server database instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the SQL Server instance for which you want to enable to database flag.\n3. Click `Edit`.\n4. Scroll down to the `Flags` section.\n5. To set a flag that has not been set on the instance before, click `Add item`, choose the\nflag `contained database authentication` from the drop-down menu, and set its value to `off`.\n6. Click `Save`.\n7. Confirm the changes under `Flags` on the Overview page.\n\n### From Command Line\n\n1. Configure the `contained database authentication` database flag for every Cloud SQL SQL Server database instance using the below command.\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --database-flags \"contained database authentication=off\"\n```\n\n**Note:** This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign (\"=\").\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6",
      "gcp_compliance.benchmark.cis_v200_6_3"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6/gcp_compliance.benchmark.cis_v200_6_3",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_4",
    "description": "It is recommended to enforce all incoming connections to SQL database instance to use SSL.",
    "title": "6.4 Ensure that the Cloud SQL database instance requires all incoming connections to use SSL",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.4",
      "cis_level": "1",
      "cis_section_id": "6",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to enforce all incoming connections to SQL database instance to use `SSL`.\n\nSQL database connections if successfully trapped (MITM); can reveal sensitive data like credentials, database queries, query outputs etc. For security, it is recommended to always use SSL encryption when connecting to your instance. This recommendation is applicable for Postgresql, MySql generation 1, MySql generation 2 and SQL Server 2017 instances.\n\n## Remediation\n\n### From Console\n\n1. Go to [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Click on an instance name to see its configuration overview.\n3. In the left-side panel, select `Connections`.\n4. In the `SSL connections` section,click `Allow only SSL connections`.\n5. Under `Configure SSL server certificates` click `Create new certificate`.\n6. Under `Configure SSL client certificates` click `Create a client certificate`.\n7. Follow the instructions shown to learn how to connect to your instance.\n\n### From Command Line\n\n1. To enforce SSL encryption for an instance run the command:\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --require-ssl\n```\n\n**Note**:`RESTART` is required for type MySQL Generation 1 Instances `(backendType: FIRST_GEN)` to get this configuration in effect.\n\n### Default Value\n\nBy default parameter `settings: ipConfiguration: requireSsl` is not set which is equivalent to `requireSsl:false`.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_5",
    "description": "Database Server should accept connections only from trusted Network(s)/IP(s) and restrict access from public IP addresses.",
    "title": "6.5 Ensure That Cloud SQL Database Instances Do Not Implicitly Whitelist All Public IP Addresses",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.5",
      "cis_level": "1",
      "cis_section_id": "6",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nDatabase Server should accept connections only from trusted Network(s)/IP(s) and restrict access from the world.\n\nTo minimize attack surface on a Database server instance, only trusted/known and required IP(s) should be white-listed to connect to it.\n\nAn authorized network should not have IPs/networks configured to `0.0.0.0/0` which will allow access to the instance from anywhere in the world. Note that authorized networks apply only to instances with public IPs.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Click the instance name to open its `Instance details` page.\n3. Under the `Configuration` section click `Edit configurations`\n4. Under `Configuration options` expand the `Connectivity` section.\n5. Click the `delete` icon for the authorized network `0.0.0.0/0`.\n6. Click `Save` to update the instance.\n\n### From Command Line\n\nUpdate the authorized network list by dropping off any addresses\n\n```bash\ngcloud sql instances patch INSTANCE_NAME --authorizednetworks=IP_ADDR1,IP_ADDR2,...\n```\n\n### Prevention\n\nTo prevent new SQL instances from being configured to accept incoming connections from any IP addresses, set up a `Restrict Authorized Networks on Cloud SQL instances` Organization Policy at: [https://console.cloud.google.com/iam-admin/orgpolicies/sql-restrictAuthorizedNetworks](https://console.cloud.google.com/iam-admin/orgpolicies/sql-restrictAuthorizedNetworks).\n\n### Default Value\n\nBy default, authorized networks are not configured. Remote connection to Cloud SQL database instance is not possible unless authorized networks are configured.",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_6",
    "description": "It is recommended to configure Second Generation Sql instance to use private IPs instead of public IPs.",
    "title": "6.6 Ensure that Cloud SQL database instances do not have public IPs",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.6",
      "cis_level": "2",
      "cis_section_id": "6",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to configure Second Generation SQL instance to use private IPs instead of public IPs.\n\nTo lower the organization's attack surface, Cloud SQL databases should not have public IPs. Private IPs provide improved network security and lower latency for your application.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console: [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances)\n2. Click the instance name to open its Instance details page.\n3. Select the `Connections` tab.\n4. Deselect the `Public IP` checkbox.\n5. Click `Save` to update the instance.\n\n### From Command Line\n\n1. For every instance remove its public IP and assign a private IP instead:\n\n```bash\ngcloud beta sql instances patch INSTANCE_NAME --network=VPC_NETWOR_NAME --noassign-ip\n```\n\n2. Confirm the changes using the following command:\n\n```sql\ngcloud sql instances describe INSTANCE_NAME\n```\n\n### Prevention\n\nTo prevent new SQL instances from getting configured with public IP addresses, set up a `Restrict Public IP access on Cloud SQL instances` Organization policy at: [https://console.cloud.google.com/iam-admin/orgpolicies/sql-restrictPublicIp](https://console.cloud.google.com/iam-admin/orgpolicies/sql-restrictPublicIp).\n\n### Default Value\n\nBy default, Cloud SQL instances have a public IP.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 6 Cloud SQL Database Services",
    "category_hierarchy": [
      "CIS v2.0.0",
      "6 Cloud SQL Database Services"
    ],
    "control_id": "gcp_compliance.control.cis_v200_6_7",
    "description": "It is recommended to have all SQL database instances set to enable automated backups.",
    "title": "6.7 Ensure that Cloud SQL database instances are configured with automated backups",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "6.7",
      "cis_level": "1",
      "cis_section_id": "6",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP"
    },
    "documentation": "## Description\n\nIt is recommended to have all SQL database instances set to enable automated backups.\n\nBackups provide a way to restore a Cloud SQL instance to recover lost data or recover from a problem with that instance. Automated backups need to be set for any instance that contains data that should be protected from loss or damage.This recommendation is applicable for SQL Server, PostgreSql, MySql generation 1 and MySql generation 2 instances.\n\n## Remediation\n\n### From Console\n\n1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting [https://console.cloud.google.com/sql/instances](https://console.cloud.google.com/sql/instances).\n2. Select the instance where the backups need to be configured.\n3. Click `Edit`.\n4. In the `Backups` section, check `Enable automated backups`, and choose a backup window.\n5. Click `Save`\n\n### From Command Line\n\n1. List all Cloud SQL database instances using the following command:\n\n```bash\ngcloud sql instances list\n```\n\n2. Enable `Automated backups` for every Cloud SQL database instance using the below command:\n\n```sql\ngcloud sql instances patch INSTANCE_NAME --backup-start-time [HH:MM]\n```\n\nThe `backup-start-time` parameter is specified in 24-hour time, in the UTC±00 time zone, and specifies the start of a 4-hour backup window. Backups can start any time during the backup window.\n\n### Default Value\n\nBy default, automated backups are not configured for Cloud SQL instances. Data backup is not possible on any Cloud SQL instance unless Automated Backup is configured.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_6"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_6",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 7 BigQuery",
    "category_hierarchy": [
      "CIS v2.0.0",
      "7 BigQuery"
    ],
    "control_id": "gcp_compliance.control.cis_v200_7_1",
    "description": "It is recommended that the IAM policy on BigQuery datasets does not allow anonymous and/or public access.",
    "title": "7.1 Ensure that BigQuery datasets are not anonymously or publicly accessible",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "7.1",
      "cis_level": "1",
      "cis_section_id": "7",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/BigQuery"
    },
    "documentation": "## Description\n\nIt is recommended that the IAM policy on BigQuery datasets does not allow anonymous and/or public access.\n\nGranting permissions to `allUsers` or `allAuthenticatedUsers` allows anyone to access the dataset. Such access might not be desirable if sensitive data is being stored in the dataset. Therefore, ensure that anonymous and/or public access to a dataset is not allowed.\n\n## Remediation\n\n### From Console\n\n1. Go to `BigQuery` by visiting: [https://console.cloud.google.com/bigquery](https://console.cloud.google.com/bigquery).\n2. Select the dataset from 'Resources'.\n3. Click `SHARING` near the right side of the window and select `Permissions`.\n4. Review each attached role.\n5. Click the delete icon for each member `allUsers` or `allAuthenticatedUsers`. On the popup click `Remove`.\n\n### From Command Line\n\nList the name of all datasets.\n\n```bash\nbq ls\n```\n\nRetrieve the data set details:\n\n```bash\nbq show --format=prettyjson PROJECT_ID:DATASET_NAME \u003e PATH_TO_FILE\n```\n\nIn the access section of the JSON file, update the dataset information to remove all roles containing `allUsers` or `allAuthenticatedUsers`.\n\nUpdate the dataset:\n\n```bash\nbq update --source PATH_TO_FILE PROJECT_ID:DATASET_NAME\n```\n\n### Prevention\n\nYou can prevent Bigquery dataset from becoming publicly accessible by setting up the `Domain restricted sharing` organization policy at: [https://console.cloud.google.com/iam-admin/orgpolicies/iam-allowedPolicyMemberDomains](https://console.cloud.google.com/iam-admin/orgpolicies/iam-allowedPolicyMemberDomains).\n\n### Default Value\n\nBy default, BigQuery datasets are not publicly accessible.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_7"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_7",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 7 BigQuery",
    "category_hierarchy": [
      "CIS v2.0.0",
      "7 BigQuery"
    ],
    "control_id": "gcp_compliance.control.cis_v200_7_2",
    "description": "BigQuery by default encrypts the data as rest by employing Envelope Encryption using Google managed cryptographic keys. The data is encrypted using the data encryption keys and data encryption keys themselves are further encrypted using key encryption keys. This is seamless and do not require any additional input from the user. However, if you want to have greater control, Customer-managed encryption keys (CMEK) can be used as encryption key management solution for BigQuery Data Sets. If CMEK is used, the CMEK is used to encrypt the data encryption keys instead of using google-managed encryption keys.",
    "title": "7.2 Ensure that all BigQuery Tables are encrypted with Customer-managed encryption key (CMEK)",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "7.2",
      "cis_level": "2",
      "cis_section_id": "7",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/BigQuery"
    },
    "documentation": "## Description\n\nBigQuery by default encrypts the data as rest by employing `Envelope Encryption` using Google managed cryptographic keys. The data is encrypted using the `data encryption keys` and data encryption keys themselves are further encrypted using `key encryption keys`. This is seamless and do not require any additional input from the user. However, if you want to have greater control, Customer-managed encryption keys (CMEK) can be used as encryption key management solution for BigQuery Data Sets. If CMEK is used, the CMEK is used to encrypt the data encryption keys instead of using google-managed encryption keys. BigQuery stores the table and CMEK association and the encryption/decryption is done automatically.\n\nApplying the Default Customer-managed keys on BigQuery data sets ensures that all the new tables created in the future will be encrypted using CMEK but existing tables need to be updated to use CMEK individually.\n\n```\nNote: Google does not store your keys on its servers and cannot access your protected data unless you provide the key. This also means that if you forget or lose your key, there is no way for Google to recover the key or to recover any data encrypted with the lost key.\n```\n\n## Remediation\n\n### From Command Line\n\nUse the following command to copy the data. The source and the destination needs to be same in case copying to the original table\n\n```bash\nbq cp --destination_kms_key \u003ccustomer_managed_key\u003e source_dataset.source_table destination_dataset.destination_table\n```\n\n### Default Value\n\nGoogle Managed keys are used as `key encryption keys`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_7"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_7",
    "executable": true
  },
  {
    "category_breadcrumb": "CIS v2.0.0 \u003e 7 BigQuery",
    "category_hierarchy": [
      "CIS v2.0.0",
      "7 BigQuery"
    ],
    "control_id": "gcp_compliance.control.cis_v200_7_3",
    "description": "BigQuery by default encrypts the data as rest by employing Envelope Encryption using Google managed cryptographic keys. The data is encrypted using the data encryption keys and data encryption keys themselves are further encrypted using key encryption keys. This is seamless and do not require any additional input from the user. However, if you want to have greater control, Customer-managed encryption keys (CMEK) can be used as encryption key management solution for BigQuery Data Sets.",
    "title": "7.3 Ensure that a Default Customer-managed encryption key (CMEK) is specified for all BigQuery Data Sets",
    "tags": {
      "benchmark": "cis",
      "category": "Compliance",
      "cis_item_id": "7.3",
      "cis_level": "2",
      "cis_section_id": "7",
      "cis_type": "automated",
      "cis_version": "v2.0.0",
      "plugin": "gcp",
      "service": "GCP/BigQuery"
    },
    "documentation": "## Description\n\nBigQuery by default encrypts the data as rest by employing `Envelope Encryption` using Google managed cryptographic keys. The data is encrypted using the data encryption keys and `data encryption keys` themselves are further encrypted using `key encryption keys`. This is seamless and do not require any additional input from the user.However, if you want to have greater control, Customer-managed encryption keys (CMEK) can be used as encryption key management solution for BigQuery Data Sets.\n\nBigQuery by default encrypts the data as rest by employing `Envelope Encryption` using Google managed cryptographic keys. This is seamless and does not require any additional input from the user.\n\nFor greater control over the encryption, customer-managed encryption keys (CMEK) can be used as encryption key management solution for BigQuery Data Sets. Setting a Default Customer-managed encryption key (CMEK) for a data set ensure any tables created in future will use the specified CMEK if none other is provided.\n\n```\nNote: Google does not store your keys on its servers and cannot access your protected data unless you provide the key. This also means that if you forget or lose your key, there is no way for Google to recover the key or to recover any data encrypted with the lost key.\n```\n\n## Remediation\n\n### From Command Line\n\nThe default CMEK for existing data sets can be updated by specifying the default key in the `EncryptionConfiguration.kmsKeyName` field when calling the `datasets.insert` or `datasets.patch` methods.\n\n### Default Value\n\nGoogle Managed keys are used as `key encryption keys`.\n",
    "parent_control_hierarchy": [
      "gcp_compliance.benchmark.cis_v200",
      "gcp_compliance.benchmark.cis_v200_7"
    ],
    "parent_control_breadcrumb": "gcp_compliance.benchmark.cis_v200/gcp_compliance.benchmark.cis_v200_7",
    "executable": true
  }
]