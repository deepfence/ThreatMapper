[
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Auto Scaling",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Auto Scaling"
    ],
    "control_id": "aws_compliance.control.pci_v321_autoscaling_1",
    "description": "This control checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks. PCI DSS does not require load balancing or highly available configurations. However, this check aligns with AWS best practices.",
    "title": "1 Auto Scaling groups associated with a load balancer should use health checks",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "autoscaling_1",
      "pci_requirements": "2.2",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks.\n\nPCI DSS does not require load balancing or highly available configurations. However, this check aligns with AWS best practices.\n\n## Remediation\n\nTo enable Elastic Load Balancing health checks\n\n1. Open the Amazon [EC2 console](https://console.aws.amazon.com/ec2/)\n2. On the navigation pane, under `Auto Scaling`, choose **Auto Scaling Groups**\n3. To select the group from the list, choose the right box\n4. Choose **Edit**\n5. For `Health Check Type`, choose **ELB**\n6. For `Health Check Grace Period`, enter `300`\n7. Choose **Save**\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_autoscaling",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CloudTrail",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CloudTrail"
    ],
    "control_id": "aws_compliance.control.pci_v321_cloudtrail_1",
    "description": "This control checks whether AWS CloudTrail is configured to use the server-side encryption (SSE) AWS KMS customer master key (CMK) encryption. If you are only using the default encryption option, you can choose to disable this check.",
    "title": "1 CloudTrail logs should be encrypted at rest using AWS KMS CMKs",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "cloudtrail_1",
      "pci_requirements": "3.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether AWS CloudTrail is configured to use the server-side encryption (SSE) AWS KMS customer master key (CMK) encryption.\n\nIf you are only using the default encryption option, you can choose to disable this check.\n\n## Remediation\n\nTo enable encryption for CloudTrail logs\n\n1. Open the CloudTrail console at [CloudTrail](https://console.aws.amazon.com/cloudtrail/).\n1. Choose **Trails**.\n1. Choose the trail to update.\n1. Under General details, choose **Edit**.\n1. For Log file SSE-KMS encryption, select **Enabled**.\n1. Under AWS KMS customer managed CMK, do one of the following:\n    - To create a key, choose **New**. Then in AWS KMS alias, enter an alias for the key. The key is created in the same Region as the S3 bucket.\n    - To use an existing key, choose **Existing** and then from AWS KMS alias, select the key.\n    - The AWS KMS key and S3 bucket must be in the same Region.\n1. Choose **Save changes**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_cloudtrail",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CloudTrail",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CloudTrail"
    ],
    "control_id": "aws_compliance.control.pci_v321_cloudtrail_2",
    "description": "This control checks whether CloudTrail is enabled in your AWS account. However, some AWS services do not enable logging of all APIs and events. You should implement any additional audit trails other than CloudTrail and review the documentation for each service.",
    "title": "2 CloudTrail should be enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "cloudtrail_2",
      "pci_requirements": "10.1,10.2.1,10.2.2,10.2.3,10.2.4,10.2.5,10.2.6,10.2.7,10.3.1,10.3.2,10.3.3,10.3.4,10.3.5,10.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether CloudTrail is enabled in your AWS account.\n\nHowever, some AWS services do not enable logging of all APIs and events. You should implement any additional audit trails other than CloudTrail and review the documentation for each service in CloudTrail Supported Services and Integrations.\n\n## Remediation\n\nTo create a new trail in CloudTrail\n\n1. Sign in to the AWS Management Console using the IAM user you configured for CloudTrail administration.\n2. Open the CloudTrail console at [CloudTrail](https://console.aws.amazon.com/cloudtrail/).\n3. In the Region selector, choose the AWS Region where you want your trail to be created. This is the Home Region for the trail.\n4. The Home Region is the only AWS Region where you can view and update the trail after it is created, even if the trail logs events in all AWS Regions.\n5. In the navigation pane, choose **Trails**.\n6. On the Trails page, choose **Get Started Now**. If you do not see that option, choose **Create Trail**.\n7. In Trail name, give your trail a name, such as My-Management-Events-Trail.\n8. As a best practice, use a name that quickly identifies the purpose of the trail. In this case, you're creating a trail that logs management events.\n9. In Management Events, make sure Read/Write events is set to **All**.\n10. In Data Events, do not make any changes. This trail will not log any data events.\n11. Create a new S3 bucket for the logs:\n    1. In Storage Location, in Create a new S3 bucket, choose **Yes**.\n    2. In S3 bucket, give your bucket a name, such as my-bucket-for-storing-cloudtrail-logs.\n    3. The name of your S3 bucket must be globally unique. For more information about S3 bucket naming requirements, see the [AWS CloudTrail User Guide](https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-s3-bucket-naming-requirements.html).\n12. Under Advanced, choose **Yes** for both Encrypt log files with SSE-KMS and Enable log file validation.\n13. Choose **Create**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_cloudtrail",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CloudTrail",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CloudTrail"
    ],
    "control_id": "aws_compliance.control.pci_v321_cloudtrail_3",
    "description": "This control checks whether CloudTrail log file validation is enabled.",
    "title": "3 CloudTrail log file validation should be enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "cloudtrail_3",
      "pci_requirements": "10.5.2,10.5.5",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether CloudTrail log file validation is enabled.\n\nIt does not check when configurations are altered.\n\nTo monitor and alert on log file changes, you can use Amazon EventBridge or CloudWatch metric filters.\n\n## Remediation\n\nTo enable CloudTrail log file validation\n\n1. Open the CloudTrail console at [CloudTrail](https://console.aws.amazon.com/cloudtrail/).\n1. In the navigation pane, choose **Trails**.\n1. In the Name column, choose the **Trail Name** to edit.\n1. Under General details, choose **Edit**.\n1. Under Additional settings, for Log file validation,, select **Enabled**.\n1. Choose **Save**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_cloudtrail",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CloudTrail",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CloudTrail"
    ],
    "control_id": "aws_compliance.control.pci_v321_cloudtrail_4",
    "description": "This control checks whether CloudTrail trails are configured to send logs to CloudWatch Logs.",
    "title": "4 CloudTrail trails should be integrated with CloudWatch Logs",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "cloudtrail_4",
      "pci_requirements": "10.5.3",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether CloudTrail trails are configured to send logs to CloudWatch Logs.\n\nIt does not check for user permissions to alter logs or log groups. You should create specific CloudWatch rules to alert when CloudTrail logs are altered.\n\nThis control also does not check for any additional audit log sources other than CloudTrail being sent to a CloudWatch Logs group.\n\n## Remediation\n\nTo enable CloudTrail log file validation\n\n1. Open the CloudTrail console at [CloudTrail](https://console.aws.amazon.com/cloudtrail/).\n1. In the navigation pane, choose **Trails**.\n1. Choose a trail that there is no value for in the **CloudWatch Logs Log group** column.\n1. Scroll down to the **CloudWatch Logs** section and then choose **Edit**.\n1. For Log group field, do one of the following:\n    - To use the default log group, keep the name as is.\n    - To use an existing log group, choose **Existing** and then enter the name of the log group to use.\n    - To create a new log group, choose **New** and then enter a name for the log group to create.\n1. Choose **Continue**.\n1. For IAM role, do one of the following:\n    - To use an existing role, choose **Existing** and then choose the role from the drop-down list.\n    - To create a new role, choose **New** and then enter a name for the role to create.\n    - The new role is assigned a policy that grants the necessary permissions.\n    To view the permissions granted to the role, expand the **Policy document**.\n1. Choose **Save** changes.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_cloudtrail",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CodeBuild",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CodeBuild"
    ],
    "control_id": "aws_compliance.control.pci_v321_codebuild_1",
    "description": "This control checks whether the GitHub or Bitbucket source repository URL contains either personal access tokens or a user name and password.",
    "title": "1 CodeBuild GitHub or Bitbucket source repository URLs should use OAuth",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "codebuild_1",
      "pci_requirements": "8.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks whether the GitHub or Bitbucket source repository URL contains either personal access tokens or a user name and password.\n\nYou can use CodeBuild in your PCI DSS environment to compile your source code, run unit tests, or produce artifacts that are ready to deploy. If you do, your authentication credentials should never be stored or transmitted in clear text or appear in the repository URL.\n\nYou should use OAuth instead of personal access tokens or a user name and password to grant authorization for accessing GitHub or Bitbucket repositories. This is a method to use strong cryptography to render authentication credentials unreadable.\n\n## Remediation\n\nTo remove basic authentication / (GitHub) Personal Access Token from CodeBuild Project Source\n\n1. Open the [CodeBuild console](\u003chttps://console.aws.amazon.com/codebuild/\u003e)\n2. Select your Build project that contains personal access tokens or a user name and password.\n3. From **Edit**, choose Source.\n4. Choose **Disconnect** from `GitHub / Bitbucket`.\n5. Choose **Connect** using `OAuth` and then choose Connect to `GitHub / Bitbucket`.\n6. In the message displayed by your `source provider`, authorize as appropriate.\n7. Reconfigure your Repository URL and additional configuration settings, as needed.\n8. Choose **Update** source.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_codebuild",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CodeBuild",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CodeBuild"
    ],
    "control_id": "aws_compliance.control.pci_v321_codebuild_2",
    "description": "This control checks whether the project contains environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.",
    "title": "2 CodeBuild project environment variables should not contain clear text credentials",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "codebuild_2",
      "pci_requirements": "8.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks whether the project contains environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY.\n\nYou can use CodeBuild in your PCI DSS environment to compile your source code, runs unit tests, or produce artifacts that are ready to deploy. If you do, never store the authentication credentials AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY in clear text.\n\nUsing environmental variables to store credentials in your CodeBuild project may violate the requirement to use strong cryptography to render authentication credentials unreadable.\n\n## Remediation\n\nTo enable Elastic Load Balancing health checks\n\n1. Open the [CodeBuild console](\u003chttps://console.aws.amazon.com/codebuild/\u003e)\n2. Expand **Build**, choose Build project, and then choose the build project that contains plaintext credentials.\n3. From **Edit**, choose `Environment`.\n4. Expand `Additional configuration` and then scroll to `Environment variables`.\n5. Choose **Remove** next to the environment variable.\n6. Choose **Update environment**.\n\nTo store sensitive values in the Amazon EC2 Systems Manager Parameter Store and then retrieve them from your build spec\n\n1. Open the [CodeBuild console](\u003chttps://console.aws.amazon.com/codebuild/\u003e)\n2. Expand **Build**, choose `Build project`, and then choose your build project that contains plaintext credentials.\n3. From **Edit**, choose **Environment**.\n4. Expand `Additional configuration` and then scroll to **Environment variables**.\n5. In AWS Systems Manager, create a Systems Manager parameter that contains your sensitive data. For instructions on how to do this, refer to the tutorial in the [AWS Systems Manager User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-console.html).\n6. After you create the parameter, copy the parameter name.\n7. Back in the CodeBuild console, choose **Create environmental variable**.\n8. For **name**, enter the name of your variable as it appears in your build spec.\n9. For **value**, paste in the name of your parameter.\n10. From **type**, choose **Parameter**.\n11. Choose **Remove** next to your noncompliant environmental variable that contains plaintext credentials.\n12. Choose **Update environment**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_codebuild",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Config",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Config"
    ],
    "control_id": "aws_compliance.control.pci_v321_config_1",
    "description": "This control checks whether AWS Config is enabled in the account for the local Region and is recording all resources. It does not check for change detection for all critical system files and content files, as AWS Config supports only a subset of resource types. The AWS Config service performs configuration management of supported AWS resources in your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items, and any configuration changes between resources.",
    "title": "1 AWS Config should be enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "config_1",
      "pci_requirements": "10.5.2,11.5",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/Config"
    },
    "documentation": "## Description\n\nAWS Config rule: None. To run this check, Security Hub runs through audit steps prescribed for it in Securing Amazon Web Services. No AWS Config managed rules are created in your AWS environment for this check.\n\nThis control checks whether AWS Config is enabled in the account for the local Region and is recording all resources.\n\nIt does not check for change detection for all critical system files and content files, as AWS Config supports only a subset of resource types.\n\nThe AWS Config service performs configuration management of supported AWS resources in your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items, and any configuration changes between resources.\n\n## Remediation\n\nTo configure AWS Config settings\n\n1. Open the [AWS Config console](https://console.aws.amazon.com/config/).\n2. Choose the Region to configure AWS Config in.\n3. If you have not used AWS Config before, choose **Get started**.\n4. On the Settings page, do the following:\n   1. Under Resource types to record, choose Record all resources supported in this region and Include global resources (e.g., AWS IAM resources).\n   2. Under Amazon S3 bucket, either specify the bucket to use or create a bucket and optionally include a prefix.\n   3. Under Amazon SNS topic, either select an Amazon SNS topic from your account or create one. For more information about Amazon SNS, see the [Amazon Simple Notification Service Getting Started Guide](https://docs.aws.amazon.com/sns/latest/dg/sns-getting-started.html).\n   4. Under AWS Config role, either choose `Create AWS Config service-linked role` or choose `Choose a role from your account` and then choose the role to use.\n5. Choose Next.\n6. On the **AWS Config** rules page, choose **Skip**.\n7. Choose **Confirm**.\n\nFor more information about using AWS Config from the AWS CLI, see the [AWS Config Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/gs-cli-subscribe.html).\n\nYou can also use an AWS CloudFormation template to automate this process. For more information, see the [AWS CloudFormation User Guide](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-sampletemplates.html).\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_config"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_config",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e CloudWatch",
    "category_hierarchy": [
      "PCI v3.2.1",
      "CloudWatch"
    ],
    "control_id": "aws_compliance.control.pci_v321_cw_1",
    "description": "This control checks for the CloudWatch metric filters using the following pattern: { $.userIdentity.type = 'Root' \u0026\u0026 $.userIdentity.invokedBy NOT EXISTS \u0026\u0026 $.eventType != AwsServiceEvent }.",
    "title": "1 A log metric filter and alarm should exist for usage of the 'root' user",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "cw_1",
      "pci_requirements": "7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/CloudWatch"
    },
    "documentation": "## Description\n\nThis control checks for the CloudWatch metric filters using the following pattern:\n\n```\n{ $.userIdentity.type = \"Root\" \u0026\u0026 $.userIdentity.invokedBy NOT EXISTS \u0026\u0026 $.eventType != \"AwsServiceEvent\" }\n```\n\nIt checks the following:\n\n  - The log group name is configured for use with active multi-Region CloudTrail.\n  - There is at least one Event Selector for a Trail with IncludeManagementEvents set to true and ReadWriteType set to All.\n  - There is at least one active subscriber to an Amazon SNS topic associated with the alarm.\n\n## Remediation\n\nThe steps to remediate this issue include setting up an Amazon SNS topic, a metric filter, and an alarm for the metric filter.\n\nTo create an Amazon SNS topic\n\n1. Open the Amazon SNS console at https://console.aws.amazon.com/sns/v3/home.\n2. Create an Amazon SNS topic that receives all CIS alarms.\n3. Create at least one subscriber to the topic.\n4. For more information about creating Amazon SNS topics, see the Amazon Simple Notification Service Developer Guide.\n5. Set up an active CloudTrail trail that applies to all Regions.\n6. To do this, follow the remediation steps in CIS v1.3.0 [3.1 Ensure CloudTrail is enabled in all Regions](https://hub.steampipe.io/mods/turbot/aws_compliance/controls/control.cis_v130_3_1).\n7. Make a note of the associated log group name.\n\nTo create a metric filter and alarm\n\n1. Open the [CloudWatch console](https://console.aws.amazon.com/cloudwatch/).\n2. Choose Logs, then choose **Log groups**.\n3. Choose the log group where CloudTrail is logging.\n4. On the log group details page, choose **Metric filters**.\n5. Choose **Create metric filter**.\n6. Copy the following pattern and then paste it into Filter pattern.\n\n   ```\n    {$.userIdentity.type=\"Root\" \u0026\u0026 $.userIdentity.invokedBy NOT EXISTS \u0026\u0026 $.eventType !=\"AwsServiceEvent\"}\n   ```\n7. Enter the name of the new filter. For example, RootAccountUsage.\n8. Confirm that the value for **Metric namespace** is `LogMetrics`.\n9.  This ensures that all CIS Benchmark metrics are grouped together.\n10. In **Metric name**, enter the name of the metric.\n11. In Metric value, enter 1, and then choose **Next**.\n12. Choose **Create metric filter**.\n13. Next, set up the notification. Select the select the metric filter you just created, then choose **Create alarm**.\n14. Enter the threshold for the alarm (for example, 1), then choose **Next**.\n15. Under Select an SNS topic, for Send notification to, choose an email list, then choose Next.\n16. Enter a **Name and Description** for the alarm, such as `RootAccountUsageAlarm`, then choose **Next**.\n17. Choose **Create Alarm**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_cw"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_cw",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e DMS",
    "category_hierarchy": [
      "PCI v3.2.1",
      "DMS"
    ],
    "control_id": "aws_compliance.control.pci_v321_dms_1",
    "description": "This control checks whether AWS DMS replication instances are public. To do this, it examines the value of the PubliclyAccessible field. A private replication instance has a private IP address that you cannot access outside of the replication network. A replication instance should have a private IP address when the source and target databases are in the same network, and the network is connected to the replication instance's VPC using a VPN, AWS Direct Connect, or VPC peering.",
    "title": "1 AWS Database Migration Service replication instances should not be public",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "dms_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/DMS"
    },
    "documentation": "## Description\n\nThis control checks whether AWS DMS replication instances are public. To do this, it examines the value of the PubliclyAccessible field.\n\nA private replication instance has a private IP address that you cannot access outside of the replication network. A replication instance should have a private IP address when the source and target databases are in the same network, and the network is connected to the replication instance's VPC using a VPN, AWS Direct Connect, or VPC peering.\n\nYou should also ensure that access to your AWS DMS instance configuration is limited to only authorized users. To do this, restrict users’ IAM permissions to modify AWS DMS settings and resources.\n\n## Remediation\n\n**Note** that you cannot change the public access setting once a replication instance is created. It must be deleted and recreated.\n\nTo configure the AWS DMS replication instances setting to be not publicly accessible\n\n1. Open the [AWS Database Migration Service console](https://console.aws.amazon.com/dms/).\n2. In the left navigation pane, under `Resource management`, navigate to `Replication instances`.\n3. To delete the public instance, select the check box for the instance, choose **Actions**, then choose **delete**.\n4. Choose Create replication instance. Provide the configuration details.\n5. To disable public access, make sure that Publicly accessible is not selected.\n6. Choose **Create**.\n\nFor more information, see the section on [Creating a replication instance](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.Creating) in the AWS Database Migration Service User Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_dms"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_dms",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e EC2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "EC2"
    ],
    "control_id": "aws_compliance.control.pci_v321_ec2_1",
    "description": "This control checks whether Amazon Elastic Block Store snapshots are not publicly restorable by everyone, which makes them public. Amazon EBS snapshots should not be publicly restorable by everyone unless you explicitly allow it, to avoid accidental exposure of your company’s sensitive data.",
    "title": "1 Amazon EBS snapshots should not be publicly restorable",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ec2_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.4,1.3.4,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Elastic Block Store snapshots are not publicly restorable by everyone, which makes them public. Amazon EBS snapshots should not be publicly restorable by everyone unless you explicitly allow it, to avoid accidental exposure of your company’s sensitive data.\n\nYou should also ensure that permission to change Amazon EBS configurations are restricted to authorized AWS accounts only. Learn more about managing Amazon EBS snapshot permissions in the [Amazon EC2 User Guide for Linux Instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-modifying-snapshot-permissions.html).\n\n## Remediation\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, under `Elastic Block Store`, choose **Snapshots** and then select your public snapshot.\n3. Choose **Permissions** tab from metadata view section, click **Edit**\n4. Choose **Private** in `This snapshot is currently`\n5. Choose **Save**\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ec2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e EC2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "EC2"
    ],
    "control_id": "aws_compliance.control.pci_v321_ec2_2",
    "description": "This control checks that the default security group of a VPC does not allow inbound or outbound traffic. It does not check for access restrictions for other security groups that are not default, and other VPC configurations.",
    "title": "2 VPC default security group should prohibit inbound and outbound traffic",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ec2_2",
      "pci_requirements": "1.2.1,1.3.4,2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks that the default security group of a VPC does not allow inbound or outbound traffic.\n\nIt does not check for access restrictions for other security groups that are not default, and other VPC configurations.\n\n## Remediation\n\nTo remediate this issue, create new security groups and assign those security groups to your resources. To prevent the default security groups from being used, remove their inbound and outbound rules.\n\n1. Open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, choose `Security groups`. View the `default security groups` details to see the resources that are assigned to them.\n3. Select a default security group, and choose the **Inbound rules** tab. Choose **Edit** inbound rules. Then delete all of the inbound rules. Choose **Save rules**.\n4. Repeat the previous step for each default security group.\n5. Select a default security group and choose the **Outbound rules** tab. Choose **Edit** outbound rules. Then delete all of the outbound rules. Choose **Save rules**.\n6. Repeat the previous step for each default security group.\n\nCreate a set of least-privilege security groups for the resources. For details on how to create security groups, see [Creating a security group](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#CreatingSecurityGroups) in the Amazon VPC User Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ec2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e EC2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "EC2"
    ],
    "control_id": "aws_compliance.control.pci_v321_ec2_3",
    "description": "This control helps you maintain an accurate asset inventory of needed security groups in your cardholder data environment (CDE). It does so by checking that security groups are attached to Amazon EC2 instances or to an ENI. A failed finding indicates you may have unused Amazon EC2 security groups.",
    "title": "3 Unused EC2 security groups should be removed",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ec2_3",
      "pci_requirements": "2.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control helps you maintain an accurate asset inventory of needed security groups in your cardholder data environment (CDE). It does so by checking that security groups are attached to Amazon EC2 instances or to an ENI. A failed finding indicates you may have unused Amazon EC2 security groups.\n\nUnless there is a business need to retain them, you should remove unused resources to maintain an accurate inventory of system components.\n\n## Remediation\n\nYou must perform the following steps for each security group not attached to an ENI.\n\n1. Open the Amazon [VPC console](https://console.aws.amazon.com/vpc/)\n2. In the navigation pane, under Security, choose **Security groups**.\n3. Select the check box for the security group to **delete**.\n4. From **Actions**, choose **Delete security group**.\n5. Choose **Delete**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ec2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e EC2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "EC2"
    ],
    "control_id": "aws_compliance.control.pci_v321_ec2_4",
    "description": "This control checks whether Elastic IP addresses that are allocated to a VPC are attached to Amazon EC2 instances or in-use elastic network interfaces (ENIs). A failed finding indicates you may have unused Amazon EC2 EIPs. This will help you maintain an accurate asset inventory of EIPs in your cardholder data environment (CDE).",
    "title": "4 Unused EC2 EIPs should be removed",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ec2_4",
      "pci_requirements": "2.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether Elastic IP addresses that are allocated to a VPC are attached to Amazon EC2 instances or in-use elastic network interfaces (ENIs).\n\nA failed finding indicates you may have unused Amazon EC2 EIPs.\n\nThis will help you maintain an accurate asset inventory of EIPs in your cardholder data environment (CDE). Unless there is a business need to retain them, you should remove unused resources to maintain an accurate inventory of system components.\n\n## Remediation\n\nTo remediate this issue, create new security groups and assign those security groups to your resources. To prevent the default security groups from being used, remove their inbound and outbound rules.\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, under Network \u0026 Security, choose Elastic IPs.\n3. Choose the Elastic IP address, choose **Actions**, and then choose **Release Elastic IP address**.\n4. When prompted, choose **Release**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ec2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e EC2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "EC2"
    ],
    "control_id": "aws_compliance.control.pci_v321_ec2_5",
    "description": "This control checks whether security groups in use disallow unrestricted incoming SSH traffic. It does not evaluate outbound traffic. Note that security groups are stateful. If you send a request from your instance, the response traffic for that request is allowed to flow in regardless of inbound security group rules. Responses to allowed inbound traffic are allowed to flow out regardless of outbound rules.",
    "title": "5 Security groups should not allow ingress from 0.0.0.0/0 to port 22",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ec2_5",
      "pci_requirements": "1.2.1,1.3.1,2.2.2",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether security groups in use disallow unrestricted incoming SSH traffic.\n\nIt does not evaluate outbound traffic.\n\nNote that security groups are stateful. If you send a request from your instance, the response traffic for that request is allowed to flow in regardless of inbound security group rules. Responses to allowed inbound traffic are allowed to flow out regardless of outbound rules.\n\n## Remediation\n\nPerform the following steps for each security group associated with a VPC.\n\n1. Open the Amazon [VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, under Security, choose **Security groups**.\n3. Select a `security group`.\n4. In the bottom section of the page, choose `Inbound rules`.\n5. Choose **Edit** `inbound rules`.\n6. Identify the rule that allows access through port 22 and then choose the `X` to remove it.\n7. Choose **Save** rules.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ec2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e EC2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "EC2"
    ],
    "control_id": "aws_compliance.control.pci_v321_ec2_6",
    "description": "This control checks whether VPC flow logs are found and enabled for VPCs. The traffic type is set to REJECT. With VPC Flow Logs, you can capture information about the IP address traffic to and from network interfaces in your VPC. After you create a flow log, you can use CloudWatch Logs to view and retrieve the log data. Security Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC. They can detect anomalous traffic and provide insight into security workflows. By default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol.",
    "title": "6 VPC flow logging should be enabled in all VPCs",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ec2_6",
      "pci_requirements": "10.3.3,10.3.4,10.3.5,10.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether VPC flow logs are found and enabled for VPCs. The traffic type is set to REJECT.\n\nWith VPC Flow Logs, you can capture information about the IP address traffic to and from network interfaces in your VPC. After you create a flow log, you can use CloudWatch Logs to view and retrieve the log data.\n\nSecurity Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC. They can detect anomalous traffic and provide insight into security workflows.\n\nBy default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol. For more information and descriptions of the log fields, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html)in the Amazon VPC User Guide.\n\n## Remediation\n\nTo enable VPC flow logging\n\n1. Open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, under Virtual Private Cloud, choose Your VPCs.\n3. Select a `VPC` to update.\n4. At the bottom of the page, choose **Flow Logs**.\n5. Choose **Create** flow log.\n6. For Filter, choose **Reject**.\n7. For Destination log group, choose the `log group` to use.\n8. If you chose `CloudWatch Logs` for your destination log group, for IAM role, choose the IAM role to use.\n9. Choose **Create**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ec2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e ELBV2",
    "category_hierarchy": [
      "PCI v3.2.1",
      "ELBV2"
    ],
    "control_id": "aws_compliance.control.pci_v321_elbv2_1",
    "description": "This control checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The control fails if any of the HTTP listeners of Application Load Balancers do not have HTTP to HTTPS redirection configured.",
    "title": "1 Application Load Balancer should be configured to redirect all HTTP requests to HTTPS",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "elbv2_1",
      "pci_requirements": "2.3,4.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/ELBv2"
    },
    "documentation": "## Description\n\nThis control checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The control fails if any of the HTTP listeners of Application Load Balancers do not have HTTP to HTTPS redirection configured.\n\nBefore you start to use your Application Load Balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners support both the HTTP and HTTPS protocols. You can use an HTTPS listener to offload the work of encryption and decryption to your load balancer. To enforce encryption in transit, you should use redirect actions with Application Load Balancers to redirect client HTTP requests to an HTTPS request on port 443.\n\n## Remediation\n\nTo enable VPC flow logging\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, under Load Balancing, choose **Load balancers**.\n3. Choose an `Application Load Balancer`.\n4. Choose **Listeners**.\n5. Select the check box for an HTTP listener (port 80 TCP) and then choose **Edit**.\n6. If there is an existing rule, you must delete it. Otherwise, choose **Add action** and then choose **Redirect to....**\n7. Choose `HTTPS` and then enter `443`.\n8. Choose the check mark in a circle symbol and then choose **Update**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_elbv2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_elbv2",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Elasticsearch",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Elasticsearch"
    ],
    "control_id": "aws_compliance.control.pci_v321_es_1",
    "description": "This control checks whether Amazon Elasticsearch Service domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public reachability.",
    "title": "1 Amazon Elasticsearch Service domains should be in a VPC",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "es_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Elasticsearch Service domains are in a VPC.\n\nIt does not evaluate the VPC subnet routing configuration to determine public reachability.\n\nThis AWS control also does not check whether the Amazon ES resource-based policy permits public access by other accounts or external entities. You should ensure that Amazon ES domains are not attached to public subnets. See [Resource-based policies](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-types-resource) in the Amazon Elasticsearch Service Developer Guide.\n\n## Remediation\n\nIf you create a domain with a public endpoint, you cannot later place it within a VPC. Instead, you must create a new domain and migrate your data.\n\nThe reverse is also true. If you create a domain within a VPC, it cannot have a public endpoint. Instead, you must either create another domain or disable this control.\n\nSee the information on migrating from public access to VPC access in the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-migrating-public-to-vpc).\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_es",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Elasticsearch",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Elasticsearch"
    ],
    "control_id": "aws_compliance.control.pci_v321_es_2",
    "description": "This control checks whether Amazon ES domains have encryption at rest configuration enabled.",
    "title": "2 Amazon Elasticsearch Service domains should have encryption at rest enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "es_2",
      "pci_requirements": "3.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon ES domains have encryption at rest configuration enabled.\n\n## Remediation\n\nBy default, domains do not encrypt data at rest, and you cannot configure existing domains to use the feature.\n\nTo enable the feature, you must create another domain and migrate your data. For information about creating domains, see the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains).\n\nEncryption of data at rest requires Amazon ES 5.1 or later. For more information about encrypting data at rest for Amazon ES, see the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html).\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_es",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e GuardDuty",
    "category_hierarchy": [
      "PCI v3.2.1",
      "GuardDuty"
    ],
    "control_id": "aws_compliance.control.pci_v321_guardduty_1",
    "description": "This control checks whether Amazon GuardDuty is enabled in your AWS account and Region.",
    "title": "1 GuardDuty should be enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "guardduty_1",
      "pci_requirements": "11.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/GuardDuty"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon GuardDuty is enabled in your AWS account and Region.\n\nWhile GuardDuty can be effective against attacks that an intrusion detection system would typically protect, it might not be a complete solution for every environment. This rule also does not check for the generation of alerts to personnel. For more information about GuardDuty, see the [Amazon GuardDuty User Guide](https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html).\n\n## Remediation\n\nTo remediate this issue, you enable GuardDuty.\n\nRefer here for more [Getting started with GuardDuty](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_settingup.html).\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_guardduty"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_guardduty",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_1",
    "description": "This control checks whether user access keys exist for the root user.",
    "title": "1 IAM root user access key should not exist",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_1",
      "pci_requirements": "2.1,2.2,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks whether user access keys exist for the root user.\n\n## Remediation\n\nTo delete access keys\n\n1. Log in to your account using the root user credentials.\n2. Choose the account name near the top-right corner of the page and then choose **My Security Credentials**.\n3. In the pop-up warning, choose **Continue to Security Credentials**.\n4. Choose `Access keys (access key ID and secret access key)`.\n5. To permanently delete the key, choose **Delete** and then choose **Yes**. You cannot recover deleted keys.\n6. If there is more than one root user access key, then repeat steps 4 and 5 for each key.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_2",
    "description": "This control checks that none of your IAM users have policies attached. IAM users must inherit permissions from IAM groups or roles. It does not check whether least privileged policies are applied to IAM roles and groups.",
    "title": "2 IAM users should not have IAM policies attached",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_2",
      "pci_requirements": "7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks that none of your IAM users have policies attached. IAM users must inherit permissions from IAM groups or roles.\n\nIt does not check whether least privileged policies are applied to IAM roles and groups.\n\n## Remediation\n\nTo resolve this issue, do the following:\n\n1. Create an IAM group\n2. Assign the policy to the group\n3. Add the users to the group\n\nThe policy is applied to each user in the group.\n\n**To create an IAM group**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Groups** and then choose **Create New Group**.\n3. Enter a name for the group to create and then choose **Next Step**.\n4. Select each policy to assign to the group and then choose **Next Step**.\n5. The policies that you choose should include any policies currently attached directly to a user account. The next step to resolve a failed check is to add users to a group and then assign the policies to that group.\n6. Each user in the group gets assigned the policies assigned to the group.\n7. Confirm the details on the **Review** page and then choose **Create Group**.\n\n**To add users to an IAM group**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Groups**.\n3. Choose **Group Actions** and then choose **Add Users to Group**.\n4. Choose the users to add to the group and then choose **Add Users**.\n\n**To remove a policy attached directly to a user**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Users**.\n3. For the user to detach a policy from, in the User name column, choose the name.\n4. For each policy listed under **Attached directly**, to remove the policy from the user, choose the X on the right side of the page and then choose **Remove**.\n5. Confirm that the user can still use AWS services as expected.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_3",
    "description": "This control checks whether the default version of AWS Identity and Access Management policies (also known as customer managed policies) do not have administrator access with a statement that has 'Effect': 'Allow' with 'Action': '*' over 'Resource': '*'.",
    "title": "3 IAM policies should not allow full '*' administrative privileges",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_3",
      "pci_requirements": "7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks whether the default version of AWS Identity and Access Management policies (also known as customer managed policies) do not have administrator access with a statement that has `\"Effect\"`: \"Allow\" with \"Action\": \"*\" over \"Resource\": \"*\".\n\nIt only checks for the customer managed policies that you created, but does not check for full access to individual services, such as \"S3:*\".\n\nIt does not check for inline and AWS managed policies.\n\n## Remediation\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Policies**.\n3. Choose the radio button next to the policy to remove.\n4. From **Policy actions**, choose **Detach**.\n5. On the **Detach policy** page, choose the radio button next to each user to detach the policy from and then choose **Detach policy**.\n6. Confirm that the user that you detached the policy from can still access AWS services and resources as expected.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_4",
    "description": "This control checks whether your AWS account is enabled to use multi-factor authentication (MFA) hardware device to sign in with root user credentials. It does not check whether you are using virtual MFA.",
    "title": "4 Hardware MFA should be enabled for the root user",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_4",
      "pci_requirements": "8.3.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks whether your AWS account is enabled to use multi-factor authentication (MFA) hardware device to sign in with root user credentials.\n\nIt does not check whether you are using virtual MFA.\n\nTo address PCI DSS requirement 8.3.1, you can choose between hardware MFA (this control) or virtual MFA `PCI.IAM.5`(Virtual MFA should be enabled for the root user).\n\n## Remediation\n\nTo enable hardware-based MFA for the root account\n\n1. Log in to your account using the root user credentials.\n2. Choose the account name at the top right of the page and then choose **My Security Credentials**.\n3. In the warning, choose **Continue to Security Credentials**.\n4. Choose **Multi-factor authentication (MFA)**.\n5. Choose **Activate MFA**.\n6. Choose a hardware-based (not virtual) device to use for MFA and then choose **Continue**.\n7. Complete the steps to configure the device type appropriate to your selection.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_5",
    "description": "This control checks whether users of your AWS account require a multi-factor authentication (MFA) device to sign in with root user credentials. It does not check whether you are using hardware MFA.",
    "title": "5 Virtual MFA should be enabled for the root user",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_5",
      "pci_requirements": "8.3.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_6",
    "description": "This control checks whether the IAM users have multi-factor authentication (MFA) enabled.",
    "title": "6 MFA should be enabled for all IAM users",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_6",
      "pci_requirements": "8.3.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_7",
    "description": "This control checks whether your IAM users have passwords or active access keys that have not been used within a specified number of days. The default is 90 days.",
    "title": "7 IAM user credentials should be disabled if not used within a predefined number of days",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_7",
      "pci_requirements": "8.1.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e IAM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "IAM"
    ],
    "control_id": "aws_compliance.control.pci_v321_iam_8",
    "description": "This control checks whether the account password policy for IAM users uses the following minimum PCI DSS configurations.",
    "title": "8 Password policies for IAM users should have strong configurations",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "iam_8",
      "pci_requirements": "8.1.4,8.2.3,8.2.4,8.2.5",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_iam",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e KMS",
    "category_hierarchy": [
      "PCI v3.2.1",
      "KMS"
    ],
    "control_id": "aws_compliance.control.pci_v321_kms_1",
    "description": "This control checks that key rotation is enabled for each customer master key (CMK). It does not check CMKs that have imported key material. You should ensure keys that have imported material and those that are not stored in AWS KMS are rotated. AWS managed customer master keys are rotated once every 3 years.",
    "title": "1 Customer master key (CMK) rotation should be enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "kms_1",
      "pci_requirements": "3.6.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/KMS"
    },
    "documentation": "## Description\n\nThis control checks that key rotation is enabled for each customer master key (CMK). It does not check CMKs that have imported key material.\n\nYou should ensure keys that have imported material and those that are not stored in AWS KMS are rotated. AWS managed customer master keys are rotated once every 3 years.\n\n## Remediation\n\nTo enable CMK rotation\n\n1. Open the [AWS KMS console](https://console.aws.amazon.com/kms).\n2. To change the AWS Region, use the Region selector in the upper-right corner of the page.\n3. Choose **Customer managed keys**.\n4. In the Alias column, choose the alias of the key to update.\n5. Choose **Key rotation**.\n6. Select Automatically rotate this CMK every year and then choose **Save**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_kms"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_kms",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Lambda",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Lambda"
    ],
    "control_id": "aws_compliance.control.pci_v321_lambda_1",
    "description": "This control checks whether the Lambda function resource-based policy prohibits public access. It does not check for access to the Lambda function by internal principals, such as IAM roles. You should ensure that access to the Lambda function is restricted to authorized principals only by using least privilege Lambda resource-based policies.",
    "title": "1 Lambda functions should prohibit public access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "lambda_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/Lambda"
    },
    "documentation": "## Description\n\nThis control checks whether the Lambda function resource-based policy prohibits public access.\n\nIt does not check for access to the Lambda function by internal principals, such as IAM roles. You should ensure that access to the Lambda function is restricted to authorized principals only by using least privilege Lambda resource-based policies.\n\nFor more information about using resource-based policies for AWS Lambda, see the [AWS Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html).\n\n## Remediation\n\nTo remediate this issue, you update the resource-based policy to change the publicly accessible Lambda function to a private Lambda function.\nYou can only update resource-based policies for Lambda resources within the scope of the AddPermission and AddLayerVersionPermission API actions.\nYou cannot author policies for your Lambda resources in JSON, or use conditions that don't map to parameters for those actions using the CLI or the SDK.\n\n**To use the AWS CLI to revoke function-use permission from an AWS service or another account**\n\n1. To get the ID of the statement from the output of GetPolicy, from the AWS CLI, run the following:\n\n```bash\naws lambda get-policy —function-name yourfunctionname\n```\nThis command returns the Lambda resource-based policy string associated with the publicly accessible Lambda function.\n\n2. From the policy statement returned by the get-policy command, copy the string value of the Sid field.\n\n3. From the AWS CLI, run\n\n```bash\naws lambda remove-permission --function-name yourfunctionname —statement-id youridvalue\n```\n\nTo use the Lambda console to restrict access to the Lambda function\n\n1. Open the [AWS Lambda console](https://console.aws.amazon.com/lambda/).\n2. Navigate to Functions and then select your publicly accessible Lambda function.\n3. Under **Designer**, choose the key icon at the top left. It has the tool-tip View permissions.\n4. Under Function policy, if the policy allows actions for the principal element `“*”` or `{“AWS”: “*”}`, it is publicly accessible.\n   - Consider adding the following IAM condition to scope access to your account only.\n\n    ```json\n        \"Condition\": {\n      \"StringEquals\": {\n        \"AWS:SourceAccount\": \"\u003caccount_id\u003e\"\n        }\n      }\n    }\n    ```\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_lambda"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_lambda",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Lambda",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Lambda"
    ],
    "control_id": "aws_compliance.control.pci_v321_lambda_2",
    "description": "This control checks whether a Lambda function is in a VPC. It does not evaluate the VPC subnet routing configuration to determine public reachability.",
    "title": "2 Lambda functions should be in a VPC",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "lambda_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/Lambda"
    },
    "documentation": "## Description\n\nThis control checks whether a Lambda function is in a VPC.\n\nIt does not evaluate the VPC subnet routing configuration to determine public reachability.\n\nNote that if Lambda@Edge is found in the account, then this control generates failed findings. To prevent these findings, you can disable this control.\n\n## Remediation\n\nTo configure a function to connect to private subnets in a virtual private cloud (VPC) in your account\n\n1. Open the [AWS Lambda console](https://console.aws.amazon.com/lambda/).\n2. Navigate to `Functions` and then select your Lambda function.\n3. Scroll to **Network** and then select a **VPC** with the connectivity requirements of the function.\n4. To run your functions in high availability mode, Security Hub recommends that you choose at least two subnets.\n5. Choose at least one security group that has the connectivity requirements of the function.\n6. Choose **Save**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_lambda"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_lambda",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e OpenSearch",
    "category_hierarchy": [
      "PCI v3.2.1",
      "OpenSearch"
    ],
    "control_id": "aws_compliance.control.pci_v321_opensearch_1",
    "description": "This control checks whether Amazon OpenSearch domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access.",
    "title": "1 Amazon OpenSearch domains should be in a VPC",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "opensearch_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon OpenSearch domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access.\n\nYou should ensure that Amazon OpenSearch domains are not attached to public subnets. See [Resource-based policies](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ac.html#ac-types-resource) in the Amazon OpenSearch Service Developer Guide.\n\nYou also should ensure that your VPC is configured according to the recommended best practices. See [Security best practices for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html) in the Amazon VPC User Guide.\n\nAmazon OpenSearch domains deployed within a VPC can communicate with VPC resources over the private AWS network, without the need to traverse the public internet. This configuration increases the security posture by limiting access to the data in transit. VPCs provide a number of network controls to secure access to Amazon OpenSearch domains, including network ACL and security groups. Security Hub recommends that you migrate public Amazon OpenSearch domains to VPCs to take advantage of these controls.\n\n## Remediation\n\nIf you create a domain with a public endpoint, you cannot later place it within a VPC. Instead, you must create a new domain and migrate your data. The reverse is also true. If you create a domain within a VPC, it cannot have a public endpoint. Instead, you must either [create another domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#es-createdomains) or disable this control.\n\nSee [Launching your Amazon OpenSearch Service domains within a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html) in the Amazon OpenSearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_opensearch",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e OpenSearch",
    "category_hierarchy": [
      "PCI v3.2.1",
      "OpenSearch"
    ],
    "control_id": "aws_compliance.control.pci_v321_opensearch_2",
    "description": "This control checks whether Amazon OpenSearch domains have encryption-at-rest configuration enabled. The check fails if encryption at rest is not enabled.",
    "title": "2 OpenSearch domains should have encryption at rest enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "opensearch_2",
      "pci_requirements": "3.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon OpenSearch domains have encryption-at-rest configuration enabled. The check fails if encryption at rest is not enabled.\n\nFor an added layer of security for your sensitive data in OpenSearch, you should configure your OpenSearch domain to be encrypted at rest. OpenSearch domains offer encryption of data at rest. The feature uses AWS KMS to store and manage your encryption keys. To perform the encryption, it uses the Advanced Encryption Standard algorithm with 256-bit keys (AES-256).\n\nTo learn more about OpenSearch encryption at rest, see [Encryption of data at rest for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html) in the Amazon OpenSearch Service Developer Guide.\n\n\n## Remediation\n\nBy default, domains do not encrypt data at rest, and you cannot configure existing domains to use the feature. To enable the feature, you must create another domain and migrate your data.\n\nFor information about creating domains, see [Creating and managing Amazon OpenSearch Service domains](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html) in the Amazon OpenSearch Service Developer Guide.\n\nSee [Launching your Amazon OpenSearch Service domains within a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html) in the Amazon OpenSearch Service Developer Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_opensearch",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e RDS",
    "category_hierarchy": [
      "PCI v3.2.1",
      "RDS"
    ],
    "control_id": "aws_compliance.control.pci_v321_rds_1",
    "description": "This control checks whether Amazon RDS DB snapshots prohibit access by other accounts. You should also ensure that access to the snapshot and permission to change Amazon RDS configuration is restricted to authorized principals only.",
    "title": "1 RDS snapshots should prohibit public access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "rds_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.4,1.3.6,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon RDS DB snapshots prohibit access by other accounts. You should also ensure that access to the snapshot and permission to change Amazon RDS configuration is restricted to authorized principals only.\n\n**Note** that if the configuration is changed to allow public access, the AWS Config rule may not be able to detect the change for up to 12 hours. Until the AWS Config rule detects the change, the check passes even though the configuration violates the rule.\n\n## Remediation\n\nTo remove public access for Amazon RDS Databases\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Navigate to Snapshots and then select the public Snapshot you want to modify\n3. From the **Actions** list, choose **Share Snapshots**\n4. From **DB snapshot visibility**, choose **Private**\n5. Under **DB snapshot visibility**, select **for all**\n6. Choose **Save**\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_rds",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e RDS",
    "category_hierarchy": [
      "PCI v3.2.1",
      "RDS"
    ],
    "control_id": "aws_compliance.control.pci_v321_rds_2",
    "description": "This control checks whether RDS instances are publicly accessible by evaluating the publiclyAccessible field in the instance configuration item. The value of publiclyAccessible indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible,it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address.",
    "title": "2 RDS DB Instances should prohibit public access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "rds_2",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether RDS instances are publicly accessible by evaluating the publiclyAccessible field in the instance configuration item. The value of publiclyAccessible indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address.\n\nThe control does not check VPC subnet routing settings or the Security Group rules. You should also ensure VPC subnet routing does not allow public access, and that the security group inbound rule associated with the RDS instance does not allow unrestricted access (0.0.0.0/0). You should also ensure that access to your RDS instance configuration is limited to only authorized users by restricting users' IAM permissions to modify RDS instances settings and resources.\n\n## Remediation\n\nTo remove public access for Amazon RDS Databases\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Navigate to Databases and then choose your public database.\n3. Choose **Modify**.\n4. Scroll to **Network \u0026 Security**.\n5. For `Public accessibility`, choose **No**.\n6. Scroll to the bottom and then choose **Continue**.\n7. Under Scheduling of modifications, choose **Apply immediately**.\n8. Choose Modify DB Instance.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_rds",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e Redshift",
    "category_hierarchy": [
      "PCI v3.2.1",
      "Redshift"
    ],
    "control_id": "aws_compliance.control.pci_v321_redshift_1",
    "description": "This control checks whether Amazon Redshift clusters are publicly accessible by evaluating the publiclyAccessible field in the cluster configuration item.",
    "title": "1 Amazon Redshift clusters should prohibit public access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "redshift_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Redshift clusters are publicly accessible by evaluating the publiclyAccessible field in the cluster configuration item.\n\n## Remediation\n\n1. Open the [Amazon Redshift console](https://console.aws.amazon.com/redshift/).\n2. On the navigation pane, choose **Clusters** and then select your public Amazon Redshift cluster.\n3. From the Cluster drop-down menu, choose **Modify cluster**.\n4. In `Publicly accessible`, choose **No**.\n5. Choose **Modify**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_redshift",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e S3",
    "category_hierarchy": [
      "PCI v3.2.1",
      "S3"
    ],
    "control_id": "aws_compliance.control.pci_v321_s3_1",
    "description": "This control checks whether your S3 buckets allow public write access by evaluating the Block Public Access settings, the bucket policy, and the bucket access control list (ACL). It does not check for write access to the bucket by internal principals, such as IAM roles. You should ensure that access to the bucket is restricted to authorized principals only.",
    "title": "1 S3 buckets should prohibit public write access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "s3_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether your S3 buckets allow public write access by evaluating the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).\n\nIt does not check for write access to the bucket by internal principals, such as IAM roles. You should ensure that access to the bucket is restricted to authorized principals only.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the name of the bucket identified in the finding.\n3. Choose **Permissions** and then choose **Public access settings.**\n4. Choose **Edit**, select all four options, and then choose **Save**.\n5. If prompted, enter `confirm` and then choose **Confirm**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_s3",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e S3",
    "category_hierarchy": [
      "PCI v3.2.1",
      "S3"
    ],
    "control_id": "aws_compliance.control.pci_v321_s3_2",
    "description": "This control checks whether your S3 buckets allow public read access by evaluating the Block Public Access settings, the bucket policy, and the bucket access control list (ACL). Unless you explicitly require everyone on the internet to be able to write to your S3 bucket, you should ensure that your S3 bucket is not publicly writable. It does not check for read access to the bucket by internal principals, such as IAM roles. You should ensure that access to the bucket is restricted to authorized principals only.",
    "title": "2 S3 buckets should prohibit public read access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "s3_2",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.6,7.2.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether your S3 buckets allow public read access by evaluating the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).\n\nUnless you explicitly require everyone on the internet to be able to write to your S3 bucket, you should ensure that your S3 bucket is not publicly writable.\n\nIt does not check for read access to the bucket by internal principals, such as IAM roles. You should ensure that access to the bucket is restricted to authorized principals only.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the name of the bucket identified in the finding.\n3. Choose **Permissions** and then choose **Public access settings.**\n4. Choose **Edit**, select all four options, and then choose **Save**.\n5. If prompted, enter `confirm` and then choose **Confirm**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_s3",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e S3",
    "category_hierarchy": [
      "PCI v3.2.1",
      "S3"
    ],
    "control_id": "aws_compliance.control.pci_v321_s3_3",
    "description": "This control checks whether S3 buckets have cross-region replication enabled. PCI DSS does not require data replication or highly available configurations. However, this check aligns with AWS best practices for this control.",
    "title": "3 S3 buckets should have cross-region replication enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "s3_3",
      "pci_requirements": "2.2",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether S3 buckets have cross-region replication enabled.\n\nPCI DSS does not require data replication or highly available configurations. However, this check aligns with AWS best practices for this control.\n\nIn addition to availability, you should consider other systems hardening settings.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the S3 bucket that does not have cross-region replication enabled.\n3. Choose **Management**, then choose **Replication**.\n4. Choose **Add rule**. If versioning is not already enabled, you are prompted to enable it.\n5. Choose your source bucket - `Entire bucket`.\n6. Choose your destination bucket. If versioning is not already enabled on the destination bucket for your account, you are prompted to enable it.\n7. Choose an IAM role. For more information on setting up permissions for replication, see the [Amazon Simple Storage Service Developer Guide](https://docs.aws.amazon.com/AmazonS3/latest/dev/setting-repl-config-perm-overview.html).\n8. Enter a rule name, choose **Enabled** for the status, then choose **Next**.\n9. Choose **Save**\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_s3",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e S3",
    "category_hierarchy": [
      "PCI v3.2.1",
      "S3"
    ],
    "control_id": "aws_compliance.control.pci_v321_s3_4",
    "description": "This control checks that your Amazon S3 bucket either has Amazon S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server-side encryption. When you set default encryption on a bucket, all new objects stored in the bucket are encrypted when they are stored, including clear text PAN data. Server-side encryption for all of the objects stored in a bucket can also be enforced using a bucket policy.",
    "title": "4 S3 buckets should have server-side encryption enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "s3_4",
      "pci_requirements": "3.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks that your Amazon S3 bucket either has Amazon S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server-side encryption.\n\nWhen you set default encryption on a bucket, all new objects stored in the bucket are encrypted when they are stored, including clear text PAN data.\n\nServer-side encryption for all of the objects stored in a bucket can also be enforced using a bucket policy.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the bucket from the list.\n3. Choose **Properties**.\n4. Choose **Default encryption**.\n5. For the encryption, choose either `AES-256` or `AWS-KMS`.\n   1. To use keys that are managed by Amazon S3 for default encryption, choose AES-256. For more information about using Amazon S3 server-side encryption to encrypt your data,\n   2. To use keys that are managed by AWS KMS for default encryption, choose AWS-KMS. Then choose a master key from the list of the AWS KMS master keys that you have created. Type the Amazon Resource Name (ARN) of the AWS KMS key to use. You can find the ARN for your AWS KMS key in the IAM console, under Encryption keys. Or, you can choose a key name from the drop-down list.\n6. Choose **Save**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_s3",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e S3",
    "category_hierarchy": [
      "PCI v3.2.1",
      "S3"
    ],
    "control_id": "aws_compliance.control.pci_v321_s3_5",
    "description": "This control checks whether Amazon S3 buckets have policies that require requests to use Secure Socket Layer (SSL). S3 buckets should have policies that require all requests (Action: S3:*)to only accept transmission of data over HTTPS in the S3 resource policy, indicated by the condition key aws:SecureTransport.",
    "title": "5 S3 buckets should require requests to use Secure Socket Layer",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "s3_5",
      "pci_requirements": "4.1",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon S3 buckets have policies that require requests to use Secure Socket Layer (SSL).\n\nS3 buckets should have policies that require all requests (Action: S3:*) to only accept transmission of data over HTTPS in the S3 resource policy, indicated by the condition key aws:SecureTransport.\n\nThis does not check the SSL or TLS version. You should not allow early versions of SSL or TLS (SSLv3, TLS1.0) per PCI DSS requirements.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Navigate to the noncompliant bucket, and then choose the bucket name.\n3. Choose **Permissions**, then choose **Bucket Policy**.\n4. Add a similar policy statement to that in the policy below. Replace `awsexamplebucket` with the name of the bucket you are modifying.\n\n```json\n{\n    \"Id\": \"ExamplePolicy\",\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowSSLRequestsOnly\",\n            \"Action\": \"s3:*\",\n            \"Effect\": \"Deny\",\n            \"Resource\": [\n                \"arn:aws:s3:::awsexamplebucket\",\n                \"arn:aws:s3:::awsexamplebucket/*\"\n            ],\n            \"Condition\": {\n                \"Bool\": {\n                     \"aws:SecureTransport\": \"false\"\n                }\n            },\n           \"Principal\": \"*\"\n        }\n    ]\n}\n```\n\n5. Choose **Save**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_s3",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e S3",
    "category_hierarchy": [
      "PCI v3.2.1",
      "S3"
    ],
    "control_id": "aws_compliance.control.pci_v321_s3_6",
    "description": "This control checks whether the following public access block settings are configured at the account level. The control passes if all of the public access block settings are set to true. The control fails if any of the settings are set to false, or if any of the settings are not configured. When the settings do not have a value, the AWS Config rule cannot complete its evaluation.",
    "title": "6 S3 Block Public Access setting should be enabled",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "s3_6",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether the following public access block settings are configured at the account level.\n\n- ignorePublicAcls: true,\n- blockPublicPolicy: true\n- blockPublicAcls: true\n- restrictPublicBuckets: true\n\nThe control passes if all of the public access block settings are set to true.\n\nThe control fails if any of the settings are set to false, or if any of the settings are not configured. When the settings do not have a value, the AWS Config rule cannot complete its evaluation.\n\nAs an AWS best practice, S3 buckets should block public access. Unless you explicitly require everyone on the internet to be able to access your S3 bucket, you should ensure that your S3 bucket is not publicly accessible.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. In the navigation pane, choose **Block public access** (account settings).\n3. Choose **Edit**. Then select `Block all public access`.\n4. Choose **Save** changes\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_s3",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e SageMaker",
    "category_hierarchy": [
      "PCI v3.2.1",
      "SageMaker"
    ],
    "control_id": "aws_compliance.control.pci_v321_sagemaker_1",
    "description": "This control checks whether direct internet access is disabled for an SageMaker notebook instance. To do this, it checks whether the DirectInternetAccess field is disabled for the notebook instance.",
    "title": "1 Amazon SageMaker notebook instances should not have direct internet access",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "sagemaker_1",
      "pci_requirements": "1.2.1,1.3.1,1.3.2,1.3.4,1.3.6",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/SageMaker"
    },
    "documentation": "## Description\n\nThis control checks whether direct internet access is disabled for an SageMaker notebook instance. To do this, it checks whether the DirectInternetAccess field is disabled for the notebook instance.\n\nIf you configure your SageMaker instance without a VPC, then by default direct internet access is enabled on your instance. You should configure your instance with a VPC and change the default setting to `Disable — Access the internet through a VPC`.\n\nTo train or host models from a notebook, you need internet access. To enable internet access, make sure that your VPC has a NAT gateway and your security group allows outbound connections. To learn more about how to connect a notebook instance to resources in a VPC, see [Connect a notebook instance to resources in a VPC](https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-notebook-and-internet-access.html) in the Amazon SageMaker Developer Guide.\n\nYou should also ensure that access to your SageMaker configuration is limited to only authorized users. Restrict users' IAM permissions to modify SageMaker settings and resources.\n\n## Remediation\n\nNote that you cannot change the internet access setting after a notebook instance is created. It must be stopped, deleted, and recreated.\n\nTo configure an SageMaker notebook instance to deny direct internet access\n\n1. Open the [SageMaker console](https://console.aws.amazon.com/sagemaker/)\n2. Navigate to **Notebook instances**.\n3. Delete the instance that has direct internet access enabled. Choose the instance, choose Actions, then choose stop.\n4. After the instance is stopped, choose **Actions**, then choose **delete**.\n5. Choose Create notebook instance. Provide the configuration details.\n6. Expand the **Network** section. Then choose a VPC, subnet, and security group. Under **Direct internet access**, choose **Disable — Access the internet through a VPC**.\n7. Choose **Create notebook instance**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_sagemaker"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_sagemaker",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e SSM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "SSM"
    ],
    "control_id": "aws_compliance.control.pci_v321_ssm_1",
    "description": "This control checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT after the patch installation on the instance.",
    "title": "1 Amazon EC2 instances managed by Systems Manager should have a patch compliance status of COMPLIANT after a patch installation",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ssm_1",
      "pci_requirements": "6.2",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT after the patch installation on the instance.\n\nIt only checks instances that are managed by AWS Systems Manager Patch Manager.\n\nIt does not check whether the patch was applied within the 30-day limit prescribed by PCI DSS requirement 6.2.\n\nIt also does not validate whether the patches applied were classified as security patches.\n\n## Remediation\n\nThis rule checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is COMPLIANT or NON_COMPLIANT. To find out more about patch compliance states, see the [AWS Systems Manager User Guide](https://docs.aws.amazon.com/systems-manager/latest/userguide/about-patch-compliance-states.html).\n\n1. Open the [AWS Systems Manager console](https://console.aws.amazon.com/systems-manager/.)\n2. In the navigation pane, under **Instances \u0026 Nodes**, choose **Run Command**.\n3. Choose **Run command**.\n4. Choose the radio button next to AWS-RunPatchBaseline and then change the **Operation to Install**.\n5. Choose **Choose instances manually** and then choose the noncompliant instance(s).\n6. Scroll to the bottom and then choose **Run**.\n7. After the command has completed, to monitor the new compliance status of your patched instances, in the navigation pane, choose Compliance.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ssm",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e SSM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "SSM"
    ],
    "control_id": "aws_compliance.control.pci_v321_ssm_2",
    "description": "This control checks whether the status of the AWS Systems Manager association compliance is COMPLIANT or NON_COMPLIANT after the association is run on an instance. The control passes if the association compliance status is COMPLIANT.",
    "title": "2 Instances managed by Systems Manager should have an association compliance status of COMPLIANT",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ssm_2",
      "pci_requirements": "2.4",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether the status of the AWS Systems Manager association compliance is COMPLIANT or NON_COMPLIANT after the association is run on an instance. The control passes if the association compliance status is COMPLIANT.\n\nA State Manager association is a configuration that is assigned to your managed instances. The configuration defines the state that you want to maintain on your instances. For example, an association can specify that antivirus software must be installed and running on your instances, or that certain ports must be closed.\n\nAfter you create one or more State Manager associations, compliance status information is immediately available to you in the console or in response to AWS CLI commands or corresponding Systems Manager API operations. For associations, Configuration Compliance shows statuses of Compliant or Non-compliant and the severity level assigned to the association, such as Critical or Medium. To learn more about State Manager association compliance, see About State Manager association compliance in the AWS Systems Manager User Guide.\n\nYou must configure your in-scope EC2 instances for Systems Manager association. You must also configure the patch baseline for the security rating of the vendor of patches, and set the autoapproval date to meet PCI DSS 3.2.1 requirement 6.2. For additional guidance on how to create an association, see [Create an association](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-state-assoc.html) in the AWS Systems Manager User Guide. For additional information on working with patching in Systems Manager, see [AWS Systems Manager Patch Manager](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-patch.html) in the AWS Systems Manager User Guide.\n\n## Remediation\n\nA failed association can be related to different things, including targets and SSM document names. To remediate this issue, you must first identify and investigate the association. You can then update the association to correct the specific issue.\n\nYou can edit an association to specify a new name, schedule, severity level, or targets. After you edit an association, Systems Manager creates a new version. To investigate and update a failed association\n\n1. Open the [AWS Systems Manager console](https://console.aws.amazon.com/systems-manager/).\n2. In the navigation pane, under **Instances \u0026 Nodes**, choose **Managed Instances**.\n3. Choose the instance ID that has an **Association status** of **Failed**.\n4. Choose **View details**.\n5. Choose **Associations**.\n6. Note the name of the association that has an **Association status** of **Failed**. This is the association that you need to investigate. You need to use the association name in the next step.\n7. In the navigation pane, choose **State Manager**. Search for the association name, then select the association.\n8. After you determine the issue, edit the failed association to correct the problem. For information on how to edit an association, see [Edit an association](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-state-assoc-edit.html).\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ssm",
    "executable": true
  },
  {
    "category_breadcrumb": "PCI v3.2.1 \u003e SSM",
    "category_hierarchy": [
      "PCI v3.2.1",
      "SSM"
    ],
    "control_id": "aws_compliance.control.pci_v321_ssm_3",
    "description": "This control checks whether the EC2 instances in your account are managed by Systems Manager.",
    "title": "3 EC2 instances should be managed by AWS Systems Manager",
    "tags": {
      "category": "Compliance",
      "pci": "true",
      "pci_item_id": "ssm_3",
      "pci_requirements": "2.4,6.2",
      "pci_version": "v3.2.1",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether the EC2 instances in your account are managed by Systems Manager.\n\nAWS Systems Manager is an AWS service that you can use to view and control your AWS infrastructure. To help you to maintain security and compliance, Systems Manager scans your managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances. Additional configuration is needed in Systems Manager for patch deployment to managed EC2 instances.\n\n## Remediation\n\nYou can use the Systems Manager quick setup to set up Systems Manager to manage your EC2 instances.\n\nTo determine whether your instances can support Systems Manager associations, see [Systems Manager prerequisites](https://docs.aws.amazon.com/systems-manager/latest/userguide/systems-manager-prereqs.html) in the AWS Systems Manager User Guide.\n\n1. Open the [AWS Systems Manager console](https://console.aws.amazon.com/systems-manager/).\n2. In the navigation pane, choose **Quick setup**.\n3. On the configuration screen, keep the default options.\n4. Choose **Set up Systems Manager**.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.pci_v321",
      "aws_compliance.benchmark.pci_v321_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.pci_v321/aws_compliance.benchmark.pci_v321_ssm",
    "executable": true
  }
]