[
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Account",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Account"
    ],
    "category_hierarchy_short": "AWS - Account",
    "control_id": "aws_compliance.control.foundational_security_account_1",
    "description": "This control checks if an Amazon Web Services (AWS) account has security contact information. The control fails if security contact information is not provided for the account.",
    "title": "1 Security contact information should be provided for an AWS account",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "account_1",
      "plugin": "aws",
      "service": "AWS/Account"
    },
    "documentation": "## Description\n\nThis control checks if an Amazon Web Services (AWS) account has security contact information. The control fails if security contact information is not provided for the account.\n\nAlternate security contacts allow AWS to contact another person about issues with your account in case you're unavailable. Notifications can be from AWS Support, or other AWS service teams about security-related topics associated with your AWS account usage.\n\n## Remediation\n\nTo add an alternate contact as a security contact to your AWS account, see [Adding, changing, or removing alternate contacts](https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/manage-account-payment.html#manage-account-payment-alternate-contacts) in the AWS Billing and Cost Management User Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_account"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_account",
    "executable": true,
    "problem_title": "Security contact information is not provided for the AWS account"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ACM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ACM"
    ],
    "category_hierarchy_short": "AWS - ACM",
    "control_id": "aws_compliance.control.foundational_security_acm_1",
    "description": "This control checks whether ACM certificates in your account are marked for expiration within 30 days. It checks both imported certificates and certificates provided by AWS Certificate Manager.",
    "title": "1 Imported ACM certificates should be renewed after a specified time period",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "acm_1",
      "plugin": "aws",
      "service": "AWS/ACM"
    },
    "documentation": "## Description\n\nThis control checks whether ACM certificates in your account are marked for\nexpiration within 30 days. It checks both imported certificates and\ncertificates provided by AWS Certificate Manager.\n\nCertificates provided by ACM are automatically renewed. If you're using\ncertificates provided by ACM, you do not need to rotate SSL/TLS certificates.\nACM manages certificate renewals for you.\n\nACM does not automatically renew certificates that you import. You must renew\nimported certificates manually.\n\n## Remediation\n\nACM provides managed renewal for your Amazon issued SSL/TLS certificates. This\nincludes both public and private certificates issued by using ACM. If possible,\nACM renews your certificates automatically with no action required from you. A\ncertificate is eligible for renewal if it is associated with another AWS\nservice, such as Elastic Load Balancing or Amazon CloudFront. It can also be\nrenewed if it has been exported since being issued or last renewed.\n\nIf ACM cannot automatically validate one or more domain names in a certificate,\nACM notifies the domain owner that the domain must be validated manually. A\ndomain can require manual validation for the following reasons.\n\n- ACM cannot establish an HTTPS connection with the domain.\n- The certificate that is returned in the response to the HTTPS requests does not\nmatch the one that ACM is renewing.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_acm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_acm",
    "executable": true,
    "problem_title": "Imported ACM certificates are not being renewed after the specified time period"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_1",
    "description": "This control checks whether all stages of an Amazon API Gateway REST or WebSocket API have logging enabled. The control fails if logging is not enabled for all methods of a stage or if loggingLevel is neither ERROR nor INFO.",
    "title": "1 API Gateway REST and WebSocket API logging should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "apigateway_1",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks whether all stages of an Amazon API Gateway REST or WebSocket API have logging enabled. The control fails if logging is not enabled for all methods of a stage or if loggingLevel is neither ERROR nor INFO.\n\nAPI Gateway REST or WebSocket API stages should have relevant logs enabled. API Gateway REST and WebSocket API execution logging provides detailed records of requests made to API Gateway REST and WebSocket API stages. The stages include API integration backend responses, Lambda authorizer responses, and the requestId for AWS integration endpoints.\n\n## Remediation\n\nTo enable logging for REST and WebSocket API operations, see [Set up CloudWatch API logging using the API Gateway console](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-using-console).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "API Gateway REST and WebSocket API logging is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_2",
    "description": "This control checks whether Amazon API Gateway REST API stages have SSL certificates configured. Backend systems use these certificates to authenticate that incoming requests are from API Gateway.",
    "title": "2 API Gateway REST API stages should be configured to use SSL certificates for backend authentication",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_protection",
      "foundational_security_item_id": "apigateway_2",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon API Gateway REST API stages have SSL certificates configured. Backend systems use these certificates to authenticate that incoming requests are from API Gateway.\n\nAPI Gateway REST API stages should be configured with SSL certificates to allow backend systems to authenticate that requests originate from API Gateway.\n\n## Remediation\n\nFor detailed instructions on how to generate and configure API Gateway REST API SSL certificates, see [Generate and configure an SSL certificate for backend authentication](https://docs.aws.amazon.com/apigateway/latest/developerguide/getting-started-client-side-ssl-authentication.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "API Gateway REST API stages are not using SSL certificates for backend authentication"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_3",
    "description": "This control checks whether AWS X-Ray active tracing is enabled for your Amazon API Gateway REST API stages.",
    "title": "3 API Gateway REST API stages should have AWS X-Ray tracing enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "detection_services",
      "foundational_security_item_id": "apigateway_3",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks whether AWS X-Ray active tracing is enabled for your Amazon API Gateway REST API stages.\n\nX-Ray active tracing enables a more rapid response to performance changes in the underlying infrastructure. Changes in performance could result in a lack of availability of the API. X-Ray active tracing provides real-time metrics of user requests that flow through your API Gateway REST API operations and connected services.\n\n## Remediation\n\nFor detailed instructions on how to enable X-Ray active tracing for API Gateway REST API operations, see [Amazon API Gateway active tracing support for AWS X-Ray](https://docs.aws.amazon.com/xray/latest/devguide/xray-services-apigateway.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "API Gateway REST API stages do not have AWS X-Ray tracing enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_4",
    "description": "This control checks whether an API Gateway stage uses an AWS WAF web access control list (ACL). This control fails if an AWS WAF web ACL is not attached to a REST API Gateway stage.",
    "title": "4 API Gateway should be associated with an AWS WAF web ACL",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "protective_services",
      "foundational_security_item_id": "apigateway_4",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks whether an API Gateway stage uses an AWS WAF web access control list (ACL). This control fails if an AWS WAF web ACL is not attached to a REST API Gateway stage.\n\nAWS WAF is a web application firewall that helps protect web applications and APIs from attacks. It enables you to configure an ACL, which is a set of rules that allow, block, or count web requests based on customizable web security rules and conditions that you define. Ensure that your API Gateway stage is associated with an AWS WAF web ACL to help protect it from malicious attacks.\n\n## Remediation\n\nFor information on how to use the API Gateway console to associate an AWS WAF Regional web ACL with an existing API Gateway API stage, see [Using AWS WAF to protect your APIs](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-control-access-aws-waf.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "API Gateway is not associated with an AWS WAF web ACL"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_5",
    "description": "This control checks whether all methods in API Gateway REST API stages that have cache enabled are encrypted. The control fails if any method in an API Gateway REST API stage is configured to cache and the cache is not encrypted.",
    "title": "5 API Gateway REST API cache data should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "apigateway_5",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks whether all methods in API Gateway REST API stages that have cache enabled are encrypted. The control fails if any method in an API Gateway REST API stage is configured to cache and the cache is not encrypted.\n\nEncrypting data at rest reduces the risk of data stored on disk being accessed by a user not authenticated to AWS. It adds another set of access controls to limit unauthorized users ability access the data. For example, API permissions are required to decrypt the data before it can be read.\n\nAPI Gateway REST API caches should be encrypted at rest for an added layer of security.\n\n## Remediation\n\nTo remediate this control, configure the stage to encrypt the cache data.\n\n**To configure API caching for a given stage**\n\n1. Open the [API Gateway console](https://console.aws.amazon.com/apigateway/.)\n\n2. Choose the API.\n\n3. Choose `Stages`.\n\n4. In the `Stages` list for the API, choose the stage to add caching to.\n\n5. Choose `Settings`.\n\n6. Choose `Enable API cache`.\n\n7. Update the desired settings, then select `Encrypt cache data`.\n\n8. Choose `Save Changes`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "API Gateway REST API cache data is not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_8",
    "description": "This control checks if Amazon API Gateway routes have an authorization type. The control fails if the API Gateway route does not specify an authorization type.",
    "title": "8 API Gateway routes should specify an authorization type",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "apigateway_8",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks if Amazon API Gateway routes have an authorization type. The control fails if the API Gateway route does not specify an authorization type.\n\nAPI Gateway supports multiple mechanisms for controlling and managing access to your API. By specifying an authorization type, you can restrict access to your API to only authorized users or processes.\n\n## Remediation\n\nTo set an authorization type for HTTP APIs, see [Controlling and managing access to an HTTP API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-access-control.html) in the API Gateway Developer Guide. To set an authorization type for WebSocket APIs, see [Controlling and managing access to a WebSocket API in API Gateway](https://docs.aws.amazon.com/apigateway/latest/developerguide/apigateway-websocket-api-control-access.html) in the API Gateway Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "API Gateway routes do not specify an authorization type"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > API Gateway",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "API Gateway"
    ],
    "category_hierarchy_short": "AWS - API Gateway",
    "control_id": "aws_compliance.control.foundational_security_apigateway_9",
    "description": "This control checks if Amazon API Gateway V2 stages have access logging configured. This control fails if access log settings aren't defined.",
    "title": "9 Access logging should be configured for API Gateway V2 Stages",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "apigateway_9",
      "plugin": "aws",
      "service": "AWS/APIGateway"
    },
    "documentation": "## Description\n\nThis control checks if Amazon API Gateway V2 stages have access logging configured. This control fails if access log settings aren't defined.\n\nAPI Gateway access logs provide detailed information about who has accessed your API and how the caller accessed the API. These logs are useful for applications such as security and access audits and forensics investigation. Enable these access logs to analyze traffic patterns and to troubleshoot issues.\n\nFor additional best practices, see [Monitoring REST APIs](https://docs.aws.amazon.com/apigateway/latest/developerguide/rest-api-monitor.html) in the API Gateway Developer Guide.\n\n## Remediation\n\nTo set up access logging, see [Set up CloudWatch API logging using the API Gateway console](https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-logging.html#set-up-access-logging-using-console) in the API Gateway Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_apigateway"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_apigateway",
    "executable": true,
    "problem_title": "Access logging is not configured for API Gateway V2 stages"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Athena",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Athena"
    ],
    "category_hierarchy_short": "AWS - Athena",
    "control_id": "aws_compliance.control.foundational_security_athena_1",
    "description": "This control checks if an Athena workgroup is encrypted at rest. The control fails if an Athena workgroup isn't encrypted at rest.",
    "title": "1 Athena workgroups should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "athena_1",
      "plugin": "aws",
      "service": "AWS/Athena"
    },
    "documentation": "## Description\n\nThis control checks if an Athena workgroup is encrypted at rest. The control fails if an Athena workgroup isn’t encrypted at rest.\n\nIn Athena, you can create workgroups for running queries for teams, applications, or different workloads. Each workgroup has a setting to enable encryption on all queries. You have the option to use server-side encryption with Amazon Simple Storage Service (Amazon S3) managed keys, server-side encryption with AWS Key Management Service (AWS KMS) keys, or client-side encryption with customer managed KMS keys. Data at rest refers to any data that's stored in persistent, non-volatile storage for any duration. Encryption helps you protect the confidentiality of such data, reducing the risk that an unauthorized user can access it.\n\n## Remediation\n\nTo enable encryption at rest for Athena workgroups, see [Edit a workgroup](https://docs.aws.amazon.com/athena/latest/ug/workgroups-create-update-delete.html#editing-workgroups) in the Amazon Athena User Guide. In the Query Result Configuration section, select Encrypt query results.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_athena"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_athena",
    "executable": true,
    "problem_title": "Athena workgroup encryption is not enabled at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_1",
    "description": "This control checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks. This ensures that the group can determine an instance's health based on additional tests provided by the load balancer. Using Elastic Load Balancing health checks can help support the availability of applications that use EC2 Auto Scaling groups.",
    "title": "1 Auto Scaling groups associated with a load balancer should use load balancer health checks",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "autoscaling_1",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether your Auto Scaling groups that are associated with a load balancer are using Elastic Load Balancing health checks.\n\nPCI DSS does not require load balancing or highly available configurations. However, this check aligns with AWS best practices.\n\n## Remediation\n\nTo enable Elastic Load Balancing health checks\n\n1. Open the Amazon [EC2 console](https://console.aws.amazon.com/ec2/)\n2. On the navigation pane, under `Auto Scaling`, choose **Auto Scaling Groups**\n3. To select the group from the list, choose the right box\n4. Choose **Edit**\n5. For `Health Check Type`, choose **ELB**\n6. For `Health Check Grace Period`, enter `300`\n7. Choose **Save**",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "Auto Scaling groups associated with a load balancer do not use load balancer health checks"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_2",
    "description": "This control checks whether an Auto Scaling group spans multiple Availability Zones. The control fails if an Auto Scaling group does not span multiple availability zones.",
    "title": "2 Amazon EC2 Auto Scaling group should cover multiple Availability Zones",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "autoscaling_2",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether an Auto Scaling group spans multiple Availability Zones. The control fails if an Auto Scaling group does not span multiple availability zones.\n\nAmazon EC2 Auto Scaling groups can be configured to use multiple Availability Zones. An Auto Scaling group with a single Availability Zone is preferred in some use cases, such as batch-jobs or when inter-AZ transfer costs need to be kept to a minimum. However, an Auto Scaling group that does not span multiple Availability Zones will not launch instances in another Availability Zone to compensate if the configured single Availability Zone becomes unavailable.\n\n## Remediation\n\nFor information on how to add Availability Zones to an existing auto scaling group, see [Availability zones](https://docs.aws.amazon.com/autoscaling/ec2/userguide/as-add-availability-zone.html)in Amazon EC2 Auto Scaling user guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "Amazon EC2 Auto Scaling group is not covering multiple Availability Zones"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_3",
    "description": "This control checks whether IMDSv2 is enabled on all instances launched by Amazon EC2 Auto Scaling groups. The control fails if the Instance Metadata Service (IMDS) version is not included in the launch configuration or if both IMDSv1 and IMDSv2 are enabled.",
    "title": "3 Auto Scaling group should configure EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "autoscaling_3",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether IMDSv2 is enabled on all instances launched by Amazon EC2 Auto Scaling groups. The control fails if the Instance Metadata Service (IMDS) version is not included in the launch configuration or if both IMDSv1 and IMDSv2 are enabled.\n\nIMDS provides data about your instance that you can use to configure or manage the running instance.\n\nVersion 2 of the IMDS adds new protections that weren't available in IMDSv1 to further safeguard your EC2 instances.\n\n## Remediation\n\nAn Auto Scaling group is associated with one launch configuration at a time. You cannot modify a launch configuration after you create it. To change the launch configuration for an Auto Scaling group, use an existing launch configuration as the basis for a new launch configuration with IMDSv2 enabled. For more information, see [Configure instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html#configuring-IMDS-new-instances) in the Amazon EC2 User Guide for Linux Instances.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "Auto Scaling group is not configuring EC2 instances to require Instance Metadata Service Version 2 (IMDSv2)"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_4",
    "description": "This control checks the number of network hops that a metadata token can travel. The control fails if the metadata response hop limit is greater than 1.",
    "title": "4 Auto Scaling group launch configuration should not have metadata response hop limit greater than 1",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "autoscaling_4",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks the number of network hops that a metadata token can travel. The control fails if the metadata response hop limit is greater than 1.\n\nThe Instance Metadata Service (IMDS) provides metadata information about an Amazon EC2 instance and is useful for application configuration. Restricting the HTTP PUT response for the metadata service to only the EC2 instance protects the IMDS from unauthorized use.\n\nThe Time To Live (TTL) field in the IP packet is reduced by one on every hop. This reduction can be used to ensure that the packet does not travel outside EC2. IMDSv2 protects EC2 instances that may have been misconfigured as open routers, layer 3 firewalls, VPNs, tunnels, or NAT devices, which prevents unauthorized users from retrieving metadata. With IMDSv2, the PUT response that contains the secret token cannot travel outside the instance because the default metadata response hop limit is set to 1. However, if this value is greater than 1, the token can leave the EC2 instance.\n\n## Remediation\n\nFor detailed instructions on how to modify the metadata response hop limit for an existing launch configuration, see [Modify instance metadata options for existing instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html#configuring-IMDS-existing-instances) in the Amazon EC2 User Guide for Linux Instances.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "Auto Scaling group launch configuration has metadata response hop limit greater than 1"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_5",
    "description": "This control checks whether an Auto Scaling groups associated launch configuration assigns a public IP address to the group's instances.",
    "title": "5 Amazon EC2 instances launched using Auto Scaling group launch configurations should not have Public IP addresses",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "autoscaling_5",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether an Auto Scaling groups associated launch configuration assigns a [public IP address](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#public-ip-addresses) to the group’s instances.\n\nAmazon EC2 instances in an autoscaling group launch configuration should not have an associated public IP address, except for in limited edge cases. Amazon EC2 instances should only be accessible from behind a load balancer instead of being directly exposed to the internet.\n\nThis control passes if the associated launch configuration is configured to assign a public IP address. This control fails if the associated launch configuration is not configured to assign a public IP address.\n\n## Remediation\n\nAn Auto Scaling group is associated with one launch configuration at a time. You cannot modify a launch configuration after you have create it. To change the launch configuration for an Auto Scaling group, use an existing launch configuration as the basis for a new launch configuration. Then, update the Auto Scaling group to use the new launch configuration as described in steps below.\n\nAfter you change the launch configuration for an Auto Scaling group, any new instances are launched with the new configuration options. Existing instances are not affected. To update existing instances, either terminate them so that they are replaced by your Auto Scaling group, or allow automatic scaling to gradually replace older instances with newer instances based on your termination policies.\n\n**To enable Elastic Load Balancing health checks**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, under `Auto Scaling`, choose `Launch Configurations`.\n3. Select the launch configuration and choose Actions, then Copy launch configuration. This sets up a new launch configuration with the same options as the original, but with \"Copy\" added to the name.\n4. On the `Create Launch Configuration` page, expand `Advanced details` under `Additional configuration - optional`.\n5. Under `IP address type`, choose `Do not assign a public IP address to any instances`.\n6. When you have finished, Choose `Create launch configuration`.\n7. On the navigation pane, under `Auto Scaling`, choose `Auto Scaling Groups`.\n8. Select the check box next to the Auto Scaling group.\n9. A split pane opens up in the bottom part of the page, showing information about the group that's selected.\n10. On the `Details` tab, choose `Launch configuration`, `Edit`.\n11. For `Launch configuration`, select the new launch configuration.\n12. When you have finished changing your launch configuration, choose `Update`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "Amazon EC2 instances launched using Auto Scaling group launch configurations have Public IP addresses"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_6",
    "description": "This control checks whether an Amazon EC2 Auto Scaling group uses multiple instance types. The control fails if the Auto Scaling group has only one instance type defined.",
    "title": "6 Auto Scaling groups should use multiple instance types in multiple Availability Zones",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "autoscaling_6",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon EC2 Auto Scaling group uses multiple instance types. The control fails if the Auto Scaling group has only one instance type defined.\n\nYou can enhance availability by deploying your application across multiple instance types running in multiple Availability Zones. Security Hub recommends using multiple instance types so that the Auto Scaling group can launch another instance type if there is insufficient instance capacity in your chosen Availability Zones.\n\n## Remediation\n\nFor detailed instructions on how to modify the metadata response hop limit for an existing launch configuration, see [Modify instance metadata options for existing instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-options.html#configuring-IMDS-existing-instances) in the Amazon EC2 User Guide for Linux Instances and [Modify instance metadata options for existing instances](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/configuring-instance-metadata-options.html#configuring-IMDS-existing-instances) in the Amazon EC2 User Guide for Windows Instances.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "Auto Scaling groups do not use multiple instance types in multiple Availability Zones"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Auto Scaling",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Auto Scaling"
    ],
    "category_hierarchy_short": "AWS - Auto Scaling",
    "control_id": "aws_compliance.control.foundational_security_autoscaling_9",
    "description": "This control checks whether an Amazon EC2 Auto Scaling group is created from an EC2 launch template. This control fails if an Amazon EC2 Auto Scaling group is not created with a launch template or if a launch template is not specified in a mixed instances policy.",
    "title": "9 EC2 Auto Scaling groups should use EC2 launch templates",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "autoscaling_9",
      "plugin": "aws",
      "service": "AWS/AutoScaling"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon EC2 Auto Scaling group is created from an EC2 launch template. This control fails if an Amazon EC2 Auto Scaling group is not created with a launch template or if a launch template is not specified in a mixed instances policy.\n\nAn EC2 Auto Scaling group can be created from either an EC2 launch template or a launch configuration. However, using a launch template to create an Auto Scaling group ensures that you have access to the latest features and improvements.\n\n## Remediation\n\nTo create an Auto Scaling group with an EC2 launch template, see [Create an Auto Scaling group using a launch template](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-asg-launch-template.html) in the Amazon EC2 Auto Scaling User Guide. For information about how to replace a launch configuration with a launch template, see [Replace a launch configuration with a launch template](https://docs.aws.amazon.com/autoscaling/ec2/userguide/replace-launch-config.html) in the Amazon EC2 User Guide for Windows Instances.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_autoscaling"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_autoscaling",
    "executable": true,
    "problem_title": "EC2 Auto Scaling groups are not using EC2 launch templates"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFormation",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFormation"
    ],
    "category_hierarchy_short": "AWS - CloudFormation",
    "control_id": "aws_compliance.control.foundational_security_cloudformation_1",
    "description": "This control checks whether an Amazon Simple Notification Service notification is integrated with a CloudFormation stack. The control fails for a CloudFormation stack if there is no SNS notification associated with it.",
    "title": "1 CloudFormation stacks should be integrated with Simple Notification Service (SNS)",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "application_monitoring",
      "foundational_security_item_id": "cloudformation_1",
      "plugin": "aws",
      "service": "AWS/CloudFormation"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon Simple Notification Service notification is integrated with a CloudFormation stack. The control fails for a CloudFormation stack if there is no SNS notification associated with it.\n\nConfiguring an SNS notification with your CloudFormation stack helps immediately notify stakeholders of any events or changes occurring with the stack.\n\n## Remediation\n\nFor information about how to update a CloudFormation stack, see [AWS CloudFormation stack updates](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/using-cfn-updating-stacks.html) in the AWS CloudFormation User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudformation"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudformation",
    "executable": true,
    "problem_title": "CloudFormation stacks are not integrated with Simple Notification Service (SNS)"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_1",
    "description": "This control checks whether an Amazon CloudFront distribution is configured to return a specific object that is the default root object. The control fails if the CloudFront distribution does not have a default root object configured.",
    "title": "1 CloudFront distributions should have a default root object configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_not_publicly_accessible",
      "foundational_security_item_id": "cloudfront_1",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon CloudFront distribution is configured to return a specific object that is the default root object. The control fails if the CloudFront distribution does not have a default root object configured.\n\nA user might sometimes request the distribution’s root URL instead of an object in the distribution. When this happens, specifying a default root object can help you to avoid exposing the contents of your web distribution.\n\n## Remediation\n\nFor detailed instructions on how to specify a default root object for your distribution, see [How to specify a default root object](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/DefaultRootObject.html#DefaultRootObjectHowToDefine).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions do not have a default root object configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_2",
    "description": "This control checks whether an Amazon CloudFront distribution with Amazon S3 Origin type has Origin Access Identity (OAI) configured. The control fails if OAI is not configured.",
    "title": "2 CloudFront distributions should have origin access identity enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_policy_configuration",
      "foundational_security_item_id": "cloudfront_2",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon CloudFront distribution with Amazon S3 Origin type has Origin Access Identity (OAI) configured. The control fails if OAI is not configured.\n\nCloudFront OAI prevents users from accessing S3 bucket content directly. When users access an S3 bucket directly, they effectively bypass the CloudFront distribution and any permissions that are applied to the underlying S3 bucket content.\n\n## Remediation\n\nFor detailed remediation instructions, see [Creating a CloudFront OAI and adding it to your distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/private-content-restricting-access-to-s3.html#private-content-creating-oai).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions do not have origin access identity enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_3",
    "description": "This control checks whether an Amazon CloudFront distribution requires viewers to use HTTPS directly or whether it uses redirection. The control fails if ViewerProtocolPolicy is set to allow-all for defaultCacheBehavior or for cacheBehaviors.",
    "title": "3 CloudFront distributions should require encryption in transit",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "cloudfront_3",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon CloudFront distribution requires viewers to use HTTPS directly or whether it uses redirection. The control fails if `ViewerProtocolPolicy` is set to `allow-all` for `defaultCacheBehavior` or for `cacheBehaviors`.\n\nHTTPS (TLS) can be used to help prevent potential attackers from using person-in-the-middle or similar attacks to eavesdrop on or manipulate network traffic. Only encrypted connections over HTTPS (TLS) should be allowed. Encrypting data in transit can affect performance. You should test your application with this feature to understand the performance profile and the impact of TLS.\n\n## Remediation\n\nFor detailed remediation instructions, see [Requiring HTTPS for communication between viewers and CloudFront](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-viewers-to-cloudfront.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions do not require encryption in transit"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_4",
    "description": "This control checks whether an Amazon CloudFront distribution is configured with an origin group that has two or more origins. CloudFront origin failover can increase availability. Origin failover automatically redirects traffic to a secondary origin if the primary origin is unavailable or if it returns specific HTTP response status codes.",
    "title": "4 CloudFront distributions should have origin failover configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "cloudfront_4",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon CloudFront distribution is configured with an origin group that has two or more origins.\n\nCloudFront origin failover can increase availability. Origin failover automatically redirects traffic to a secondary origin if the primary origin is unavailable or if it returns specific HTTP response status codes.\n\n## Remediation\n\nFor detailed remediation instructions, see [Creating an origin group](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/high_availability_origin_failover.html#concept_origin_groups.creating).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions do not have origin failover configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_5",
    "description": "This control checks whether server access logging is enabled on CloudFront distributions. The control fails if access logging is not enabled for a distribution.",
    "title": "5 CloudFront distributions should have logging enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "cloudfront_5",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether server access logging is enabled on CloudFront distributions. The control fails if access logging is not enabled for a distribution.\n\nCloudFront access logs provide detailed information about every user request that CloudFront receives. Each log contains information such as the date and time the request was received, the IP address of the viewer that made the request, the source of the request, and the port number of the request from the viewer.\n\n## Remediation\n\nFor information on how to configure access logging for a CloudFront distribution, see[Configuring and using standard logs (access logs)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/AccessLogs.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions do not have logging enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_6",
    "description": "This control checks whether CloudFront distributions are associated with either AWS WAF or AWS WAFv2 web ACLs. The control fails if the distribution is not associated with a web ACL.",
    "title": "6 CloudFront distributions should have AWS WAF enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "protective_services",
      "foundational_security_item_id": "cloudfront_6",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether CloudFront distributions are associated with either AWS WAF or AWS WAFv2 web ACLs. The control fails if the distribution is not associated with a web ACL.\n\nAWS WAF is a web application firewall that helps protect web applications and APIs from attacks. It allows you to configure a set of rules, called a web access control list (web ACL), that allow, block, or count web requests based on customizable web security rules and conditions that you define. Ensure your CloudFront distribution is associated with an AWS WAF web ACL to help protect it from malicious attacks.\n\n## Remediation\n\nFor information on how to associate a web ACL with a CloudFront distribution, see [Using AWS WAF to control access to your content](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/distribution-web-awswaf.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distribution is not using AWS WAF"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_7",
    "description": "This control checks whether CloudFront distributions are using the default SSL/TLS certificate CloudFront provides. This control passes if the CloudFront distribution uses a custom SSL/TLS certificate. This control fails if the CloudFront distribution uses the default SSL/TLS certificate.",
    "title": "7 CloudFront distributions should use custom SSL/TLS certificates",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transi",
      "foundational_security_item_id": "cloudfront_7",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether CloudFront distributions are using the default SSL/TLS certificate CloudFront provides. This control passes if the CloudFront distribution uses a custom SSL/TLS certificate. This control fails if the CloudFront distribution uses the default SSL/TLS certificate.\n\nCustom SSL/TLS allow your users to access content by using alternate domain names. You can store custom certificates in AWS Certificate Manager (recommended), or in IAM.\n\n## Remediation\n\nTo add an alternate domain name using a custom SSL/TLS certificate for your CloudFront distributions, see [Adding an alternate domain name](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/CNAMEs.html#CreatingCNAME) in the CloudFront Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions are not using custom SSL/TLS certificates"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_8",
    "description": "This control checks if Amazon CloudFront distributions are using a custom SSL/TLS certificate and are configured to use SNI to serve HTTPS requests. This control fails if a custom SSL/TLS certificate is associated but the SSL/TLS support method is a dedicated IP address.",
    "title": "8 CloudFront distributions should use SNI to serve HTTPS requests",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "cloudfront_8",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks if Amazon CloudFront distributions are using a custom SSL/TLS certificate and are configured to use SNI to serve HTTPS requests. This control fails if a custom SSL/TLS certificate is associated but the SSL/TLS support method is a dedicated IP address.\n\nServer Name Indication (SNI) is an extension to the TLS protocol that is supported by browsers and clients released after 2010. If you configure CloudFront to serve HTTPS requests using SNI, CloudFront associates your alternate domain name with an IP address for each edge location. When a viewer submits an HTTPS request for your content, DNS routes the request to the IP address for the correct edge location. The IP address to your domain name is determined during the SSL/TLS handshake negotiation; the IP address isn't dedicated to your distribution.\n\n## Remediation\n\nTo configure your CloudFront distributions to use SNI to serve HTTPS requests, see [Using SNI to Serve HTTPS Requests (works for Most Clients)](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/cnames-https-dedicated-ip-or-sni.html#cnames-https-sni) in the CloudFront Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions are not using SNI to serve HTTPS requests"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_9",
    "description": "This control checks if Amazon CloudFront distributions are encrypting traffic to custom origins. This control fails for a CloudFront distribution whose origin protocol policy allows 'http-only'. This control also fails if the distribution's origin protocol policy is 'match-viewer' while the viewer protocol policy is 'allow-all'.",
    "title": "9 CloudFront distributions should encrypt traffic to custom origins",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "cloudfront_9",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks if Amazon CloudFront distributions are encrypting traffic to custom origins. This control fails for a CloudFront distribution whose origin protocol policy allows 'http-only'. This control also fails if the distribution's origin protocol policy is 'match-viewer' while the viewer protocol policy is 'allow-all'.\n\nHTTPS (TLS) can be used to help prevent eavesdropping or manipulation of network traffic. Only encrypted connections over HTTPS (TLS) should be allowed.\n\n## Remediation\n\nTo update the Origin Protocol Policy to require encryption for your CloudFront connections, see [Requiring HTTPS for communication between CloudFront and your custom origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html) in the Amazon CloudFront Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions do not encrypt traffic to custom origins"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_10",
    "description": "This control checks if Amazon CloudFront distributions are using deprecated SSL protocols for HTTPS communication between CloudFront edge locations and your custom origins. This control fails if a CloudFront distribution has a CustomOriginConfig where OriginSslProtocols includes SSLv3.",
    "title": "10 CloudFront distributions should not use deprecated SSL protocols between edge locations and custom origins",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "cloudfront_10",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks if Amazon CloudFront distributions are using deprecated SSL protocols for HTTPS communication between CloudFront edge locations and your custom origins. This control fails if a CloudFront distribution has a CustomOriginConfig where OriginSslProtocols includes SSLv3.\n\nIn 2015, the Internet Engineering Task Force (IETF) officially announced that SSL 3.0 should be deprecated due to the protocol being insufficiently secure. It is recommended that you use TLSv1.2 or later for HTTPS communication to your custom origins.\n\n## Remediation\n\nTo update the Origin SSL Protocols for your CloudFront distributions, see [Requiring HTTPS for communication between CloudFront and your custom origin](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/using-https-cloudfront-to-custom-origin.html) in the Amazon CloudFront Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions are using deprecated SSL protocols between edge locations and custom origins"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudFront",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudFront"
    ],
    "category_hierarchy_short": "AWS - CloudFront",
    "control_id": "aws_compliance.control.foundational_security_cloudfront_12",
    "description": "This control checks whether Amazon CloudFront distributions are pointing to non-existent Amazon S3 origins. The control fails for a CloudFront distribution if the origin is configured to point to a non-existent bucket. This control only applies to CloudFront distributions where an S3 bucket without static website hosting is the S3 origin.",
    "title": "12 CloudFront distributions should not point to non-existent S3 origins",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "cloudfront_12",
      "plugin": "aws",
      "service": "AWS/CloudFront"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon CloudFront distributions are pointing to non-existent Amazon S3 origins. The control fails for a CloudFront distribution if the origin is configured to point to a non-existent bucket. This control only applies to CloudFront distributions where an S3 bucket without static website hosting is the S3 origin.\n\nWhen a CloudFront distribution in your account is configured to point to a non-existent bucket, a malicious third party can create the referenced bucket and serve their own content through your distribution. We recommend checking all origins regardless of routing behavior to ensure that your distributions are pointing to appropriate origins.\n\n## Remediation\n\nTo modify your CloudFront distribution to point to a new origin, see [Updating a distribution](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/HowToUpdateDistribution.html) in the Amazon CloudFront Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudfront"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudfront",
    "executable": true,
    "problem_title": "CloudFront distributions point to non-existent S3 origins"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudTrail",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudTrail"
    ],
    "category_hierarchy_short": "AWS - CloudTrail",
    "control_id": "aws_compliance.control.foundational_security_cloudtrail_1",
    "description": "This control checks that there is at least one multi-Region CloudTrail trail.",
    "title": "1 CloudTrail should be enabled and configured with at least one multi-Region trail",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "cloudtrail_1",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks that there is at least one multi-Region CloudTrail trail.\n\nAWS CloudTrail records AWS API calls for your account and delivers log files to you. The recorded information includes the following information.\n\n- Identity of the API caller\n- Time of the API call\n- Source IP address of the API caller\n- Request parameters\n- Response elements returned by the AWS service\n\nCloudTrail provides a history of AWS API calls for an account, including API calls made from the AWS Management Console, AWS SDKs, command line tools. The history also includes API calls from higher-level AWS services such as AWS CloudFormation.\n\n- The AWS API call history produced by CloudTrail enables security analysis, resource change tracking, and compliance auditing. Multi-Region trails also provide the following benefits.\n- A multi-Region trail helps to detect unexpected activity occurring in otherwise unused Regions.\n- A multi-Region trail ensures that global service event logging is enabled for a trail by default. Global service event logging records events generated by AWS global services.\n- For a multi-Region trail, management events for all read and write operations ensure that CloudTrail records management operations on all of an AWS account’s resources.\n\nBy default, CloudTrail trails that are created using the AWS Management Console are multi-Region trails.\n\n## Remediation\n\nTo remediate this issue, create a new multi-Region trail in CloudTrail.\n\n**To create a new trail in CloudTrail**\n\n1. Open the [CloudTrail console](https://console.aws.amazon.com/cloudtrail/).\n2. If you haven't used CloudTrail before, choose `Get Started Now`.\n3. Choose `Trails` and then choose `Create trail`.\n4. Enter a name for the trail.\n5. Under `Storage location`, do one of the following:\n   - To create a new S3 bucket for CloudTrail logs, for `Create a new S3 bucket`, choose Yes, then enter a name for the new S3 bucket.\n   - To use an existing S3 bucket, for `Create a new S3 bucket`, choose `No`, then select the S3 bucket to use.\n6. Under `Additional settings`, choose `Advanced`. For `Enable log file validation`, select `Enabled`.\n7. Choose Create.\n\n**To update an existing trail in CloudTrail**\n\n1. Open the [CloudTrail console](https://console.aws.amazon.com/cloudtrail/).\n2. Choose `Trails`.\n3. In the `Name` column, choose the name of the trail.\n4. For `Management events`, choose `Edit`.\n5. For `Read/Write events`, select `Management events`.\n6. Under `API Activity`, select `Read and Write`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudtrail",
    "executable": true,
    "problem_title": "CloudTrail is not enabled and/or not configured with at least one multi-Region trail"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudTrail",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudTrail"
    ],
    "category_hierarchy_short": "AWS - CloudTrail",
    "control_id": "aws_compliance.control.foundational_security_cloudtrail_2",
    "description": "This control checks whether CloudTrail is configured to use the server-side encryption (SSE) AWS Key Management Service customer master key (CMK) encryption. The check passes if the KmsKeyId is defined.",
    "title": "2 CloudTrail should have encryption at rest enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "cloudtrail_2",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether AWS CloudTrail is configured to use the server-side encryption (SSE) AWS KMS customer master key (CMK) encryption.\n\nIf you are only using the default encryption option, you can choose to disable this check.\n\n## Remediation\n\nTo enable encryption for CloudTrail logs\n\n1. Open the CloudTrail console at [CloudTrail](https://console.aws.amazon.com/cloudtrail/).\n1. Choose **Trails**.\n1. Choose the trail to update.\n1. Under General details, choose **Edit**.\n1. For Log file SSE-KMS encryption, select **Enabled**.\n1. Under AWS KMS customer managed CMK, do one of the following:\n    - To create a key, choose **New**. Then in AWS KMS alias, enter an alias for the key. The key is created in the same Region as the S3 bucket.\n    - To use an existing key, choose **Existing** and then from AWS KMS alias, select the key.\n    - The AWS KMS key and S3 bucket must be in the same Region.\n1. Choose **Save changes**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudtrail",
    "executable": true,
    "problem_title": "CloudTrail does not have encryption at rest enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudTrail",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudTrail"
    ],
    "category_hierarchy_short": "AWS - CloudTrail",
    "control_id": "aws_compliance.control.foundational_security_cloudtrail_4",
    "description": "This control checks whether log file integrity validation is enabled on a CloudTrail trail. CloudTrail log file validation creates a digitally signed digest file that contains a hash of each log that CloudTrail writes to Amazon S3. You can use these digest files to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log.",
    "title": "4 Ensure CloudTrail log file validation is enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_integrity",
      "foundational_security_item_id": "cloudtrail_4",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether log file integrity validation is enabled on a CloudTrail trail.\n\nCloudTrail log file validation creates a digitally signed digest file that contains a hash of each log that CloudTrail writes to Amazon S3. You can use these digest files to determine whether a log file was changed, deleted, or unchanged after CloudTrail delivered the log.\n\nSecurity Hub recommends that you enable file validation on all trails. Log file validation provides additional integrity checks of CloudTrail logs.\n\n## Remediation\n\nTo remediate this issue, update your CloudTrail trail to enable log file validation.\n\n**To enable CloudTrail log file validation**\n\n1. Open the [CloudTrail console](https://console.aws.amazon.com/cloudtrail/).\n2. Choose `Trails`.\n3. Under `Name`, choose the name of a trail to edit.\n4. Under `General details`, choose `Edit`.\n5. Under `Additional settings`, for Log file validation, choose `Enabled`.\n6. Choose `Save changes`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudtrail",
    "executable": true,
    "problem_title": "CloudTrail log file validation is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CloudTrail",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CloudTrail"
    ],
    "category_hierarchy_short": "AWS - CloudTrail",
    "control_id": "aws_compliance.control.foundational_security_cloudtrail_5",
    "description": "This control checks whether CloudTrail trails are configured to send logs to CloudWatch Logs. The control fails if the CloudWatchLogsLogGroupArn property of the trail is empty.",
    "title": "5 Ensure CloudTrail trails are integrated with Amazon CloudWatch Logs",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "cloudtrail_5",
      "plugin": "aws",
      "service": "AWS/CloudTrail"
    },
    "documentation": "## Description\n\nThis control checks whether CloudTrail trails are configured to send logs to CloudWatch Logs. The control fails if the CloudWatchLogsLogGroupArn property of the trail is empty.\n\nCloudTrail records AWS API calls that are made in a given account. The recorded information includes the following:\n\n- The identity of the API caller\n- The time of the API call\n- The source IP address of the API caller\n- The request parameters\n- The response elements returned by the AWS service\n\nCloudTrail uses Amazon S3 for log file storage and delivery. You can capture CloudTrail logs in a specified S3 bucket for long-term analysis. To perform real-time analysis, you can configure CloudTrail to send logs to CloudWatch Logs.\n\nFor a trail that is enabled in all Regions in an account, CloudTrail sends log files from all of those Regions to a CloudWatch Logs log group.\n\nSecurity Hub recommends that you send CloudTrail logs to CloudWatch Logs. Note that this recommendation is intended to ensure that account activity is captured, monitored, and has appropriately alarms. You can use CloudWatch Logs to set this up with your AWS services. This recommendation does not preclude the use of a different solution.\n\nSending CloudTrail logs to CloudWatch Logs facilitates real-time and historic activity logging based on user, API, resource, and IP address. You can use this approach to establish alarms and notifications for anomalous or sensitivity account activity.\n\n## Remediation\n\nTo enable CloudTrail integration with CloudWatch Logs\n\n1. Open the [CloudTrail console](https://console.aws.amazon.com/cloudtrail/).\n2. Choose `Trails`.\n3. Choose the trail that does not have a value for `CloudWatch Logs Log group`.\n4. Under `CloudWatch Logs`, choose `Edit`.\n5. Select `Enabled`.\n6. For `Log group`, do one of the following:\n   - To use the default log group, keep the name as is.\n   - To use an existing log group, choose `Existing` and then enter the name of the log group to use.\n   - To create a new log group, choose `New` and then enter a name for the log group to create.\n7. For `IAM role`, do one of the following:\n   - To use an existing role, choose `Existing` and then choose the role from the drop-down list.\n   - To create a new role, choose `New` and then enter a name for the role to create. The new role is assigned a policy that grants the necessary permissions.\n   - To view the permissions granted to the role, expand `Policy document`.\n8. Choose `Save changes`.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_cloudtrail"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_cloudtrail",
    "executable": true,
    "problem_title": "CloudTrail trails are not integrated with Amazon CloudWatch Logs"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CodeBuild",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CodeBuild"
    ],
    "category_hierarchy_short": "AWS - CodeBuild",
    "control_id": "aws_compliance.control.foundational_security_codebuild_1",
    "description": "Authentication credentials should never be stored or transmitted in clear text or appear in the repository URL. Instead of personal access tokens or user name and password, you should use OAuth to grant authorization for accessing GitHub or Bitbucket repositories. Using personal access tokens or a user name and password could expose your credentials to unintended data exposure and unauthorized access.",
    "title": "1 CodeBuild GitHub or Bitbucket source repository URLs should use OAuth",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_development",
      "foundational_security_item_id": "codebuild_1",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks whether the GitHub or Bitbucket source repository URL contains either personal access tokens or a user name and password.\n\nAuthentication credentials should never be stored or transmitted in clear text or appear in the repository URL. Instead of personal access tokens or user name and password, you should use OAuth to grant authorization for accessing GitHub or Bitbucket repositories. Using personal access tokens or a user name and password could expose your credentials to unintended data exposure and unauthorized access.\n\n## Remediation\n\nYou can update your CodeBuild project to use OAuth.\n\n**To remove basic authentication / (GitHub) Personal Access Token from CodeBuild project source**\n\n1. Open the [CodeBuild console](https://console.aws.amazon.com/codebuild/).\n2. Choose the build project that contains personal access tokens or a user name and password.\n3. From `Edit`, choose `Source`.\n4. Choose `Disconnect from GitHub / Bitbucket`.\n5. Choose `Connect using OAuth`, then choose `Connect to GitHub / Bitbucket`.\n6. When prompted, choose `authorize as appropriate`.\n7. Reconfigure your repository URL and additional configuration settings, as needed.\n8. Choose `Update source`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_codebuild",
    "executable": true,
    "problem_title": "CodeBuild GitHub or Bitbucket source repository URLs do not use OAuth"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CodeBuild",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CodeBuild"
    ],
    "category_hierarchy_short": "AWS - CodeBuild",
    "control_id": "aws_compliance.control.foundational_security_codebuild_2",
    "description": "This control checks whether the project contains the environment variables AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY. Authentication credentials AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY should never be stored in clear text, as this could lead to unintended data exposure and unauthorized access.",
    "title": "2 CodeBuild project environment variables should not contain clear text credentials",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_development",
      "foundational_security_item_id": "codebuild_2",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks whether the project contains the environment variables `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY`.\n\nAuthentication credentials `AWS_ACCESS_KEY_ID` and `AWS_SECRET_ACCESS_KEY` should never be stored in clear text, as this could lead to unintended data exposure and unauthorized access.\n\n## Remediation\n\nTo remediate this issue, update your CodeBuild project to remove the environment variable.\n\n**To remove environment variables from a CodeBuild project**\n\n1. Open the [CodeBuild console](https://console.aws.amazon.com/codebuild/).\n2. Expand `Build`.\n3. Choose `Build project`, and then choose the build project that contains plaintext credentials.\n4. From `Edit`, choose `Environment`.\n5. Expand `Additional configuration`.\n6. Choose `Remove` next to the environment variables.\n7. Choose `Update environment`.\n\n**To store sensitive values in the Amazon EC2 Systems Manager Parameter Store and then retrieve them from your build spec**\n\n1. Open the [CodeBuild console](https://console.aws.amazon.com/codebuild/).\n2. Expand `Build`.\n3. Choose `Build project`, and then choose the build project that contains plaintext credentials.\n4. From `Edit`, choose `Environment`.\n5. Expand `Additional configuration` and scroll to `Environment variables`.\n6. Follow this [tutorial](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-console.html) to create a Systems Manager parameter that contains your sensitive data.\n7. After you create the parameter, copy the parameter name.\n8. Back in the CodeBuild console, choose `Create environmental variable`.\n9. Enter the name of your variable as it appears in your build spec.\n10. For `Value`, paste the name of your parameter.\n11. For `Type`, choose `Parameter`.\n12. To remove your noncompliant environmental variable that contains plaintext credentials, choose `Remove`.\n13. Choose `Update environment`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_codebuild",
    "executable": true,
    "problem_title": "CodeBuild project environment variables contain clear text credentials"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CodeBuild",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CodeBuild"
    ],
    "category_hierarchy_short": "AWS - CodeBuild",
    "control_id": "aws_compliance.control.foundational_security_codebuild_3",
    "description": "This control checks if Amazon S3 logs for an AWS CodeBuild project are encrypted. The control fails if encryption is deactivated for S3 logs for a CodeBuild project.",
    "title": "3 CodeBuild S3 logs should be encrypted",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "codebuild_3",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks if Amazon S3 logs for an AWS CodeBuild project are encrypted. The control fails if encryption is deactivated for S3 logs for a CodeBuild project.\n\nEncryption of data at rest is a recommended best practice to add a layer of access management around your data. Encrypting the logs at rest reduces the risk that a user not authenticated by AWS will access the data stored on disk. It adds another set of access controls to limit the ability of unauthorized users to access the data.\n\n## Remediation\n\nTo change the encryption settings for CodeBuild project S3 logs, see [Change a build project's settings in AWS CodeBuild](https://docs.aws.amazon.com/codebuild/latest/userguide/change-project.html) in the AWS CodeBuild User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_codebuild",
    "executable": true,
    "problem_title": "CodeBuild S3 logs are not encrypted"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CodeBuild",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CodeBuild"
    ],
    "category_hierarchy_short": "AWS - CodeBuild",
    "control_id": "aws_compliance.control.foundational_security_codebuild_4",
    "description": "This control checks whether a CodeBuild project environment has at least one log option, either to S3 or CloudWatch logs enabled. This control fails if a CodeBuild project environment does not have at least one log option enabled.",
    "title": "4 CodeBuild project environments should have a logging configuration",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "codebuild_4",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks whether a CodeBuild project environment has at least one log option, either to S3 or CloudWatch logs enabled. This control fails if a CodeBuild project environment does not have at least one log option enabled.\n\nFrom a security perspective, logging is an important feature to enable for future forensics efforts in the case of any security incidents. Correlating anomalies in CodeBuild projects with threat detections can increase confidence in the accuracy of those threat detections.\n\n## Remediation\n\nFor more information on how to configure CodeBuild project log settings, see [Create a build project (console)](https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-console.html#create-project-console-logs) in the CodeBuild User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_codebuild",
    "executable": true,
    "problem_title": "CodeBuild project environments do not have a logging configuration"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > CodeBuild",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "CodeBuild"
    ],
    "category_hierarchy_short": "AWS - CodeBuild",
    "control_id": "aws_compliance.control.foundational_security_codebuild_5",
    "description": "This control checks if an AWS CodeBuild project environment has privileged mode enabled. This control fails when an AWS CodeBuild project environment has privileged mode enabled.",
    "title": "5 CodeBuild project environments should not have privileged mode enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "codebuild_5",
      "plugin": "aws",
      "service": "AWS/CodeBuild"
    },
    "documentation": "## Description\n\nThis control checks if an AWS CodeBuild project environment has privileged mode enabled. This control fails when an AWS CodeBuild project environment has privileged mode enabled.\n\nBy default, Docker containers do not allow access to any devices. Privileged mode grants a build project's Docker container access to all devices. Setting privilegedMode with value true enables running the Docker daemon inside a Docker container. The Docker daemon listens for Docker API requests and manages Docker objects such as images, containers, networks, and volumes. This parameter should only be set to true if the build project is used to build Docker images. Otherwise, this setting should be disabled to prevent unintended access to Docker APIs as well as the container’s underlying hardware as unintended access to privilegedMode may risk malicious tampering or deletion of critical resources.\n\n## Remediation\n\nFor more information on how to configure CodeBuild project environment settings, see [Create a build project (console)](https://docs.aws.amazon.com/codebuild/latest/userguide/create-project-console.html#create-project-console-environment)in the CodeBuild User Guide",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_codebuild"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_codebuild",
    "executable": true,
    "problem_title": "CodeBuild project environments have privileged mode enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Config",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Config"
    ],
    "category_hierarchy_short": "AWS - Config",
    "control_id": "aws_compliance.control.foundational_security_config_1",
    "description": "This control checks whether AWS Config is enabled in the account for the local Region and is recording all resources. The AWS Config service performs configuration management of supported AWS resources in your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items, and any configuration changes between resources.",
    "title": "1 AWS Config should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "config_1",
      "plugin": "aws",
      "service": "AWS/Config"
    },
    "documentation": "## Description\n\nAWS Config rule: None. To run this check, Security Hub runs through audit steps prescribed for it in Securing Amazon Web Services. No AWS Config managed rules are created in your AWS environment for this check.\n\nThis control checks whether AWS Config is enabled in the account for the local Region and is recording all resources.\n\nIt does not check for change detection for all critical system files and content files, as AWS Config supports only a subset of resource types.\n\nThe AWS Config service performs configuration management of supported AWS resources in your account and delivers log files to you. The recorded information includes the configuration item (AWS resource), relationships between configuration items, and any configuration changes between resources.\n\n## Remediation\n\nTo configure AWS Config settings\n\n1. Open the [AWS Config console](https://console.aws.amazon.com/config/).\n2. Choose the Region to configure AWS Config in.\n3. If you have not used AWS Config before, choose **Get started**.\n4. On the Settings page, do the following:\n   1. Under Resource types to record, choose Record all resources supported in this region and Include global resources (e.g., AWS IAM resources).\n   2. Under Amazon S3 bucket, either specify the bucket to use or create a bucket and optionally include a prefix.\n   3. Under Amazon SNS topic, either select an Amazon SNS topic from your account or create one. For more information about Amazon SNS, see the [Amazon Simple Notification Service Getting Started Guide](https://docs.aws.amazon.com/sns/latest/dg/sns-getting-started.html).\n   4. Under AWS Config role, either choose `Create AWS Config service-linked role` or choose `Choose a role from your account` and then choose the role to use.\n5. Choose Next.\n6. On the **AWS Config** rules page, choose **Skip**.\n7. Choose **Confirm**.\n\nFor more information about using AWS Config from the AWS CLI, see the [AWS Config Developer Guide](https://docs.aws.amazon.com/config/latest/developerguide/gs-cli-subscribe.html).\n\nYou can also use an AWS CloudFormation template to automate this process. For more information, see the [AWS CloudFormation User Guide](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/stacksets-sampletemplates.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_config"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_config",
    "executable": true,
    "problem_title": "AWS Config is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > DMS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "DMS"
    ],
    "category_hierarchy_short": "AWS - DMS",
    "control_id": "aws_compliance.control.foundational_security_dms_1",
    "description": "This control checks whether AWS DMS replication instances are public. To do this, it examines the value of the PubliclyAccessible field. A private replication instance has a private IP address that you cannot access outside of the replication network. A replication instance should have a private IP address when the source and target databases are in the same network. The network must also be connected to the replication instance's VPC using a VPN, AWS Direct Connect, or VPC peering. To learn more about public and private replication instances, see Public and private replication instances in the AWS Database Migration Service User Guide.",
    "title": "1 AWS Database Migration Service replication instances should not be public",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "dms_1",
      "plugin": "aws",
      "service": "AWS/DMS"
    },
    "documentation": "## Description\n\nThis control checks whether AWS DMS replication instances are public. To do this, it examines the value of the PubliclyAccessible field.\n\nA private replication instance has a private IP address that you cannot access outside of the replication network. A replication instance should have a private IP address when the source and target databases are in the same network, and the network is connected to the replication instance's VPC using a VPN, AWS Direct Connect, or VPC peering.\n\nYou should also ensure that access to your AWS DMS instance configuration is limited to only authorized users. To do this, restrict users’ IAM permissions to modify AWS DMS settings and resources.\n\n## Remediation\n\n**Note** that you cannot change the public access setting once a replication instance is created. It must be deleted and recreated.\n\nTo configure the AWS DMS replication instances setting to be not publicly accessible\n\n1. Open the [AWS Database Migration Service console](https://console.aws.amazon.com/dms/).\n2. In the left navigation pane, under `Resource management`, navigate to `Replication instances`.\n3. To delete the public instance, select the check box for the instance, choose **Actions**, then choose **delete**.\n4. Choose Create replication instance. Provide the configuration details.\n5. To disable public access, make sure that Publicly accessible is not selected.\n6. Choose **Create**.\n\nFor more information, see the section on [Creating a replication instance](https://docs.aws.amazon.com/dms/latest/userguide/CHAP_ReplicationInstance.html#CHAP_ReplicationInstance.Creating) in the AWS Database Migration Service User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_dms"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_dms",
    "executable": true,
    "problem_title": "AWS Database Migration Service replication instances are publicly accessible"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > DocumentDB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "DocumentDB"
    ],
    "category_hierarchy_short": "AWS - DocumentDB",
    "control_id": "aws_compliance.control.foundational_security_docdb_1",
    "description": "This control checks whether an Amazon DocumentDB cluster is encrypted at rest. The control fails if an Amazon DocumentDB cluster isn't encrypted at rest.",
    "title": "1 Amazon DocumentDB clusters should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "docdb_1",
      "plugin": "aws",
      "service": "AWS/DocumentDB"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon DocumentDB cluster is encrypted at rest. The control fails if an Amazon DocumentDB cluster isn't encrypted at rest.\n\nData at rest refers to any data that's stored in persistent, non-volatile storage for any duration. Encryption helps you protect the confidentiality of such data, reducing the risk that an unauthorized user gets access to it. Data in Amazon DocumentDB clusters should be encrypted at rest for an added layer of security. Amazon DocumentDB uses the 256-bit Advanced Encryption Standard (AES-256) to encrypt your data using encryption keys stored in AWS Key Management Service (AWS KMS).\n\n## Remediation\n\nYou can enable encryption at rest when you create an Amazon DocumentDB cluster. You can't change encryption settings after creating a cluster. For more information, see [Enabling encryption at rest for an Amazon DocumentDB cluster](https://docs.aws.amazon.com/documentdb/latest/developerguide/encryption-at-rest.html#encryption-at-rest-enabling) in the Amazon DocumentDB Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_docdb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_docdb",
    "executable": true,
    "problem_title": "Amazon DocumentDB clusters are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > DocumentDB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "DocumentDB"
    ],
    "category_hierarchy_short": "AWS - DocumentDB",
    "control_id": "aws_compliance.control.foundational_security_docdb_2",
    "description": "This control checks whether an Amazon DocumentDB cluster has a backup retention period greater than or equal to 7 days. The control fails if the backup retention period is less than 7 days.",
    "title": "2 Amazon DocumentDB clusters should have an adequate backup retention period",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "docdb_2",
      "plugin": "aws",
      "service": "AWS/DocumentDB"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon DocumentDB cluster has a backup retention period greater than or equal to 7 days. The control fails if the backup retention period is less than 7 days.\n\nBackups help you recover more quickly from a security incident and strengthen the resilience of your systems. By automating backups for your Amazon DocumentDB clusters, you'll be able to restore your systems to a point in time and minimize downtime and data loss. Amazon DocumentDB clusters have a default backup retention period of 1 day, which should be increased to 7 days to pass this control.\n\n## Remediation\n\nTo change the backup retention period for your Amazon DocumentDB clusters, see [Modifying an Amazon DocumentDB Cluster](https://docs.aws.amazon.com/documentdb/latest/developerguide/db-cluster-modify.html) in the Amazon DocumentDB Developer Guide. For Backup, choose a value greater than or equal to 7.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_docdb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_docdb",
    "executable": true,
    "problem_title": "Amazon DocumentDB cluster's backup retention period is inadequate"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > DynamoDB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "DynamoDB"
    ],
    "category_hierarchy_short": "AWS - DynamoDB",
    "control_id": "aws_compliance.control.foundational_security_dynamodb_1",
    "description": "This control checks whether an Amazon DynamoDB table can scale its read and write capacity as needed. This control passes if the table uses either on-demand capacity mode or provisioned mode with auto scaling configured. Scaling capacity with demand avoids throttling exceptions, which helps to maintain availability of your applications.",
    "title": "1 DynamoDB tables should automatically scale capacity with demand",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "dynamodb_1",
      "plugin": "aws",
      "service": "AWS/DynamoDB"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon DynamoDB table can scale its read and write capacity as needed. This control passes if the table uses either on-demand capacity mode or provisioned mode with auto scaling configured. Scaling capacity with demand avoids throttling exceptions, which helps to maintain availability of your applications.\n\nDynamoDB tables in on-demand capacity mode are only limited by the DynamoDB throughput default table quotas. To raise these quotas, you can file a support ticket through [AWS Support](http://aws.amazon.com/support).\n\nDynamoDB tables in provisioned mode with auto scaling adjust the provisioned throughput capacity dynamically in response to traffic patterns.\n\n## Remediation\n\nFor detailed instructions on enabling DynamoDB automatic scaling on existing tables in capacity mode, see [Enabling DynamoDB auto scaling on existing tables](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/AutoScaling.Console.html#AutoScaling.Console.ExistingTable).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_dynamodb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_dynamodb",
    "executable": true,
    "problem_title": "DynamoDB tables do not automatically scale capacity with demand"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > DynamoDB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "DynamoDB"
    ],
    "category_hierarchy_short": "AWS - DynamoDB",
    "control_id": "aws_compliance.control.foundational_security_dynamodb_2",
    "description": "This control checks whether point-in-time recovery (PITR) is enabled for an Amazon DynamoDB table. Backups help you to recover more quickly from a security incident. They also strengthen the resilience of your systems. DynamoDB point-in-time recovery automates backups for DynamoDB tables. It reduces the time to recover from accidental delete or write operations. DynamoDB tables that have PITR enabled can be restored to any point in time in the last 35 days.",
    "title": "2 DynamoDB tables should have point-in-time recovery enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "dynamodb_2",
      "plugin": "aws",
      "service": "AWS/DynamoDB"
    },
    "documentation": "## Description\n\nThis control checks whether point-in-time recovery (PITR) is enabled for an Amazon DynamoDB table.\n\nBackups help you to recover more quickly from a security incident. They also strengthen the resilience of your systems. DynamoDB point-in-time recovery automates backups for DynamoDB tables. It reduces the time to recover from accidental delete or write operations. DynamoDB tables that have PITR enabled can be restored to any point in time in the last 35 days.\n\n## Remediation\n\nTo remediate this issue, add point-in-time recovery to your DynamoDB table.\n\n**To enable DynamoDB point-in-time recovery for an existing table**\n\n1. Open the [DynamoDB console](https://console.aws.amazon.com/dynamodb/).\n2. Choose the table that you want to work with, and then choose `Backups`.\n3. In the `Point-in-time Recovery` section, under `Status`, choose `Enable`.\n4. Choose `Enable` again to confirm the change.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_dynamodb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_dynamodb",
    "executable": true,
    "problem_title": "DynamoDB tables do not have point-in-time recovery enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > DynamoDB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "DynamoDB"
    ],
    "category_hierarchy_short": "AWS - DynamoDB",
    "control_id": "aws_compliance.control.foundational_security_dynamodb_3",
    "description": "This control checks whether a DAX cluster is encrypted at rest. Encrypting data at rest reduces the risk of data stored on disk being accessed by a user not authenticated to AWS. The encryption adds another set of access controls to limit the ability of unauthorized users to access to the data. For example, API permissions are required to decrypt the data before it can be read.",
    "title": "3 DynamoDB Accelerator (DAX) clusters should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "dynamodb_3",
      "plugin": "aws",
      "service": "AWS/DynamoDB"
    },
    "documentation": "## Description\n\nThis control checks whether a DAX cluster is encrypted at rest.\n\nEncrypting data at rest reduces the risk of data stored on disk being accessed by a user not authenticated to AWS. The encryption adds another set of access controls to limit the ability of unauthorized users to access to the data. For example, API permissions are required to decrypt the data before it can be read.\n\n## Remediation\n\nYou cannot enable or disable encryption at rest after a cluster is created. You must recreate the cluster in order to enable encryption at rest. For detailed instructions on how to create a DAX cluster with encryption at rest enabled, see [Enabling encryption at rest using the AWS Management Console](https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAXEncryptionAtRest.html#dax.encryption.tutorial-console).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_dynamodb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_dynamodb",
    "executable": true,
    "problem_title": "DynamoDB Accelerator (DAX) clusters are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_1",
    "description": "Amazon EBS snapshots should not be public, determined by the ability to be restorable by anyone. EBS snapshots are used to back up the data on your EBS volumes to Amazon S3 at a specific point in time. You can use the snapshots to restore previous states of EBS volumes. It is rarely acceptable to share a snapshot with the public. Typically the decision to share a snapshot publicly was made in error or without a complete understanding of the implications. This check helps ensure that all such sharing was fully planned and intentional.",
    "title": "1 Amazon EBS snapshots should not be public, determined by the ability to be restorable by anyone",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "ec2_1",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Elasticsearch Service domains are in a VPC.\n\nIt does not evaluate the VPC subnet routing configuration to determine public reachability.\n\nThis AWS control also does not check whether the Amazon ES resource-based policy permits public access by other accounts or external entities. You should ensure that Amazon ES domains are not attached to public subnets. See [Resource-based policies](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-types-resource) in the Amazon Elasticsearch Service Developer Guide.\n\n## Remediation\n\nIf you create a domain with a public endpoint, you cannot later place it within a VPC. Instead, you must create a new domain and migrate your data.\n\nThe reverse is also true. If you create a domain within a VPC, it cannot have a public endpoint. Instead, you must either create another domain or disable this control.\n\nSee the information on migrating from public access to VPC access in the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-migrating-public-to-vpc).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Amazon EBS snapshots are publicly accessible and can be restored by anyone"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_2",
    "description": "This control checks that the default security group of a VPC does not allow inbound or outbound traffic. The rules for the default security group allow all outbound and inbound traffic from network interfaces (and their associated instances) that are assigned to the same security group.",
    "title": "2 The VPC default security group should not allow inbound and outbound traffic",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "ec2_2",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks that the default security group of a VPC does not allow inbound or outbound traffic.\n\nIt does not check for access restrictions for other security groups that are not default, and other VPC configurations.\n\n## Remediation\n\nTo remediate this issue, create new security groups and assign those security groups to your resources. To prevent the default security groups from being used, remove their inbound and outbound rules.\n\n1. Open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, choose `Security groups`. View the `default security groups` details to see the resources that are assigned to them.\n3. Select a default security group, and choose the **Inbound rules** tab. Choose **Edit** inbound rules. Then delete all of the inbound rules. Choose **Save rules**.\n4. Repeat the previous step for each default security group.\n5. Select a default security group and choose the **Outbound rules** tab. Choose **Edit** outbound rules. Then delete all of the outbound rules. Choose **Save rules**.\n6. Repeat the previous step for each default security group.\n\nCreate a set of least-privilege security groups for the resources. For details on how to create security groups, see [Creating a security group](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#CreatingSecurityGroups) in the Amazon VPC User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "The VPC default security group allows inbound or outbound traffic"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_3",
    "description": "This control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.",
    "title": "3 Attached EBS volumes should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "ec2_3",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether the EBS volumes that are in an attached state are encrypted. To pass this check, EBS volumes must be in use and encrypted. If the EBS volume is not attached, then it is not subject to this check.\n\nFor an added layer of security of your sensitive data in EBS volumes, you should enable EBS encryption at rest. Amazon EBS encryption offers a straightforward encryption solution for your EBS resources that doesn't require you to build, maintain, and secure your own key management infrastructure. It uses AWS KMS customer master keys (CMK) when creating encrypted volumes and snapshots.\n\n## Remediation\n\nThere is no direct way to encrypt an existing unencrypted volume or snapshot. You can only encrypt a new volume or snapshot when you create it.\n\nIf you enabled encryption by default, Amazon EBS encrypts the resulting new volume or snapshot using your default key for Amazon EBS encryption. Even if you have not enabled encryption by default, you can enable encryption when you create an individual volume or snapshot. In both cases, you can override the default key for Amazon EBS encryption and choose a symmetric customer managed CMK.\n\nFor more information, see [Creating an Amazon EBS volume](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-creating-volume.html) and [Copying an Amazon EBS snapshot](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ebs-copy-snapshot.html)",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Attached EBS volumes are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_4",
    "description": "This control checks whether any EC2 instances have been stopped for more than the allowed number of days. An EC2 instance fails this check if it is stopped for longer than the maximum allowed time period, which by default is 30 days.",
    "title": "4 Stopped EC2 instances should be removed after a specified time period",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "ec2_4",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether any EC2 instances have been stopped for more than the allowed number of days. An EC2 instance fails this check if it is stopped for longer than the maximum allowed time period, which by default is 30 days.\n\nA failed finding indicates that an EC2 instance has not run for a significant period of time. This creates a security risk because the EC2 instance is not being actively maintained (analyzed, patched, updated). If it is later launched, the lack of proper maintenance could result in unexpected issues in your AWS environment. To safely maintain an EC2 instance over time in a nonrunning state, start it periodically for maintenance and then stop it after maintenance. Ideally this is an automated process.\n\n## Remediation\n\nYou can terminate an EC2 instance using either the console or the command line.\n\nBefore you terminate the EC2 instance, verify that you won't lose any data:\n- Check that your Amazon EBS volumes will not be deleted on termination.\n- Copy any data that you need from your EC2 instance store volumes to Amazon EBS or Amazon S3.\n\n**To terminate an EC2 instance (console)**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, under `Instances`, choose `Instances`.\n3. Select the instance, and then choose `Actions`, `Instance State`, `Terminate`.\n4. When prompted for confirmation, choose `Yes`, `Terminate`.\n\n**To terminate an EC2 instance (AWS CLI, Tools for Windows PowerShell)**\n\nUse one of the following commands. For more information about the command line interface, see [Accessing Amazon EC2](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/concepts.html#access-ec2) in the Amazon EC2 User Guide for Linux Instances.\n\n- From the AWS CLI, use [terminate-instances](https://docs.aws.amazon.com/cli/latest/reference/ec2/terminate-instances.html)\n- From the Tools for Windows PowerShell, use [Stop-EC2Instance](https://docs.aws.amazon.com/powershell/latest/reference/items/Stop-EC2Instance.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Stopped EC2 instances are not removed after the specified time period"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_6",
    "description": "This control checks whether Amazon VPC Flow Logs are found and enabled for VPCs. The traffic type is set to Reject. With the VPC Flow Logs feature, you can capture information about the IP address traffic going to and from network interfaces in your VPC. After you create a flow log, you can view and retrieve its data in CloudWatch Logs. To reduce cost, you can also send your flow logs to Amazon S3.",
    "title": "6 VPC flow logging should be enabled in all VPCs",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "ec2_6",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether VPC flow logs are found and enabled for VPCs. The traffic type is set to REJECT.\n\nWith VPC Flow Logs, you can capture information about the IP address traffic to and from network interfaces in your VPC. After you create a flow log, you can use CloudWatch Logs to view and retrieve the log data.\n\nSecurity Hub recommends that you enable flow logging for packet rejects for VPCs. Flow logs provide visibility into network traffic that traverses the VPC. They can detect anomalous traffic and provide insight into security workflows.\n\nBy default, the record includes values for the different components of the IP address flow, including the source, destination, and protocol. For more information and descriptions of the log fields, see [VPC Flow Logs](https://docs.aws.amazon.com/vpc/latest/userguide/flow-logs.html)in the Amazon VPC User Guide.\n\n## Remediation\n\nTo enable VPC flow logging\n\n1. Open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, under Virtual Private Cloud, choose Your VPCs.\n3. Select a `VPC` to update.\n4. At the bottom of the page, choose **Flow Logs**.\n5. Choose **Create** flow log.\n6. For Filter, choose **Reject**.\n7. For Destination log group, choose the `log group` to use.\n8. If you chose `CloudWatch Logs` for your destination log group, for IAM role, choose the IAM role to use.\n9. Choose **Create**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "VPC flow logging is not enabled in some VPCs"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_7",
    "description": "This control checks whether account-level encryption is enabled by default for Amazon Elastic Block Store(Amazon EBS). The control fails if the account level encryption is not enabled.",
    "title": "7 EBS default encryption should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "ec2_7",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether account-level encryption is enabled by default for Amazon Elastic Block Store(Amazon EBS). The control fails if the account level encryption is not enabled.\n\nWhen encryption is enabled for your account, Amazon EBS volumes and snapshot copies are encrypted at rest. This adds an additional layer of protection for your data. For more information, see Encryption by default in the Amazon EC2 User Guide for Linux Instances.\n\nNote that following instance types do not support encryption: R1, C1, and M1.\n\n## Remediation\n\nYou can use the Amazon EC2 console to enable default encryption for Amazon EBS volumes.\n\n**To configure the default encryption for Amazon EBS encryption for a Region**\n\n1. Open the [Amazon EC2 console at](https://console.aws.amazon.com/ec2/).\n2. From the navigation pane, select `EC2 Dashboard`.\n3. In the upper-right corner of the page, choose `Account Attributes`, `EBS encryption`.\n4. Choose `Manage`.\n5. Select `Enable`. You can keep the AWS managed CMK with the alias alias/aws/ebs created on your behalf as the default encryption key, or choose a symmetric customer managed CMK.\n6. Choose `Update EBS encryption`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "EBS default encryption is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_8",
    "description": "This control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if HttpTokens is set to required for IMDSv2. The control fails if HttpTokens is set to optional.",
    "title": "8 EC2 instances should use IMDSv2",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "network_security",
      "foundational_security_item_id": "ec2_8",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether your EC2 instance metadata version is configured with Instance Metadata Service Version 2 (IMDSv2). The control passes if `HttpTokens` is set to `required for IMDSv2`. The control fails if `HttpTokens` is set to `optional`.\n\nYou use instance metadata to configure or manage the running instance. The IMDS provides access to temporary, frequently rotated credentials. These credentials remove the need to hard code or distribute sensitive credentials to instances manually or programmatically. The IMDS is attached locally to every EC2 instance. It runs on a special \"link local\" IP address of 169.254.169.254. This IP address is only accessible by software that runs on the instance.\n\nVersion 2 of the IMDS adds new protections for the following types of vulnerabilities. These vulnerabilities could be used to try to access the IMDS.\n\n- Open website application firewalls\n- Open reverse proxies\n- Server-side request forgery (SSRF) vulnerabilities\n- Open Layer 3 firewalls and network address translation (NAT)\n\nSecurity Hub recommends that you configure your EC2 instances with IMDSv2.\n\n## Remediation\n\nTo remediate an EC2 instance that is not configured with IMDSv2, you can require the use of IMDSv2.\n\nTo require IMDSv2 on an existing instance, when you request instance metadata, modify the Amazon EC2 metadata options. Follow the instructions in [Configuring instance metadata options for existing instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html) in the Amazon EC2 User Guide for Linux Instances.\n\nTo require the use of IMDSv2 on a new instance when you launch it, follow the instructions in [Configuring instance metadata options for new instances](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/configuring-instance-metadata-service.html) in the Amazon EC2 User Guide for Linux Instances.\n\n**To configure your new EC2 instance with IMDSv2 from the console**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. Choose `Launch instance` and then choose `Launch instance`.\n3. In the `Configure Instance Details` step, under `Advanced Details`, for `Metadata version`, choose `V2 (token required)`.\n4. Choose `Review and Launch`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "EC2 instances do not use IMDSv2"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_9",
    "description": "This control checks whether EC2 instances have a public IP address. The control fails if the publicIp field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.",
    "title": "9 EC2 instances should not have a public IP address",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "public_ip_addresses",
      "foundational_security_item_id": "ec2_9",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether EC2 instances have a public IP address. The control fails if the publicIp field is present in the EC2 instance configuration item. This control applies to IPv4 addresses only.\n\nA public IPv4 address is an IP address that is reachable from the internet. If you launch your instance with a public IP address, then your EC2 instance is reachable from the internet. A private IPv4 address is an IP address that is not reachable from the internet. You can use private IPv4 addresses for communication between EC2 instances in the same VPC or in your connected private network.\n\nIPv6 addresses are globally unique, and therefore are reachable from the internet. However, by default all subnets have the IPv6 addressing attribute set to false. For more information about IPv6, see [IP addressing in your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html) in the Amazon VPC User Guide.\n\n## Remediation\n\nUse a non-default VPC so that your instance is not assigned a public IP address by default.\n\nWhen you launch an EC2 instance into a default VPC, it is assigned a public IP address. When you launch an EC2 instance into a non-default VPC, the subnet configuration determines whether it receives a public IP address. The subnet has an attribute to determine if new EC2 instances in the subnet receive a public IP address from the public IPv4 address pool.\n\nYou cannot manually associate or disassociate an automatically-assigned public IP address from your EC2 instance. To control whether your EC2 instance receives a public IP address, do one of the following:\n\n- Modify the public IP addressing attribute of your subnet. For more information, see [Modifying the public IPv4 addressing attribute for your subnet](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-ip-addressing.html#subnet-public-ip) in the `Amazon VPC User Guide`.\n\n- Enable or disable the public IP addressing feature during launch. This overrides the subnet's public IP addressing attribute. For more information, see [Assign a public IPv4 address during instance launch](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#public-ip-addresses) in the `Amazon EC2 User Guide for Linux Instances`.\n\nFor more information, see [Public IPv4 addresses and external DNS hostnames](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-instance-addressing.html#concepts-public-addresses) in the Amazon EC2 User Guide for Linux Instances.\n\nIf your EC2 instance is associated with an Elastic IP address, then your EC2 instance is reachable from the internet. You can disassociate an Elastic IP address from an instance or network interface at any time.\n\n**To disassociate an Elastic IP address**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, choose `Elastic IPs`.\n3. Select the Elastic IP address to disassociate.\n4. From `Actions`, choose `Disassociate Elastic IP address`.\n5. Choose `Disassociate`.\n\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "EC2 instances have a public IP address"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_10",
    "description": "This control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.",
    "title": "10 Amazon EC2 should be configured to use VPC endpoints",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "api_private_access",
      "foundational_security_item_id": "ec2_10",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether a service endpoint for Amazon EC2 is created for each VPC. The control fails if a VPC does not have a VPC endpoint created for the Amazon EC2 service.\n\nTo improve the security posture of your VPC, you can configure Amazon EC2 to use an interface VPC endpoint. Interface endpoints are powered by AWS PrivateLink, a technology that enables you to access Amazon EC2 API operations privately. It restricts all network traffic between your VPC and Amazon EC2 to the Amazon network. Because endpoints are supported within the same Region only, you cannot create an endpoint between a VPC and a service in a different Region. This prevents unintended Amazon EC2 API calls to other Regions.\n\n## Remediation\n\nTo remediate this issue, you can create an interface VPC endpoint to Amazon EC2.\n\n**To create an interface endpoint to Amazon EC2 from the Amazon VPC console**\n\n1. Open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, choose `Endpoints`.\n3. Choose `Create Endpoint`.\n4. For `Service category`, choose `AWS services`.\n5. For `Service Name`, choose `com.amazonaws.`*region*.`ec2`.\n6. For `Type`, choose `Interface`.\n7. Complete the following information.\n   - For `VPC`, select a VPC in which to create the endpoint.\n   - For `Subnets`, select the subnets (Availability Zones) in which to create the endpoint network interfaces. Not all Availability Zones are supported for all AWS services.\n   - To enable private DNS for the interface endpoint, select the check box for `Enable DNS Name`. This option is enabled by default.\n   - To use the private DNS option, the following attributes of your VPC must be set to true:\n     - `enableDnsHostnames`\n     - `enableDnsSupport`\n     - For more information, see [Viewing and updating DNS support for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-dns.html#vpc-dns-updating) in the Amazon VPC User Guide.\n   - For `Security group`, select the security groups to associate with the endpoint network interfaces.\n   - (Optional) Add or remove a tag. To add a tag, choose `Add tag` and do the following:\n     - For `Key`, enter the tag name.\n     - For `Value`, enter the tag value.\n   - To remove a tag, choose the delete button (x) to the right of the tag `Key` and `Value`.\n8. Choose `Create endpoint`.\n\n**To create an interface VPC endpoint policy**\n\nYou can attach a policy to your VPC endpoint to control access to the Amazon EC2 API. The policy specifies the following:\n\n  - The principal that can perform actions\n  - The actions that can be performed\n  - The resource on which the actions can be performed",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Amazon EC2 is not configured to use VPC endpoints"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_15",
    "description": "This control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.",
    "title": "15 EC2 subnets should not automatically assign public IP addresses",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "network_security",
      "foundational_security_item_id": "ec2_15",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether the assignment of public IPs in Amazon Virtual Private Cloud (Amazon VPC) subnets have MapPublicIpOnLaunch set to FALSE. The control passes if the flag is set to FALSE.\n\nAll subnets have an attribute that determines whether a network interface created in the subnet automatically receives a public IPv4 address. Instances that are launched into subnets that have this attribute enabled have a public IP address assigned to their primary network interface.\n\n## Remediation\n\nYou can configure a subnet from the Amazon VPC console.\n\n**To configure a subnet to not assign public IP addresses**\n\n1. Open the [Amazon VPC console](https://console.aws.amazon.com/vpc/.)\n\n2. In the navigation pane, choose `Subnets`.\n\n3. Select your subnet and then choose `Subnet Actions`, `Modify auto-assign IP settings`.\n\n4. Clear the `Enable auto-assign public IPv4 address` check box and then choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "EC2 subnets automatically assigns public IP addresses"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_16",
    "description": "This control checks whether there are any unused network access control lists (ACLs). The control checks the item configuration of the resource AWS::EC2::NetworkAcl and determines the relationships of the network ACL.",
    "title": "16 Unused network access control lists should be removed",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "network_security",
      "foundational_security_item_id": "ec2_16",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether there are any unused network access control lists (ACLs).\n\nThe control checks the item configuration of the resource AWS::EC2::NetworkAcl and determines the relationships of the network ACL.\n\nIf the only relationship is the VPC of the network ACL, then the control fails.\n\n## Remediation\n\nFor instructions on how to delete an unused network ACL, see [Delete a network ACL](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html#DeleteNetworkACL).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Unused network access control lists are not removed"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_17",
    "description": "This control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs.",
    "title": "17 EC2 instances should not use multiple ENIs",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "network_security",
      "foundational_security_item_id": "ec2_17",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether an EC2 instance uses multiple Elastic Network Interfaces (ENIs) or Elastic Fabric Adapters (EFAs). This control passes if a single network adapter is used. The control includes an optional parameter list to identify the allowed ENIs.\n\nMultiple ENIs can cause dual-homed instances, meaning instances that have multiple subnets. This can add network security complexity and introduce unintended network paths and access.\n\n## Remediation\n\nTo remediate this issue, detach the additional ENIs.\n\n**To detach a network interface**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. Under `Network & Security`, choose `Network Interfaces`.\n3. Filter the list by the noncompliant instance IDs to see the associated ENIs.\n4. Select the ENIs that you want to remove.\n5. From the `Actions` menu, choose `Detach`.\n6. If you see the prompt `Are you sure that you want to detach the following network interface?`,      choose `Detach`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "EC2 instances use multiple ENIs"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_18",
    "description": "This control checks whether the security groups that are in use allow unrestricted incoming traffic. Optionally the rule checks whether the port numbers are listed in the authorizedTcpPorts parameter. The default values for authorizedTcpPorts are 80 and 443.",
    "title": "18 Security groups should only allow unrestricted incoming traffic for authorized ports",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "security_group_configuration",
      "foundational_security_item_id": "ec2_18",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether the security groups that are in use allow unrestricted incoming traffic. Optionally the rule checks whether the port numbers are listed in the authorizedTcpPorts parameter.\n\n- If the security group rule port number allows unrestricted incoming traffic, but the port number is specified in authorizedTcpPorts, then the control passes. The default value for authorizedTcpPorts is 80, 443.\n- If the security group rule port number allows unrestricted incoming traffic, but the port number is not specified in authorizedTcpPorts input parameter, then the control fails.\n- If the parameter is not used, then the control fails for any security group that has an unrestricted inbound rule.\n\nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS. Security group rules should follow the principal of least privileged access. Unrestricted access (IP address with a /0 suffix) increases the opportunity for malicious activity such as hacking, denial-of-service attacks, and loss of data.\n\n## Remediation\n\nFor information on how to modify a security group, see [Add, remove, or update rules](https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html#AddRemoveRules).\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Security groups do not restrict incoming traffic on unauthorized ports"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_19",
    "description": "This control checks whether unrestricted incoming traffic for the security groups is accessible to the specified ports that have the highest risk. This control passes when none of the rules in a security group allow ingress traffic from 0.0.0.0/0 for those ports.",
    "title": "19 Security groups should not allow unrestricted access to ports with high risk",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "security_group_configuration",
      "foundational_security_item_id": "ec2_19",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether unrestricted incoming traffic for the security groups is accessible to the specified ports that have the highest risk. This control passes when none of the rules in a security group allow ingress traffic from 0.0.0.0/0 for those ports.\n\nUnrestricted access (0.0.0.0/0) increases opportunities for malicious activity, such as hacking, denial-of-service attacks, and loss of data.\n\nSecurity groups provide stateful filtering of ingress and egress network traffic to AWS resources. No security group should allow unrestricted ingress access to the following ports:\n\n- 3389 (RDP)\n\n- 20, 21 (FTP)\n\n- 22 (SSH)\n\n- 23 (Telnet)\n\n- 110 (POP3)\n\n- 143 (IMAP)\n\n- 3306 (mySQL)\n\n- 8080 (proxy)\n\n- 1433, 1434 (MSSQL)\n\n- 9200 or 9300 (Elasticsearch)\n\n- 5601 (Kibana)\n\n- 25 (SMTP)\n\n- 445 (CIFS)\n\n- 135 (RPC)\n\n- 4333 (ahsp)\n\n- 5432 (postgresql)\n\n- 5500 (fcp-addr-srvr1)\n\n## Remediation\n\nFor information on how to delete rules from a security group, see [Delete rules from a security group](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/working-with-security-groups.html#deleting-security-group-rule) in the Amazon EC2 User Guide for Linux Instances.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Security groups allows unrestricted access to ports with high risk"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_20",
    "description": "This control checks that both VPN tunnels provided by AWS Site-to-Site VPN are in UP status. The control fails if one or both tunnels are in DOWN status.",
    "title": "20 Both VPN tunnels for an AWS Site-to-Site VPN connection should be up",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resilience",
      "foundational_security_item_id": "ec2_20",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nA VPN tunnel is an encrypted link where data can pass from the customer network to or from AWS within an AWS Site-to-Site VPN connection. Each VPN connection includes two VPN tunnels which you can simultaneously use for high availability. Ensuring that both VPN tunnels are up for a VPN connection is important for confirming a secure and highly available connection between an AWS VPC and your remote network.\n\nThis control checks that both VPN tunnels provided by AWS Site-to-Site VPN are in UP status. The control fails if one or both tunnels are in DOWN status.\n\n## Remediation\n\nTo modify VPN tunnel options, see [Modifying Site-to-Site VPN tunnel options](https://docs.aws.amazon.com/vpn/latest/s2svpn/modify-vpn-tunnel-options.html) in the AWS Site-to-Site VPN User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "One or more VPN tunnels for the AWS Site-to-Site VPN connection is not up"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_21",
    "description": "This control checks if default ports for SSH/RDP ingress traffic for network access control lists (NACLs) is unrestricted. The rule fails if a NACL inbound entry allows a source CIDR block of '0.0.0.0/0' or '::/0' for ports 22 or 3389.",
    "title": "21 Network ACLs should not allow ingress from 0.0.0.0/0 to port 22 or port 3389",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "ec2_21",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks if default ports for SSH/RDP ingress traffic for network access control lists (NACLs) is unrestricted. The rule fails if a NACL inbound entry allows a source CIDR block of '0.0.0.0/0' or '::/0' for ports 22 or 3389\n\nAccess to remote server administration ports, such as port 22 (SSH) and port 3389 (RDP), should not be publicly accessible, as this may allow unintended access to resources within your VPC.\n\n## Remediation\n\nFor more information about NACLs, see [Network ACLs](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-network-acls.html) in the VPC User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Network ACLs allows unrestricted ingress from 0.0.0.0/0 to port 22 or port 3389"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_22",
    "description": "This AWS control checks that security groups are attached to Amazon Elastic Compute Cloud (Amazon EC2) instances or to an elastic network interface. The control will fail if the security group is not associated with an Amazon EC2 instance or an elastic network interface.",
    "title": "22 Unused EC2 security groups should be removed",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "ec2_22",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis AWS control checks that security groups are attached to Amazon Elastic Compute Cloud (Amazon EC2) instances or to an elastic network interface. The control will fail if the security group is not associated with an Amazon EC2 instance or an elastic network interface.\n\n## Remediation\n\nTo create, assign and delete security groups, see [Security groups](https://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/working-with-security-groups.html#deleting-security-group) in Amazon EC2 user guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Unused EC2 security groups are not removed"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_23",
    "description": "This control checks if EC2 Transit Gateways are automatically accepting shared VPC attachments. This control fails for a Transit Gateway that automatically accepts shared VPC attachment requests.",
    "title": "23 EC2 Transit Gateways should not automatically accept VPC attachment requests",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "ec2_23",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks if EC2 Transit Gateways are automatically accepting shared VPC attachments. This control fails for a Transit Gateway that automatically accepts shared VPC attachment requests.\n\nTurning on AutoAcceptSharedAttachments configures a Transit Gateway to automatically accept any cross-account VPC attachment requests without verifying the request or the account the attachment is originating from. To follow the best practices of authorization and authentication, we recommended turning off this feature to ensure that only authorized VPC attachment requests are accepted.\n\n## Remediation\n\nFor information about how to modify a Transit Gateway, see [Modify a transit gateway](https://docs.aws.amazon.com/vpc/latest/tgw/tgw-transit-gateways.html#tgw-modifying) in the Amazon VPC Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "EC2 Transit Gateway automatically accepts VPC attachment requests"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_24",
    "description": "This control checks whether the virtualization type of an EC2 instance is paravirtual. The control fails if the virtualizationType of the EC2 instance is set to paravirtual.",
    "title": "24 Paravirtual EC2 instance types should not be used",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_patch_and_version_management",
      "foundational_security_item_id": "ec2_24",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks whether the virtualization type of an EC2 instance is paravirtual. The control fails if the virtualizationType of the EC2 instance is set to paravirtual.\n\nLinux Amazon Machine Images (AMIs) use one of two types of virtualization: paravirtual (PV) or hardware virtual machine (HVM). The main differences between PV and HVM AMIs are the way in which they boot and whether they can take advantage of special hardware extensions (CPU, network, and storage) for better performance.\n\nHistorically, PV guests had better performance than HVM guests in many cases, but because of enhancements in HVM virtualization and the availability of PV drivers for HVM AMIs, this is no longer true. For more information, see Linux AMI virtualization types in the Amazon EC2 User Guide for Linux Instances.\n\n## Remediation\n\nFor information about how to update an EC2 instance to a new instance type, see [Change the instance type](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-resize.html) in the Amazon EC2 User Guide for Linux Instances.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Paravirtual EC2 instance types are being used"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EC2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EC2"
    ],
    "category_hierarchy_short": "AWS - EC2",
    "control_id": "aws_compliance.control.foundational_security_ec2_25",
    "description": "This control checks if Amazon EC2 launch templates are configured to assign public IP addresses to network interfaces upon launch. The control fails if an EC2 launch template is configured to assign a public IP address to network interfaces or if there is at least one network interface that has a public IP address.",
    "title": "25 Amazon EC2 launch templates should not assign public IPs to network interfaces",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_not_publicly_accessible",
      "foundational_security_item_id": "ec2_25",
      "plugin": "aws",
      "service": "AWS/EC2"
    },
    "documentation": "## Description\n\nThis control checks if Amazon EC2 launch templates are configured to assign public IP addresses to network interfaces upon launch. The control fails if an EC2 launch template is configured to assign a public IP address to network interfaces or if there is at least one network interface that has a public IP address.\n\nA public IP address is one that is reachable from the internet. If you configure your network interfaces with a public IP address, then the resources associated with those network interfaces may be reachable from the internet. EC2 resources shouldn't be publicly accessible because this may permit unintended access to your workloads.\n\n## Remediation\n\nTo update an EC2 launch template, see [Change the default network interface settings](https://docs.aws.amazon.com/autoscaling/ec2/userguide/create-launch-template.html#change-network-interface) in the Amazon EC2 Auto Scaling User Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ec2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ec2",
    "executable": true,
    "problem_title": "Amazon EC2 launch templates assign public IPs to network interfaces"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Registry",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Registry"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Registry",
    "control_id": "aws_compliance.control.foundational_security_ecr_1",
    "description": "This control checks whether a private ECR repository has image scanning configured. This control fails if a private ECR repository doesn't have image scanning configured.",
    "title": "1 ECR private repositories should have image scanning configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_patch_and_version_management",
      "foundational_security_item_id": "ecr_1",
      "plugin": "aws",
      "service": "AWS/ECR"
    },
    "documentation": "## Description\n\nThis control checks whether a private ECR repository has image scanning configured. This control fails if a private ECR repository doesn't have image scanning configured.\n\nECR image scanning helps in identifying software vulnerabilities in your container images. ECR uses the Common Vulnerabilities and Exposures (CVEs) database from the open-source Clair project  and provides a list of scan findings. Enabling image scanning on ECR repositories adds a layer of verification for the integrity and safety of the images being stored.\n\n## Remediation\n\nTo configure image scanning for an ECR repository, see [Image scanning](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-scanning.html) in the Amazon Elastic Container Registry User Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecr"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecr",
    "executable": true,
    "problem_title": "ECR private repositories do not have image scanning configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Registry",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Registry"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Registry",
    "control_id": "aws_compliance.control.foundational_security_ecr_2",
    "description": "This control checks whether a private ECR repository has tag immutability enabled. This control fails if a private ECR repository has tag immutability disabled. This rule passes if tag immutability is enabled and has the value IMMUTABLE.",
    "title": "2 ECR private repositories should have tag immutability configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "tagging",
      "foundational_security_item_id": "ecr_2",
      "plugin": "aws",
      "service": "AWS/ECR"
    },
    "documentation": "## Description\n\nThis control checks whether a private ECR repository has tag immutability enabled. This control fails if a private ECR repository has tag immutability disabled. This rule passes if tag immutability is enabled and has the value IMMUTABLE.\n\nAmazon ECR Tag Immutability enables customers to rely on the descriptive tags of an image as a reliable mechanism to track and uniquely identify images. An immutable tag is static, which means each tag refers to a unique image. This improves reliability and scalability as the use of a static tag will always result in the same image being deployed. When configured, tag immutability prevents the tags from being overridden, which reduces the attack surface.\n\n## Remediation\n\nTo create a repository with immutable tags configured or to update the image tag mutability settings for an existing repository, see [Image tag mutability](https://docs.aws.amazon.com/AmazonECR/latest/userguide/image-tag-mutability.html) in the Amazon Elastic Container Registry User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecr"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecr",
    "executable": true,
    "problem_title": "ECR private repositories do not have tag immutability configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Registry",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Registry"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Registry",
    "control_id": "aws_compliance.control.foundational_security_ecr_3",
    "description": "This control checks whether an Amazon ECR repository has at least one lifecycle policy configured. This control fails if an ECR repository does not have any lifecycle policies configured.",
    "title": "3 ECR repositories should have at least one lifecycle policy configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "ecr_3",
      "plugin": "aws",
      "service": "AWS/ECR"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon ECR repository has at least one lifecycle policy configured. This control fails if an ECR repository does not have any lifecycle policies configured.\n\nAmazon ECR lifecycle policies enable you to specify the lifecycle management of images in a repository. By configuring lifecycle policies, you can automate the cleanup of unused images and the expiration of images based on age or count. Automating these tasks can help you avoid unintentionally using outdated images in your repository.\n\n## Remediation\n\nTo configure a lifecycle policy, see [Creating a lifecycle policy preview](https://docs.aws.amazon.com/AmazonECR/latest/userguide/lpp_creation.html) in the Amazon Elastic Container Registry User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecr"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecr",
    "executable": true,
    "problem_title": "ECR repositories do not have at least one lifecycle policy configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_1",
    "description": "This control checks whether an Amazon ECS task definition that has host networking mode also has 'privileged' or 'user' container definitions. The control fails for task definitions that have host network mode and container definitions where privileged=false or is empty and user=root or is empty.",
    "title": "1 Amazon ECS task definitions should have secure networking modes and user definitions",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "ecs_1",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon ECS task definition that has host networking mode also has 'privileged' or 'user' container definitions. The control fails for task definitions that have host network mode and container definitions where privileged=false or is empty and user=root or is empty.\n\nIf a task definition has elevated privileges, it is because the customer has specifically opted in to that configuration. This control checks for unexpected privilege escalation when a task definition has host networking enabled but the customer has not opted in to elevated privileges.\n\n## Remediation\n\nFor information on how to update a task definition, see [Updating a task definition](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/update-task-definition.html).\n\nNote that when you update a task definition, it does not update running tasks that were launched from the previous task definition. To update a running task, you must redeploy the task with the new task definition.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "Amazon ECS task definitions do not have secure networking modes and user definitions"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_2",
    "description": "This control checks whether Amazon ECS services are configured to automatically assign public IP addresses. This control fails if AssignPublicIP is ENABLED. This control passes if AssignPublicIP is DISABLED.",
    "title": "2 Amazon ECS services should not have public IP addresses assigned to them automatically",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_not_publicly_accessible",
      "foundational_security_item_id": "ecs_2",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "Amazon ECS services are assigned with public IP addresses automatically"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_3",
    "description": "This control checks if Amazon ECS task definitions are configured to share a host’s process namespace with its containers. The control fails if the task definition shares the host's process namespace with the containers running on it.",
    "title": "3 ECS task definitions should not share the host's process namespace",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "ecs_3",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks if Amazon ECS task definitions are configured to share a host’s process namespace with its containers. The control fails if the task definition shares the host's process namespace with the containers running on it.\n\nA process ID (PID) namespace provides separation between processes. It prevents system processes from being visible, and allows PIDs to be reused, including PID 1. If the host’s PID namespace is shared with containers, it would allow containers to see all of the processes on the host system. This reduces the benefit of process level isolation between the host and the containers. These circumstances could lead to unauthorized access to processes on the host itself, including the ability to manipulate and terminate them. Customers shouldn’t share the host’s process namespace with containers running on it.\n\n## Remediation\n\nTo configure the pidMode on a task definition, see [Task definition parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#task_definition_pidmode) in the Amazon Elastic Container Service Developer Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "ECS task definitions are sharing the host's process namespace"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_4",
    "description": "This control checks if the privileged parameter in the container definition of Amazon ECS Task Definitions is set to true. The control fails if this parameter is equal to true.",
    "title": "4 ECS containers should run as non-privileged",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "root_user_access_restrictions",
      "foundational_security_item_id": "ecs_4",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks if the privileged parameter in the container definition of Amazon ECS Task Definitions is set to true. The control fails if this parameter is equal to true.\n\nWe recommend that you remove elevated privileges from your ECS task definitions. When the privilege parameter is true, the container is given elevated privileges on the host container instance (similar to the root user).\n\n## Remediation\n\nTo configure the privileged parameter on a task definition, see [Advanced container definition parameters](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task_definition_parameters.html#container_definition_security) in the Amazon Elastic Container Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "ECS containers are running as privileged"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_5",
    "description": "This control checks if ECS containers are limited to read-only access to mounted root filesystems. This control fails if the ReadonlyRootFilesystem parameter in the container definition of ECS task definitions is set to false.",
    "title": "5 ECS containers should be limited to read-only access to root filesystems",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "ecs_5",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks if ECS containers are limited to read-only access to mounted root filesystems. This control fails if the ReadonlyRootFilesystem parameter in the container definition of ECS task definitions is set to false.\n\nEnabling this option reduces security attack vectors since the container instance’s filesystem cannot be tampered with or written to unless it has explicit read-write permissions on its filesystem folder and directories. This control also adheres to the principle of least privilege.\n\n## Remediation\n\n**To limit container definitions to read-only access to root filesystems**\n\n1. Open the [Amazon ECS console](https://console.aws.amazon.com/ecs/).\n2. In the left navigation pane, choose `Task Definitions`.\n3. For each task definition that has container definitions that need to be updated, do the following:\n    - Select the container definition that needs to be updated.\n    - Choose `Edit Container`. For `Storage and Logging`, select `Read only root file system`.\n    - Choose `Update` at the bottom of the `Edit Container` tab.\n    - Choose `Create`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "ECS containers are not limited to read-only access to root filesystems"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_8",
    "description": "This control checks if the key value of any variables in the environment parameter of container definitions includes AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or ECS_ENGINE_AUTH_DATA. This control fails if a single environment variable in any container definition equals AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or ECS_ENGINE_AUTH_DATA. This control does not cover environmental variables passed in from other locations such as Amazon S3.",
    "title": "8 Secrets should not be passed as container environment variables",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "credentials_not_hard_coded",
      "foundational_security_item_id": "ecs_8",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks if the key value of any variables in the environment parameter of container definitions includes AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or ECS_ENGINE_AUTH_DATA. This control fails if a single environment variable in any container definition equals AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, or ECS_ENGINE_AUTH_DATA. This control does not cover environmental variables passed in from other locations such as Amazon S3.\n\nAWS Systems Manager Parameter Store can help you improve the security posture of your organization. We recommend using the Parameter Store to store secrets and credentials instead of directing passing them into your container instances or hard coding them into your code.\n\n## Remediation\n\nTo create parameters using SSM, see [Creating Systems Manager parameters](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-su-create.html)in the AWS Systems Manager User Guide. For more information about creating a task definition that specifies a secret, see [Specifying sensitive data using Secrets Manager](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/specifying-sensitive-data-secrets.html#secrets-create-taskdefinition) in the Amazon Elastic Container Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "Secrets are being passed as container environment variables"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_10",
    "description": "This control checks if Amazon ECS Fargate services are running the latest Fargate platform version. This control fails if the platform version is not the latest.",
    "title": "10 Fargate services should run on the latest Fargate platform version",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_patch_and_version_management",
      "foundational_security_item_id": "ecs_10",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks if Amazon ECS Fargate services are running the latest Fargate platform version. This control fails if the platform version is not the latest.\n\nAWS Fargate platform versions refer to a specific runtime environment for Fargate task infrastructure, which is a combination of kernel and container runtime versions. New platform versions are released as the runtime environment evolves. For example, a new version may be released for kernel or operating system updates, new features, bug fixes, or security updates. Security updates and patches are deployed automatically for your Fargate tasks. If a security issue is found that affects a platform version, AWS patches the platform version.\n\n## Remediation\n\nTo update an existing service, including its platform version, see [Updating a service](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/update-service.html) in the Amazon Elastic Container Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "Fargate services are running on an outdated Fargate platform version"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Container Service",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Container Service"
    ],
    "category_hierarchy_short": "AWS - Elastic Container Service",
    "control_id": "aws_compliance.control.foundational_security_ecs_12",
    "description": "This control checks if ECS clusters use Container Insights. This control fails if Container Insights are not set up for a cluster.",
    "title": "12 ECS clusters should have Container Insights enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "ecs_12",
      "plugin": "aws",
      "service": "AWS/ECS"
    },
    "documentation": "## Description\n\nThis control checks if ECS clusters use Container Insights. This control fails if Container Insights are not set up for a cluster.\n\nMonitoring is an important part of maintaining the reliability, availability, and performance of Amazon ECS clusters. Use CloudWatch Container Insights to collect, aggregate, and summarize metrics and logs from your containerized applications and microservices. CloudWatch automatically collects metrics for many resources, such as CPU, memory, disk, and network. Container Insights also provides diagnostic information, such as container restart failures, to help you isolate issues and resolve them quickly. You can also set CloudWatch alarms on metrics that Container Insights collects.\n\n## Remediation\n\nTo use Container Insights, see [Updating a service](https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/deploy-container-insights-ECS.html) in the Amazon CloudWatch User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ecs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ecs",
    "executable": true,
    "problem_title": "ECS clusters do not have Container Insights enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EFS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EFS"
    ],
    "category_hierarchy_short": "AWS - EFS",
    "control_id": "aws_compliance.control.foundational_security_efs_1",
    "description": "This control checks whether Amazon Elastic File System is configured to encrypt the file data using AWS KMS.",
    "title": "1 Amazon EFS should be configured to encrypt file data at rest using AWS KMS",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "efs_1",
      "plugin": "aws",
      "service": "AWS/EFS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Elastic File System is configured to encrypt the file data using AWS KMS. The check fails in the following cases.\n\n  - `Encrypted` is set to false in the [DescribeFileSystems](https://docs.aws.amazon.com/efs/latest/ug/API_DescribeFileSystems.html) response.\n  - The `KmsKeyId` key in the [DescribeFileSystems](https://docs.aws.amazon.com/efs/latest/ug/API_DescribeFileSystems.html) response does not match the `KmsKeyId` parameter for [efs-encrypted-check](https://docs.aws.amazon.com/config/latest/developerguide/efs-encrypted-check.html).\n\nNote that this control does not use the `KmsKeyId` parameter for [efs-encrypted-check](https://docs.aws.amazon.com/config/latest/developerguide/efs-encrypted-check.html). It only checks the value of `Encrypted`.\n\nFor an added layer of security for your sensitive data in Amazon EFS, you should create encrypted file systems. Amazon EFS supports encryption for file systems at-rest. You can enable encryption of data at rest when you create an Amazon EFS file system. To learn more about Amazon EFS encryption, see [Data encryption in Amazon EFS](https://docs.aws.amazon.com/efs/latest/ug/encryption.html).\n\n## Remediation\n\nFor details on how to encrypt a new Amazon EFS file system, see [Encrypting data at rest](https://docs.aws.amazon.com/efs/latest/ug/encryption-at-rest.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_efs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_efs",
    "executable": true,
    "problem_title": "Amazon EFS is not configured to encrypt file data at rest using AWS KMS"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EFS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EFS"
    ],
    "category_hierarchy_short": "AWS - EFS",
    "control_id": "aws_compliance.control.foundational_security_efs_2",
    "description": "This control checks whether Amazon Elastic File System (Amazon EFS) file systems are added to the backup plans in AWS Backup. The control fails if Amazon EFS file systems are not included in the backup plans.",
    "title": "2 Amazon EFS volumes should be in backup plans",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backup",
      "foundational_security_item_id": "efs_2",
      "plugin": "aws",
      "service": "AWS/EFS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Elastic File System (Amazon EFS) file systems are added to the backup plans in AWS Backup. The control fails if Amazon EFS file systems are not included in the backup plans.\n\nIncluding EFS file systems in the backup plans helps you to protect your data from deletion and data loss.\n\n## Remediation\n\nTo remediate this issue, update your file system to enable automatic backups.\n\n**To enable automatic backups for an existing file system**\n\n1. Open the [Amazon Elastic File System console](https://console.aws.amazon.com/efs/).\n2. On the `File systems` page, choose the file system for which to enable automatic backups. The File system details page is displayed.\n3. Under `General`, choose `Edit`.\n4. To enable automatic backups, select `Enable automatic backups`.\n5. Choose `Save changes`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_efs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_efs",
    "executable": true,
    "problem_title": "Amazon EFS volumes are not in a backup plan"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EFS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EFS"
    ],
    "category_hierarchy_short": "AWS - EFS",
    "control_id": "aws_compliance.control.foundational_security_efs_3",
    "description": "This control checks if Amazon EFS access points are configured to enforce a root directory. The control fails if the value of Path is set to / (the default root directory of the file system).",
    "title": "3 EFS access points should enforce a root directory",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "efs_3",
      "plugin": "aws",
      "service": "AWS/EFS"
    },
    "documentation": "## Description\n\nThis control checks if Amazon EFS access points are configured to enforce a root directory. The control fails if the value of Path is set to / (the default root directory of the file system).\n\nWhen you enforce a root directory, the NFS client using the access point uses the root directory configured on the access point instead of the file system's root directory. Enforcing a root directory for an access point helps restrict data access by ensuring that users of the access point can only reach files of the specified subdirectory.\n\n## Remediation\n\nFor instructions on how to enforce a root directory for an Amazon EFS access point, see [Enforcing a root directory with an access point](https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html#enforce-root-directory-access-point) in the Amazon Elastic File System User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_efs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_efs",
    "executable": true,
    "problem_title": "EFS access points do not enforce a root directory"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EFS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EFS"
    ],
    "category_hierarchy_short": "AWS - EFS",
    "control_id": "aws_compliance.control.foundational_security_efs_4",
    "description": "This control checks whether Amazon EFS access points are configured to enforce a user identity. This control fails if a POSIX user identity is not defined while creating the EFS access point.",
    "title": "4 EFS access points should enforce a user identity",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "efs_4",
      "plugin": "aws",
      "service": "AWS/EFS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon EFS access points are configured to enforce a user identity. This control fails if a POSIX user identity is not defined while creating the EFS access point.\n\nAmazon EFS access points are application-specific entry points into an EFS file system that make it easier to manage application access to shared datasets. Access points can enforce a user identity, including the user's POSIX groups, for all file system requests that are made through the access point. Access points can also enforce a different root directory for the file system so that clients can only access data in the specified directory or its subdirectories.\n\n## Remediation\n\nTo enforce a user identity for an Amazon EFS access point, see [Enforcing a user identity using an access point](https://docs.aws.amazon.com/efs/latest/ug/efs-access-points.html#enforce-identity-access-points) in the Amazon Elastic File System User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_efs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_efs",
    "executable": true,
    "problem_title": "EFS access points do not enforce a user identity"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EKS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EKS"
    ],
    "category_hierarchy_short": "AWS - EKS",
    "control_id": "aws_compliance.control.foundational_security_eks_1",
    "description": "This control checks whether an Amazon EKS cluster endpoint is publicly accessible. The control fails if an EKS cluster has an endpoint that is publicly accessible.",
    "title": "1 EKS cluster endpoints should not be publicly accessible",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "eks_1",
      "plugin": "aws",
      "service": "AWS/EKS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon EKS cluster endpoint is publicly accessible. The control fails if an EKS cluster has an endpoint that is publicly accessible.\n\nWhen your create a new cluster, Amazon EKS creates an endpoint for the managed Kubernetes API server that you use to communicate with your cluster. By default, this API server endpoint is publicly available to the internet. Access to the API server is secured using a combination of AWS Identity and Access Management (IAM) and native Kubernetes Role Based Access Control (RBAC). By removing public access to the endpoint, you can avoid unintentional exposure and access to your cluster.\n\n## Remediation\n\nTo modify endpoint access for an existing EKS cluster, see [Modifying cluster endpoint access](https://docs.aws.amazon.com/eks/latest/userguide/cluster-endpoint.html#modify-endpoint-access) in the Amazon EKS User Guide. You can set up endpoint access for a new EKS cluster when creating it. For instructions on creating a new Amazon EKS cluster, see [Creating an Amazon EKS cluster](https://docs.aws.amazon.com/eks/latest/userguide/create-cluster.html) in the Amazon EKS User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_eks"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_eks",
    "executable": true,
    "problem_title": "EKS cluster endpoints are publicly accessible"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EKS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EKS"
    ],
    "category_hierarchy_short": "AWS - EKS",
    "control_id": "aws_compliance.control.foundational_security_eks_2",
    "description": "This control checks whether an Amazon EKS cluster is running on a supported Kubernetes version. The control fails if the EKS cluster is running on an unsupported version. If your application doesn't require a specific version of Kubernetes, we recommend that you use the latest available Kubernetes version that's supported by EKS for your clusters.",
    "title": "2 EKS clusters should run on a supported Kubernetes version",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_patch_and_version_management",
      "foundational_security_item_id": "eks_2",
      "plugin": "aws",
      "service": "AWS/EKS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon EKS cluster is running on a supported Kubernetes version. The control fails if the EKS cluster is running on an unsupported version.\n\nIf your application doesn't require a specific version of Kubernetes, we recommend that you use the latest available Kubernetes version that's supported by EKS for your clusters. For more information about supported Kubernetes versions for Amazon EKS, see [Amazon EKS Kubernetes release calendar](https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html#kubernetes-release-calendar) and [Amazon EKS version support and FAQ](https://docs.aws.amazon.com/eks/latest/userguide/kubernetes-versions.html#version-deprecation)/para> in the Amazon EKS User Guide.\n\n## Remediation\n\nTo update an EKS cluster, [Updating an Amazon EKS cluster Kubernetes version](https://docs.aws.amazon.com/eks/latest/userguide/update-cluster.html)/para> in the Amazon EKS User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_eks"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_eks",
    "executable": true,
    "problem_title": "EKS cluster is running on an unsupported Kubernetes version"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_1",
    "description": "This control evaluates if Amazon ElastiCache for Redis clusters have automatic backup scheduled. The control fails if the SnapshotRetentionLimit for the Redis cluster is less than 1.",
    "title": "1 ElastiCache for Redis clusters should have automatic backups scheduled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "elasticache_1",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control evaluates if Amazon ElastiCache for Redis clusters have automatic backup scheduled. The control fails if the `SnapshotRetentionLimit` for the Redis cluster is less than `1`.\n\nAmazon ElastiCache for Redis clusters can back up their data. You can use the backup to restore a cluster or seed a new cluster. The backup consists of the cluster's metadata, along with all of the data in the cluster. All backups are written to Amazon Simple Storage Service (Amazon S3), which provides durable storage. You can restore your data by creating a new Redis cluster and populating it with data from a backup. You can manage backups using the AWS Management Console, the AWS Command Line Interface (AWS CLI), and the ElastiCache API.\n\n## Remediation\n\nFor information about scheduling automatic backups, see [Scheduling Automatic Backups](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/backups-automatic.html) in the Amazon ElastiCache User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "ElastiCache for Redis cluster automatic backups are not scheduled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_2",
    "description": "This control evaluates whether ElastiCache for Redis automatically applies minor version upgrades to cache clusters. This control fails if ElastiCache for Redis cache clusters do not have minor version upgrades automatically applied.",
    "title": "2 Minor version upgrades should be automatically applied to ElastiCache for Redis cache clusters",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_patch_and_version_management",
      "foundational_security_item_id": "elasticache_2",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control evaluates whether ElastiCache for Redis automatically applies minor version upgrades to cache clusters. This control fails if ElastiCache for Redis cache clusters do not have minor version upgrades automatically applied.\n\n`AutoMinorVersionUpgrade` is a feature that you can turn on in ElastiCache for Redis to have your cache clusters automatically upgraded when a new minor cache engine version is available. These upgrades might include security patches and bug fixes. Staying up-to-date with patch installation is an important step in securing systems.\n\n## Remediation\n\nFor instructions on turning on automatic minor version upgrades for an existing ElastiCache for Redis cache cluster, see [Upgrading engine versions](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/VersionManagement.html) in the Amazon ElastiCache User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "Minor version upgrades are not automatically applied to ElastiCache for Redis cache clusters"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_3",
    "description": "This control checks if ElastiCache for Redis replication groups have automatic failover enabled. This control fails if automatic failover isn't enabled for a Redis replication group.",
    "title": "3 ElastiCache for Redis replication groups should have automatic failover enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "elasticache_3",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control checks if ElastiCache for Redis replication groups have automatic failover enabled. This control fails if automatic failover isn't enabled for a Redis replication group.\n\nWhen automatic failover is enabled for a replication group, the role of primary node will automatically fail over to one of the read replicas. This failover and replica promotion ensure that you can resume writing to the new primary after promotion is complete, which reduces overall downtime in case of failure.\n\n## Remediation\n\nTo enable automatic failover for an existing ElastiCache for Redis replication group,, see [Modifying an ElastiCache cluster](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/Clusters.Modify.html#Clusters.Modify.CON) in the Amazon ElastiCache User Guide. If you use the ElastiCache console, set `Auto failover` to enabled.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "ElastiCache for Redis replication groups do not have automatic failover enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_4",
    "description": "This control checks if ElastiCache for Redis replication groups are encrypted at rest. This control fails if an ElastiCache for Redis replication group isn't encrypted at rest.",
    "title": "4 ElastiCache for Redis replication groups should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "elasticache_4",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control checks if ElastiCache for Redis replication groups are encrypted at rest. This control fails if an ElastiCache for Redis replication group isn't encrypted at rest.\n\nEncrypting data at rest reduces the risk that an unauthenticated user gets access to data that is stored on disk. ElastiCache for Redis replication groups should be encrypted at rest for an added layer of security.\n\n## Remediation\n\nTo configure at-rest encryption on an ElastiCache for Redis replication group, see [Enabling at-rest encryption](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/at-rest-encryption.html#at-rest-encryption-enable) in the Amazon ElastiCache User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "ElastiCache for Redis replication groups are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_5",
    "description": "This control checks if ElastiCache for Redis replication groups are encrypted in transit. This control fails if an ElastiCache for Redis replication group isn't encrypted in transit.",
    "title": "5 ElastiCache for Redis replication groups should be encrypted in transit",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "elasticache_5",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control checks if ElastiCache for Redis replication groups are encrypted in transit. This control fails if an ElastiCache for Redis replication group isn't encrypted in transit.\n\nEncrypting data in transit reduces the risk that an unauthorized user can eavesdrop on network traffic. Enabling encryption in transit on an ElastiCache for Redis replication group encrypts your data whenever it's moving from one place to another, such as between nodes in your cluster or between your cluster and your application.\n\n## Remediation\n\nTo configure in-transit encryption on an ElastiCache for Redis replication group, see [Enabling in-transit encryption](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/in-transit-encryption.html) in the Amazon ElastiCache User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "ElastiCache for Redis replication groups are not encrypted in transit"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_6",
    "description": "This control checks if ElastiCache for Redis replication groups have Redis AUTH enabled. The control fails for an ElastiCache for Redis replication group if the Redis version of its nodes is below 6.0 and AuthToken isn't in use.",
    "title": "6 ElastiCache for Redis replication groups before version 6.0 should use Redis AUTH",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "elasticache_6",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control checks if ElastiCache for Redis replication groups have Redis AUTH enabled. The control fails for an ElastiCache for Redis replication group if the Redis version of its nodes is below 6.0 and `AuthToken` isn't in use.\n\nWhen you use Redis authentication tokens, or passwords, Redis requires a password before allowing clients to run commands, which improves data security. For Redis 6.0 and later versions, we recommend using Role-Based Access Control (RBAC). Since RBAC is not supported for Redis versions earlier than 6.0, this control only evaluates versions which can't use the RBAC feature.\n\n## Remediation\n\nTo use Redis AUTH on an ElastiCache for Redis replication group, see [Modifying the AUTH token on an existing ElastiCache for Redis cluster](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/auth.html#auth-modifyng-token) in the Amazon ElastiCache User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "ElastiCache for Redis replication groups are using Redis without AUTH (before version 6.0)"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ElastiCache",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ElastiCache"
    ],
    "category_hierarchy_short": "AWS - ElastiCache",
    "control_id": "aws_compliance.control.foundational_security_elasticache_7",
    "description": "This control checks if ElastiCache clusters are configured with a custom subnet group. The control fails for an ElastiCache cluster if CacheSubnetGroupName has the value default.",
    "title": "7 ElastiCache clusters should not use the default subnet group",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "elasticache_7",
      "plugin": "aws",
      "service": "AWS/ElastiCache"
    },
    "documentation": "## Description\n\nThis control checks if ElastiCache clusters are configured with a custom subnet group. The control fails for an ElastiCache cluster if `CacheSubnetGroupName` has the value `default`.\n\nWhen launching an ElastiCache cluster, a default subnet group is created if one doesn't exist already. The default group uses subnets from the default Virtual Private Cloud (VPC). We recommend using custom subnet groups that are more restrictive of the subnets that the cluster resides in, and the networking that the cluster inherits from the subnets.\n\n## Remediation\n\nTo create a new subnet group for an ElastiCache cluster, see [Creating a subnet group](https://docs.aws.amazon.com/AmazonElastiCache/latest/red-ug/SubnetGroups.Creating.html) in the Amazon ElastiCache User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticache"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticache",
    "executable": true,
    "problem_title": "ElastiCache clusters are using the default subnet group"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elastic Beanstalk",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elastic Beanstalk"
    ],
    "category_hierarchy_short": "AWS - Elastic Beanstalk",
    "control_id": "aws_compliance.control.foundational_security_elasticbeanstalk_1",
    "description": "This control checks whether enhanced health reporting is enabled for your AWS Elastic Beanstalk environments.Elastic Beanstalk enhanced health reporting enables a more rapid response to changes in the health of the underlying infrastructure. These changes could result in a lack of availability of the application.",
    "title": "1 Elastic Beanstalk environments should have enhanced health reporting enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "application_monitoring",
      "foundational_security_item_id": "elasticbeanstalk_1",
      "plugin": "aws",
      "service": "AWS/ElasticBeanstalk"
    },
    "documentation": "## Description\n\nThis control checks whether enhanced health reporting is enabled for your AWS Elastic Beanstalk environments.\n\nElastic Beanstalk enhanced health reporting enables a more rapid response to changes in the health of the underlying infrastructure. These changes could result in a lack of availability of the application.\n\nElastic Beanstalk enhanced health reporting provides a status descriptor to gauge the severity of the identified issues and identify possible causes to investigate. The Elastic Beanstalk health agent, included in supported Amazon Machine Images (AMIs), evaluates logs and metrics of environment EC2 instances.\n\nFor additional information, see [Enhanced health reporting and monitoring](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced.html) in the AWS Elastic Beanstalk Developer Guide.\n\n## Remediation\n\nFor instructions on how to enable enhanced health reporting, see [Enabling enhanced health reporting using the Elastic Beanstalk console](https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/health-enhanced-enable.html#health-enhanced-enable-console) in the AWS Elastic Beanstalk Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elasticbeanstalk"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elasticbeanstalk",
    "executable": true,
    "problem_title": "Elastic Beanstalk environments do not have enhanced health reporting enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_1",
    "description": "This control checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The control fails if any of the HTTP listeners of Application Load Balancers do not have HTTP to HTTPS redirection configured.",
    "title": "1 Application Load Balancer should be configured to redirect all HTTP requests to HTTPS",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_item_id": "elb_1",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The control fails if any of the HTTP listeners of Application Load Balancers do not have HTTP to HTTPS redirection configured.\n\nBefore you start to use your Application Load Balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners support both the HTTP and HTTPS protocols. You can use an HTTPS listener to offload the work of encryption and decryption to your load balancer. To enforce encryption in transit, you should use redirect actions with Application Load Balancers to redirect client HTTP requests to an HTTPS request on port 443.\n\n## Remediation\n\nTo remediate this issue, you redirect HTTP request to HTTPS.\n\n**To redirect HTTP requests to HTTPS on an Application Load Balancer**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. On the navigation pane, under `LOAD BALANCING`, choose `Load Balancers`.\n3. Choose an Application Load Balancer.\n4. Choose `Listeners`.\n5. Select the check box for an HTTP listener (port 80 TCP) and then choose `Edit`.\n6. If there is an existing rule, you must delete it. Otherwise, choose `Add action` and then choose `Redirect to...`.\n7. Choose `HTTPS` and then enter `443`.\n8. Choose the check mark in a circle symbol and then choose `Update`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Application Load Balancer is not configured to redirect all HTTP requests to HTTPS"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_2",
    "description": "This control checks whether the Classic Load Balancer uses HTTPS/SSL certificates provided by AWS Certificate Manager (ACM). The control fails if the Classic Load Balancer configured with HTTPS/SSL listener does not use a certificate provided by ACM.",
    "title": "2 Classic Load Balancers with SSL/HTTPS listeners should use a certificate provided by AWS Certificate Manager",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "elb_2",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether the Classic Load Balancer uses HTTPS/SSL certificates provided by AWS Certificate Manager (ACM). The control fails if the Classic Load Balancer configured with HTTPS/SSL listener does not use a certificate provided by ACM.\n\nTo create a certificate, you can use either ACM or a tool that supports the SSL and TLS protocols, such as OpenSSL. Security Hub recommends that you use ACM to create or import certificates for your load balancer.\n\nACM integrates with Classic Load Balancers so that you can deploy the certificate on your load balancer. You also should automatically renew these certificates.\n\n## Remediation\n\nFor information about how to associate an ACM SSL/TLS certificate with a Classic Load Balancer, see the AWS Knowledge Center article [How can I associate an ACM SSL/TLS certificate with a Classic, Application, or Network Load Balancer?](http://aws.amazon.com/premiumsupport/knowledge-center/associate-acm-certificate-alb-nlb/)",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Classic Load Balancers with SSL/HTTPS listeners do not use a certificate provided by AWS Certificate Manager"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_3",
    "description": "This control checks whether your Classic Load Balancer listeners are configured with HTTPS or TLS protocol for front-end (client to load balancer) connections. The control is applicable if a Classic Load Balancer has listeners. If your Classic Load Balancer does not have a listener configured, then the control does not report any findings. The control passes if the Classic Load Balancer listeners are configured with TLS or HTTPS for front-end connections. The control fails if the listener is not configured with TLS or HTTPS for front-end connections.",
    "title": "3 Classic Load Balancer listeners should be configured with HTTPS or TLS termination",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "elb_3",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether your Classic Load Balancer listeners are configured with HTTPS or TLS protocol for front-end (client to load balancer) connections. The control is applicable if a Classic Load Balancer has listeners. If your Classic Load Balancer does not have a listener configured, then the control does not report any findings.\n\nThe control passes if the Classic Load Balancer listeners are configured with TLS or HTTPS for front-end connections.\n\nThe control fails if the listener is not configured with TLS or HTTPS for front-end connections.\n\nBefore you start to use a load balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners can support both HTTP and HTTPS/TLS protocols. You should always use an HTTPS or TLS listener, so that the load balancer does the work of encryption and decryption in transit.\n\n## Remediation\n\nTo remediate this issue, update your listeners to use the TLS or HTTPS protocol.\n\n**To change all noncompliant listeners to TLS/HTTPS listeners**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, choose `Load Balancers`. Then choose your Classic Load Balancer.\n3. Choose the `Listeners` tab, and then choose `Edit`.\n4. For all listeners where Load Balancer Protocol is not set to HTTPS or SSL, change the setting to HTTPS or SSL.\n5. For all modified listeners, under `SSL Certificate`, choose `Change`.\n6. For all modified listeners, select `Choose a certificate from ACM`.\n7. Select the certificate from the `Certificates` drop-down list. Then choose `Save`.\n8. After you update all of the listeners, choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Classic Load Balancer listeners are not configured with HTTPS or TLS termination"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_4",
    "description": "This control evaluates AWS Application Load Balancers (ALB) to ensure they are configured to drop invalid HTTP headers. The control fails if the value of routing.http.drop_invalid_header_fields.enabled is set to false. By default, ALBs are not configured to drop invalid HTTP header values. Removing these header values prevents HTTP desync attacks.",
    "title": "4 Application load balancers should be configured to drop HTTP headers",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "network_security",
      "foundational_security_item_id": "elb_4",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control evaluates AWS Application Load Balancers (ALB) to ensure they are configured to drop invalid HTTP headers. The control fails if the value of `routing.http.drop_invalid_header_fields.enabled` is set to `false`.\n\nBy default, ALBs are not configured to drop invalid HTTP header values. Removing these header values prevents HTTP desync attacks.\n\n## Remediation\n\nTo remediate this issue, configure your load balancer to drop invalid header fields.\n\n**To configure the load balancer to drop invalid header fields**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, choose `Load balancers`.\n3. Choose an `Application Load Balancer`.\n4. From `Actions`, choose `Edit attributes`.\n5. Under `Drop Invalid Header Fields`, choose `Enable`.\n6. Choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Application load balancers are not configured to drop HTTP headers"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_5",
    "description": "This control checks whether the Application Load Balancer and the Classic Load Balancer have logging enabled. The control fails if access_logs.s3.enabled is false.",
    "title": "5 Application and Classic Load Balancers logging should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "elb_5",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether the Application Load Balancer and the Classic Load Balancer have logging enabled. The control fails if access_logs.s3.enabled is false.\n\nElastic Load Balancing provides access logs that capture detailed information about requests sent to your load balancer. Each log contains information such as the time the request was received, the client's IP address, latencies, request paths, and server responses. You can use these access logs to analyze traffic patterns and to troubleshoot issues.\n\n## Remediation\n\nTo remediate this issue, update your load balancers to enable logging.\n\n**To enable access logs**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, choose `Load balancers`.\n3. Choose an Application Load Balancer.\n4. From `Actions`, choose `Edit attributes`.\n5. Under `Access logs`, choose `Enable`.\n6. Enter your S3 location. This location can exist or it can be created for you. If you do not specify a prefix, the access logs are stored in the root of the S3 bucket.\n7. Choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Application and Classic Load Balancers logging is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_6",
    "description": "This control checks whether an Application Load Balancer has deletion protection enabled. The control fails if deletion protection is not configured. Enable deletion protection to protect your Application Load Balancer from deletion.",
    "title": "6 Application Load Balancer deletion protection should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "elb_6",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether an Application Load Balancer has deletion protection enabled. The control fails if deletion protection is not configured.\n\nEnable deletion protection to protect your Application Load Balancer from deletion.\n\n## Remediation\n\nTo prevent your load balancer from being deleted accidentally, you can enable deletion protection. By default, deletion protection is disabled for your load balancer.\n\nIf you enable deletion protection for your load balancer, you must disable delete protection before you can delete the load balancer.\n\n**To enable deletion protection from the console**\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. On the navigation pane, under `LOAD BALANCING`, choose `Load Balancers`.\n3. Choose the load balancer.\n4. On the `Description` tab, choose `Edit attributes`.\n5. On the `Edit load balancer attributes` page, select `Enable for Delete Protection`, and then choose `Save`.\n6. Choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Application Load Balancer deletion protection is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_7",
    "description": "This control checks whether Classic Load Balancers have connection draining enabled.",
    "title": "7 Classic Load Balancers should have connection draining enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resilience",
      "foundational_security_item_id": "elb_7",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether Classic Load Balancers have connection draining enabled.\n\nEnabling connection draining on Classic Load Balancers ensures that the load balancer stops sending requests to instances that are de-registering or unhealthy. It keeps the existing connections open. This is particularly useful for instances in Auto Scaling groups, to ensure that connections aren’t severed abruptly.\n\n## Remediation\nTo enable connection draining on Classic Load Balancers, following the steps in [Configure connection draining for your Classic Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-conn-drain.html) in User Guide for Classic Load Balancers.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Classic Load Balancers do not have connection draining enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_9",
    "description": "This control checks if cross-zone load balancing is enabled for the Classic Load Balancers (CLBs). This control fails if cross-zone load balancing is not enabled for a CLB.",
    "title": "9 Classic Load Balancers should have cross-zone load balancing enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "elb_9",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks if cross-zone load balancing is enabled for the Classic Load Balancers (CLBs). The control fails if cross-zone load balancing is not enabled for a CLB.\n\nA load balancer node distributes traffic only across the registered targets in its Availability Zone. When cross-zone load balancing is disabled, each load balancer node distributes traffic only across the registered targets in its Availability Zone. If the number of registered targets is not same across the Availability Zones, traffic wont be distributed evenly and the instances in one zone may end up over utilized compared to the instances in another zone. With cross-zone load balancing enabled, each load balancer node for your Classic Load Balancer distributes requests evenly across the registered instances in all enabled Availability Zones. For details see [Cross-zone load balancing](https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/how-elastic-load-balancing-works.html#cross-zone-load-balancing) in the Elastic Load Balancing User Guide.\n\n## Remediation\n\nTo enable cross-zone load balancing in a Classic Load Balancer, see [Enable cross-zone load balancing](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-crosszone-lb.html#enable-cross-zone) in the Elastic Load Balancing User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Classic Load Balancers do not have cross-zone load balancing enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_10",
    "description": "This control checks whether a Classic Load Balancer has been configured to span multiple Availability Zones. The control fails if the Classic Load Balancer does not span multiple Availability Zones.",
    "title": "10 Classic Load Balancers should span multiple Availability Zones",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "elb_10",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether a Classic Load Balancer has been configured to span multiple Availability Zones. The control fails if the Classic Load Balancer does not span multiple Availability Zones.\n\nA Classic Load Balancer can be set up to distribute incoming requests across Amazon EC2 instances in a single Availability Zone or multiple Availability Zones. A Classic Load Balancer that does not span multiple Availability Zones is unable to redirect traffic to targets in another Availability Zone if the sole configured Availability Zone becomes unavailable.\n\n## Remediation\n\nFor information on how to add Availability Zones to a Classic Load Balancer, see [Add or remove Availability Zones](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/enable-disable-az.html) in the User Guide for Classic Load Balancers.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Classic Load Balancers do not span multiple Availability Zones"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_12",
    "description": "This control checks whether an Application Load Balancer is configured with defensive or strictest desync mitigation mode. The control fails if an Application Load Balancer is not configured with defensive or strictest desync mitigation mode.",
    "title": "12 Application Load Balancers should be configured with defensive or strictest desync mitigation mode",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_integrity",
      "foundational_security_item_id": "elb_12",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether an Application Load Balancer is configured with defensive or strictest desync mitigation mode. The control fails if an Application Load Balancer is not configured with defensive or strictest desync mitigation mode.\n\nHTTP Desync issues can lead to request smuggling and make applications vulnerable to request queue or cache poisoning. In turn, these vulnerabilities can lead to credential hijacking or execution of unauthorized commands. Application Load Balancers configured with defensive or strictest desync mitigation mode protect your application from security issues that may be caused by HTTP Desync.\n\n## Remediation\n\nTo update desync mitigation mode of an Application Load Balancer, see [Desync mitigation mode](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/application-load-balancers.html#desync-mitigation-mode) in the User Guide for Application Load Balancers.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Application Load Balancers are not configured with defensive or strictest desync mitigation mode"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_13",
    "description": "This control checks whether an Elastic Load Balancer V2 (Application, Network, or Gateway Load Balancer) has registered instances from multiple Availability Zones. The control fails if an Elastic Load Balancer V2 has instances registered in fewer than two Availability Zones.",
    "title": "13 Application, Network, and Gateway Load Balancers should span multiple Availability Zones",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "elb_13",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether an Elastic Load Balancer V2 (Application, Network, or Gateway Load Balancer) has registered instances from multiple Availability Zones. The control fails if an Elastic Load Balancer V2 has instances registered in fewer than two Availability Zones.\n\nElastic Load Balancing automatically distributes your incoming traffic across multiple targets, such as EC2 instances, containers, and IP addresses, in one or more Availability Zones. Elastic Load Balancing scales your load balancer as your incoming traffic changes over time. It is recommended to configure at least two availability zones to ensure availability of services, as the Elastic Load Balancer will be able to direct traffic to another availability zone if one becomes unavailable. Having multiple availability zones configured will help eliminate having a single point of failure for the application.\n\n## Remediation\n\nTo add an Availability Zone to an Application Load Balancer, see [Availability Zones for your Application Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-subnets.html) in the User Guide for Application Load Balancers. To add an Availability Zone to an Network Load Balancer, see [Network Load Balancer ](https://docs.aws.amazon.com/elasticloadbalancing/latest/network/network-load-balancers.html#availability-zones) s in the User Guide for Network Load Balancers. To add an Availability Zone to a Gateway Load Balancer, see [Create a Gateway Load Balancer](https://docs.aws.amazon.com/elasticloadbalancing/latest/gateway/create-load-balancer.html) in the User Guide for Gateway Load Balancers.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Application, Network, and Gateway Load Balancers do not span multiple Availability Zones"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELB",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELB"
    ],
    "category_hierarchy_short": "AWS - ELB",
    "control_id": "aws_compliance.control.foundational_security_elb_14",
    "description": "This control checks whether a Classic Load Balancer is configured with defensive or strictest desync mitigation mode. This control will fail if the Classic Load Balancer is not configured with defensive or strictest desync mitigation mode.",
    "title": "14 Classic Load Balancers should be configured with defensive or strictest desync mitigation mode",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_integrity",
      "foundational_security_item_id": "elb_14",
      "plugin": "aws",
      "service": "AWS/ELB"
    },
    "documentation": "## Description\n\nThis control checks whether a Classic Load Balancer is configured with defensive or strictest desync mitigation mode. This control will fail if the Classic Load Balancer is not configured with defensive or strictest desync mitigation mode.\n\nHTTP Desync issues can lead to request smuggling and make applications vulnerable to request queue or cache poisoning. In turn, these vulnerabilities can lead to credential hijacking or execution of unauthorized commands. Classic Load Balancers configured with defensive or strictest desync mitigation mode protect your application from security issues that may be caused by HTTP Desync.\n\n## Remediation\n\nTo update desync mitigation mode of a Classic Load Balancer, see [Modify desync mitigation mode](https://docs.aws.amazon.com/elasticloadbalancing/latest/classic/config-desync-mitigation-mode.html#update-desync-mitigation-mode) in the User Guide for Classic Load Balancers.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elb"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elb",
    "executable": true,
    "problem_title": "Classic Load Balancers are not configured with defensive or strictest desync mitigation mode"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > ELBv2",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "ELBv2"
    ],
    "category_hierarchy_short": "AWS - ELBv2",
    "control_id": "aws_compliance.control.foundational_security_elbv2_1",
    "description": "This control checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The check fails if one or more HTTP listeners of Application Load Balancers do not have HTTP to HTTPS redirection configured.",
    "title": "1 Application Load Balancer should be configured to redirect all HTTP requests to HTTPS",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "elbv2_1",
      "plugin": "aws",
      "service": "AWS/ELBv2"
    },
    "documentation": "## Description\n\nThis control checks whether HTTP to HTTPS redirection is configured on all HTTP listeners of Application Load Balancers. The control fails if any of the HTTP listeners of Application Load Balancers do not have HTTP to HTTPS redirection configured.\n\nBefore you start to use your Application Load Balancer, you must add one or more listeners. A listener is a process that uses the configured protocol and port to check for connection requests. Listeners support both the HTTP and HTTPS protocols. You can use an HTTPS listener to offload the work of encryption and decryption to your load balancer. To enforce encryption in transit, you should use redirect actions with Application Load Balancers to redirect client HTTP requests to an HTTPS request on port 443.\n\n## Remediation\n\nTo enable VPC flow logging\n\n1. Open the [Amazon EC2 console](https://console.aws.amazon.com/ec2/).\n2. In the navigation pane, under Load Balancing, choose **Load balancers**.\n3. Choose an `Application Load Balancer`.\n4. Choose **Listeners**.\n5. Select the check box for an HTTP listener (port 80 TCP) and then choose **Edit**.\n6. If there is an existing rule, you must delete it. Otherwise, choose **Add action** and then choose **Redirect to....**\n7. Choose `HTTPS` and then enter `443`.\n8. Choose the check mark in a circle symbol and then choose **Update**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_elbv2"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_elbv2",
    "executable": true,
    "problem_title": "Application Load Balancer is not configured to redirect all HTTP requests to HTTPS"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > EMR",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "EMR"
    ],
    "category_hierarchy_short": "AWS - EMR",
    "control_id": "aws_compliance.control.foundational_security_emr_1",
    "description": "This control checks whether master nodes on Amazon EMR clusters have public IP addresses. The control fails if the master node has public IP addresses that are associated with any of its instances. Public IP addresses are designated in the PublicIp field of the NetworkInterfaces configuration for the instance. This control only checks Amazon EMR clusters that are in a RUNNING or WAITING state.",
    "title": "1 Amazon EMR cluster master nodes should not have public IP addresses",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "emr_1",
      "plugin": "aws",
      "service": "AWS/EMR"
    },
    "documentation": "## Description\n\nThis control checks whether master nodes on Amazon EMR clusters have public IP addresses.\n\nThe control fails if the master node has public IP addresses that are associated with any of its instances. `Public IP` addresses are designated in the PublicIp field of the `NetworkInterfaces` configuration for the instance. This control only checks Amazon EMR clusters that are in a `RUNNING` or `WAITING` state.\n\n## Remediation\n\nDuring launch, you can control whether your instance in a default or nondefault subnet is assigned a public IPv4 address.\n\nBy default, default subnets have this attribute set to `true`. Nondefault subnets have the IPv4 public addressing attribute set to `false`, unless it was created by the Amazon EC2 launch instance wizard. In that case, the wizard sets the attribute to `true`.\n\nYou need to launch your cluster in a VPC with a private subnet that has the IPv4 public addressing attribute set to false.\n\nAfter launch, you cannot manually disassociate a public IPv4 address from your instance.\n\nTo remediate this finding, you need to create a new cluster in VPC private subnet. For information on how to launch a cluster in into a VPC private subnet, see [Launch clusters into a VPC](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-vpc-launching-job-flows.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_emr"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_emr",
    "executable": true,
    "problem_title": "Amazon EMR cluster master nodes are having a public IP address"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_1",
    "description": "This control checks whether Amazon Elasticsearch Service (Amazon ES) domains have encryption at rest configuration enabled. The check fails if encryption at rest is not enabled.",
    "title": "1 Elasticsearch domains should have encryption at-rest enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "es_1",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon ES domains have encryption at rest configuration enabled.\n\n## Remediation\n\nBy default, domains do not encrypt data at rest, and you cannot configure existing domains to use the feature.\n\nTo enable the feature, you must create another domain and migrate your data. For information about creating domains, see the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains).\n\nEncryption of data at rest requires Amazon ES 5.1 or later. For more information about encrypting data at rest for Amazon ES, see the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/encryption-at-rest.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Elasticsearch domains do not have encryption at-rest enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_2",
    "description": "This control checks whether Amazon Elasticsearch Service domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access. You should ensure that Amazon ES domains are not attached to public subnets.",
    "title": "2 Amazon Elasticsearch Service domains should be in a VPC",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_within_vpc",
      "foundational_security_item_id": "es_2",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Elasticsearch Service domains are in a VPC.\n\nIt does not evaluate the VPC subnet routing configuration to determine public reachability.\n\nThis AWS control also does not check whether the Amazon ES resource-based policy permits public access by other accounts or external entities. You should ensure that Amazon ES domains are not attached to public subnets. See [Resource-based policies](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-ac.html#es-ac-types-resource) in the Amazon Elasticsearch Service Developer Guide.\n\n## Remediation\n\nIf you create a domain with a public endpoint, you cannot later place it within a VPC. Instead, you must create a new domain and migrate your data.\n\nThe reverse is also true. If you create a domain within a VPC, it cannot have a public endpoint. Instead, you must either create another domain or disable this control.\n\nSee the information on migrating from public access to VPC access in the [Amazon Elasticsearch Service Developer Guide](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-vpc.html#es-migrating-public-to-vpc).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Amazon Elasticsearch Service domains are not in a VPC"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_3",
    "description": "This control checks whether Amazon ES domains have node-to-node encryption enabled.",
    "title": "3 Amazon Elasticsearch Service domains should encrypt data sent between nodes",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "es_3",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon ES domains have node-to-node encryption enabled.\n\nHTTPS (TLS) can be used to help prevent potential attackers from eavesdropping on or manipulating network traffic using person-in-the-middle or similar attacks. Only encrypted connections over HTTPS (TLS) should be allowed. Enabling node-to-node encryption for Amazon ES domains ensures that intra-cluster communications are encrypted in transit.\n\nThere can be a performance penalty associated with this configuration. You should be aware of and test the performance trade-off before enabling this option.\n\n## Remediation\n\nNode-to-node encryption can only be enabled on a new domain. To remediate this finding, first [Create a new domain](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-createupdatedomains.html#es-createdomains) with the Node-to-node encryption check box selected. Then follow [Using a snapshot to migrate data](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-version-migration.html#snapshot-based-migration) to migrate your data to the new domain.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Amazon Elasticsearch Service domains do not encrypt data sent between nodes"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_4",
    "description": "This control checks whether Elasticsearch domains are configured to send error logs to CloudWatch Logs.",
    "title": "4 Elasticsearch domain error logging to CloudWatch Logs should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "es_4",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Elasticsearch domains are configured to send error logs to CloudWatch Logs.\n\nYou should enable error logs for Elasticsearch domains and send those logs to CloudWatch Logs for retention and response. Domain error logs can assist with security and access audits, and can help to diagnose availability issues.\n\n## Remediation\n\nFor information on how to enable log publishing, see [Enabling log publishing (console)](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html#createdomain-configure-slow-logs-cons) in the Amazon OpenSearch Service Developer Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Elasticsearch domain error logging is not enabled for CloudWatch Logs"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_5",
    "description": "This control checks whether Elasticsearch domains have audit logging enabled. This control fails if an Elasticsearch domain does not have audit logging enabled.",
    "title": "5 Elasticsearch domains should have audit logging enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "es_5",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Elasticsearch domains are configured to send error logs to CloudWatch Logs.\n\nYou should enable error logs for Elasticsearch domains and send those logs to CloudWatch Logs for retention and response. Domain error logs can assist with security and access audits, and can help to diagnose availability issues.\n\n## Remediation\n\nFor information on how to enable log publishing, see [Enabling log publishing (console)](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html#createdomain-configure-slow-logs-cons) in the Amazon OpenSearch Service Developer Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Elasticsearch domains do not have audit logging enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_6",
    "description": "This control checks whether Elasticsearch domains are configured with at least three data nodes and zoneAwarenessEnabled is true.",
    "title": "6 Elasticsearch domains should have at least three data nodes",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "es_6",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Elasticsearch domains are configured with at least three data nodes and zoneAwarenessEnabled is true.\n\nAn Elasticsearch domain requires at least three data nodes for high availability and fault-tolerance. Deploying an Elasticsearch domain with at least three data nodes ensures cluster operations if a node fails.\n\n## Remediation\n\nTo modify the number of data nodes in an Amazon ES domain\n\n1. Open the [Amazon Elasticsearch console](https://console.aws.amazon.com/es/).\n2. Under `My domains`, choose the name of the domain to edit.\n3. Choose `Edit domain`.\n4. Under `Data nodes`, set `Number of nodes` to a number greater than or equal to three.\n   For three Availability Zone deployments, set to a multiple of three to ensure equal distribution across Availability Zones.\n5. Under Dedicated master nodes, set Instance type to the desired instance type.\n6. Choose `Submit`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Elasticsearch domains do not have at least three data nodes"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_7",
    "description": "This control checks whether Elasticsearch domains are configured with at least three dedicated master nodes. This control fails if the domain does not use dedicated master nodes. This control passes if Elasticsearch domains have five dedicated master nodes. However, using more than three master nodes might be unnecessary to mitigate the availability risk, and will result in additional cost.",
    "title": "7 Elasticsearch domains should be configured with at least three dedicated master nodes",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "es_7",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether Elasticsearch domains are configured with at least three dedicated master nodes. This control fails if the domain does not use dedicated master nodes. This control passes if Elasticsearch domains have five dedicated master nodes. However, using more than three master nodes might be unnecessary to mitigate the availability risk, and will result in additional cost.\n\nAn Elasticsearch domain requires at least three dedicated master nodes for high availability and fault-tolerance. Dedicated master node resources can be strained during data node blue/green deployments because there are additional nodes to manage. Deploying an Elasticsearch domain with at least three dedicated master nodes ensures sufficient master node resource capacity and cluster operations if a node fails.\n\n## Remediation\n\nTo modify the number of dedicated master nodes in an Elasticsearch domain\n\n1. Open the [Amazon Elasticsearch console](https://console.aws.amazon.com/es/).\n2. Under `My domains`, choose the name of the domain to edit.\n3. Choose `Edit domain`.\n4. Under `Dedicated master nodes`, set `Instance type` to the desired instance type.\n5. Set `Number of master nodes` equal to three or greater.\n6. Choose `Submit`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Elasticsearch domains are not configured with at least three dedicated master nodes"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Elasticsearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Elasticsearch"
    ],
    "category_hierarchy_short": "AWS - Elasticsearch",
    "control_id": "aws_compliance.control.foundational_security_es_8",
    "description": "This control checks whether connections to Elasticsearch domains are required to use TLS 1.2. The check fails if the Elasticsearch domain TLSSecurityPolicy is not Policy-Min-TLS-1-2-2019-07.",
    "title": "8 Connections to Elasticsearch domains should be encrypted using TLS 1.2",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "es_8",
      "plugin": "aws",
      "service": "AWS/ES"
    },
    "documentation": "## Description\n\nThis control checks whether connections to Elasticsearch domains are required to use TLS 1.2. The check fails if the Elasticsearch domain TLSSecurityPolicy is not Policy-Min-TLS-1-2-2019-07.\n\nHTTPS (TLS) can be used to help prevent potential attackers from using person-in-the-middle or similar attacks to eavesdrop on or manipulate network traffic. Only encrypted connections over HTTPS (TLS) should be allowed. Encrypting data in transit can affect performance. You should test your application with this feature to understand the performance profile and the impact of TLS. TLS 1.2 provides several security enhancements over previous versions of TLS.de fails.\n\n## Remediation\n\nTo enable TLS encryption, use the [UpdateElasticsearchDomainConfig](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-api.html#es-configuration-api-actions-updateelasticsearchdomainconfig) wAPI operation to configure the [DomainEndpointOptions](https://docs.aws.amazon.com/elasticsearch-service/latest/developerguide/es-configuration-api.html#es-configuration-api-datatypes-domainendpointoptions) in order to set the TLSSecurityPolicy. For more information, see the Amazon Elasticsearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_es"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_es",
    "executable": true,
    "problem_title": "Connections to Elasticsearch domains are not encrypted using TLS 1.2"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > GuardDuty",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "GuardDuty"
    ],
    "category_hierarchy_short": "AWS - GuardDuty",
    "control_id": "aws_compliance.control.foundational_security_guardduty_1",
    "description": "This control checks whether Amazon GuardDuty is enabled in your GuardDuty account and Region. It is highly recommended that you enable GuardDuty in all supported AWS Regions. Doing so allows GuardDuty to generate findings about unauthorized or unusual activity, even in Regions that you do not actively use. This also allows GuardDuty to monitor CloudTrail events for global AWS services such as IAM.",
    "title": "1 GuardDuty should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "detection_services",
      "foundational_security_item_id": "guardduty_1",
      "plugin": "aws",
      "service": "AWS/GuardDuty"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon GuardDuty is enabled in your AWS account and Region.\n\nWhile GuardDuty can be effective against attacks that an intrusion detection system would typically protect, it might not be a complete solution for every environment. This rule also does not check for the generation of alerts to personnel. For more information about GuardDuty, see the [Amazon GuardDuty User Guide](https://docs.aws.amazon.com/guardduty/latest/ug/what-is-guardduty.html).\n\n## Remediation\n\nTo remediate this issue, you enable GuardDuty.\n\nRefer here for more [Getting started with GuardDuty](https://docs.aws.amazon.com/guardduty/latest/ug/guardduty_settingup.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_guardduty"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_guardduty",
    "executable": true,
    "problem_title": "GuardDuty is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_1",
    "description": "This control checks whether the default version of IAM policies (also known as customer managed policies) has administrator access that includes a statement with 'Effect': 'Allow' with 'Action': '*' over 'Resource': '*'. The control only checks the customer managed policies that you create. It does not check inline and AWS managed policies.",
    "title": "1 IAM policies should not allow full '*' administrative privileges",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_1",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks whether the default version of AWS Identity and Access Management policies (also known as customer managed policies) do not have administrator access with a statement that has `\"Effect\"`: \"Allow\" with \"Action\": \"*\" over \"Resource\": \"*\".\n\nIt only checks for the customer managed policies that you created, but does not check for full access to individual services, such as \"S3:*\".\n\nIt does not check for inline and AWS managed policies.\n\n## Remediation\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Policies**.\n3. Choose the radio button next to the policy to remove.\n4. From **Policy actions**, choose **Detach**.\n5. On the **Detach policy** page, choose the radio button next to each user to detach the policy from and then choose **Detach policy**.\n6. Confirm that the user that you detached the policy from can still access AWS services and resources as expected.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "IAM policies allow full '*'' administrative privileges"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_2",
    "description": "This control checks that none of your IAM users have policies attached. Instead, IAM users must inherit permissions from IAM groups or roles.",
    "title": "2 IAM users should not have IAM policies attached",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_2",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks that none of your IAM users have policies attached. IAM users must inherit permissions from IAM groups or roles.\n\nIt does not check whether least privileged policies are applied to IAM roles and groups.\n\n## Remediation\n\nTo resolve this issue, do the following:\n\n1. Create an IAM group\n2. Assign the policy to the group\n3. Add the users to the group\n\nThe policy is applied to each user in the group.\n\n**To create an IAM group**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Groups** and then choose **Create New Group**.\n3. Enter a name for the group to create and then choose **Next Step**.\n4. Select each policy to assign to the group and then choose **Next Step**.\n5. The policies that you choose should include any policies currently attached directly to a user account. The next step to resolve a failed check is to add users to a group and then assign the policies to that group.\n6. Each user in the group gets assigned the policies assigned to the group.\n7. Confirm the details on the **Review** page and then choose **Create Group**.\n\n**To add users to an IAM group**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Groups**.\n3. Choose **Group Actions** and then choose **Add Users to Group**.\n4. Choose the users to add to the group and then choose **Add Users**.\n\n**To remove a policy attached directly to a user**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. Choose **Users**.\n3. For the user to detach a policy from, in the User name column, choose the name.\n4. For each policy listed under **Attached directly**, to remove the policy from the user, choose the X on the right side of the page and then choose **Remove**.\n5. Confirm that the user can still use AWS services as expected.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "IAM users have IAM policies attached"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_3",
    "description": "This control checks whether the active access keys are rotated within 90 days.",
    "title": "3 IAM users' access keys should be rotated every 90 days or less",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_3",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nAccess keys consist of an access key ID and secret access key, which are used to sign programmatic requests that you make to AWS. AWS users need their own access keys to make programmatic calls to AWS from the AWS Command Line Interface (AWS CLI), Tools for Windows PowerShell, the AWS SDKs, or direct HTTP calls using the APIs for individual AWS services. It is recommended that all access keys to be rotated within 90 days.\n\nRotating access keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used. Access keys should be rotated to ensure that data cannot be accessed with an old key which might have been lost, cracked, or stolen.\n\n## Remediation\n\n### From Console:\n\nPerform the following action to deactivate access keys:\n\n1. Sign into the AWS console as an **Administrator** and navigate to the [IAM Dashboard](https://console.aws.amazon.com/iam/home#/home).\n2. In the left navigation pane, choose Users.\n3. Click on the **User name** for which access key exists that have not been rotated in 90 days.\n4. Click on **Security credentials** tab.\n5. Click on the **Make inactive** to `deactivate` the key that have not been rotated in 90 days.\n6. Click **Create access key** and update programmatic call with new key pair.\n\n**Note**: Test your application to make sure that the new key pair is working.\n\n### From Command Line:\n\nWhile the first access key is still active, create a second access key, which is active by default. Run the following command:\n\n```bash\naws iam create-access-key\n```\n\nAt this point, the user has two active access keys.\n  - Update all applications and tools to use the new access key pair.\n  - Change the state of the first access key to `Inactive` using below command:\n ```bash\n aws iam update-access-key\n ```",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "IAM users' access keys are not being rotated every 90 days or less"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_4",
    "description": "This control checks whether the root user access key is present. The root account is the most privileged user in an AWS account. AWS access keys provide programmatic access to a given account.",
    "title": "4 IAM root user access key should not exist",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_4",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks whether user access keys exist for the root user.\n\n## Remediation\n\nTo delete access keys\n\n1. Log in to your account using the root user credentials.\n2. Choose the account name near the top-right corner of the page and then choose **My Security Credentials**.\n3. In the pop-up warning, choose **Continue to Security Credentials**.\n4. Choose `Access keys (access key ID and secret access key)`.\n5. To permanently delete the key, choose **Delete** and then choose **Yes**. You cannot recover deleted keys.\n6. If there is more than one root user access key, then repeat steps 4 and 5 for each key.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "IAM root user access key still exists"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_5",
    "description": "This control checks whether AWS multi-factor authentication (MFA) is enabled for all IAM users that use a console password.",
    "title": "5 MFA should be enabled for all IAM users that have a console password",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_5",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nMulti-factor Authentication (MFA) adds an extra layer of protection on top of a username and password. With MFA enabled, when a user signs in to an AWS console, they will be prompted for their username and password as well as for an authentication code from their virtual or physical MFA device. It is recommended that MFA to be enabled for all users that have a console password.\n\nEnabling MFA provides increased security for console access as it requires the authenticating principal to possess a device that creates a time-sensitive key and have knowledge of a credential.\n\n## Remediation\n\n### From Console\n\nPerform the following action to enabled virtual MFA for the intended user:\n\n1. Sign into the AWS console, and navigate to [IAM Console](https://console.aws.amazon.com/iam/home#/).\n2. In the left navigation pane, choose Users.\n3. In the user name list, choose the **name** of the intended user.\n4. Choose the **Security credentials** tab, and then choose **Manage** for `Assigned MFA Device`.\n5. In the Manage MFA device wizard, choose **virtual MFA device** and click on **continue**.\n6. IAM generates and displays configuration information for the virtual MFA device, including a QR code graphic.\n7. Open your virtual MFA application. (For a list of apps that you can use for hosting virtual MFA devices, see [Virtual MFA Applications](https://aws.amazon.com/iam/features/mfa/?audit=2019q1#Virtual_MFA_Applications). If the virtual MFA application supports multiple accounts (multiple virtual MFA devices), choose the option to create a new account (a new virtual MFA device).\n8. Determine whether the MFA app supports QR codes, and then do one of the following:\n    - Use the app to scan the QR code. For example, you might choose the camera icon or choose an option similar to Scan code, and then use the device's camera to scan the code.\n    - In the Manage MFA Device wizard, choose Show secret key for manual configuration, and then type the secret configuration key into your MFA application.\n9. Once you configure, the virtual MFA device starts generating MFA codes.\n10. Type two consecutive MFA codes, MFA code 1 and MFA code 2 fields. Then click **Assign MFA**. Now the virtual MFA is enabled for the AWS account.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "MFA is not enabled for all IAM users with a console password"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_6",
    "description": "This control checks whether your AWS account is enabled to use a hardware multi-factor authentication (MFA) device to sign in with root user credentials.",
    "title": "6 Hardware MFA should be enabled for the root user",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_6",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThe root user account is the most privileged user in an AWS account. Multi-factor Authentication (MFA) adds an extra layer of protection on top of a username and password. With MFA enabled, when a user signs in to an AWS console, they will be prompted for their username and password as well as for an authentication code from their MFA device.\n\nIt is recommended that the device which is used for virtual MFA is NOT a personal device, but rather a dedicated device (phone or tablet). That can be managed to be kept charged and secured. It reduces the risks of losing access to the MFA code.\n\nIAM *root user* account for us-gov cloud regions does not have console access. This control is not applicable for us-gov cloud regions.\n\nEnabling virtual MFA provides increased security for console access as it requires the authenticating principal to possess a device that creates a time-sensitive key and have knowledge of a credential.\n\n## Remediation\n\n### From Console\n\nPerform the following action to enabled virtual MFA for the root user account:\n\n1. Sign into the AWS console as a root user, and navigate to [Your Security Credentials](https://console.aws.amazon.com/iam/home#/security_credentials).\n2. Click on Multi-factor authentication (MFA) section and click **Activate MFA**.\n3. In the Manage MFA device wizard, choose **virtual MFA device** and click on **continue**.\n4. IAM generates and displays configuration information for the virtual MFA device, including a QR code graphic.\n5. Open your virtual MFA application. (For a list of apps that you can use for hosting virtual MFA devices, see [Virtual MFA Applications](https://aws.amazon.com/iam/features/mfa/?audit=2019q1#Virtual_MFA_Applications). If the virtual MFA application supports multiple accounts (multiple virtual MFA devices), choose the option to create a new account (a new virtual MFA device).\n6. Determine whether the MFA app supports QR codes, and then do one of the following:\n    - Use the app to scan the QR code. For example, you might choose the camera icon or choose an option similar to Scan code, and then use the device's camera to scan the code.\n    - In the Manage MFA Device wizard, choose Show secret key for manual configuration, and then type the secret configuration key into your MFA application.\n7. Once you configure, the virtual MFA device starts generating MFA codes.\n8. Type two consecutive MFA codes, MFA code 1 and MFA code 2 fields. Then click **Assign MFA**. Now the virtual MFA is enabled for the AWS account.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "Hardware MFA is not enabled for the root user"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_7",
    "description": "This control checks whether the account password policy for IAM users uses the recommended configurations.",
    "title": "7 Password policies for IAM users should have strong configurations",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_7",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nTo access the AWS Management Console, IAM users need passwords. As a best practice, Security Hub highly recommends that instead of creating IAM users, you use federation. Federation allows users to use their existing corporate credentials to log into the AWS Management Console. Use AWS Single Sign-On (AWS SSO) to create or federate the user, and then assume an IAM role into an account.\n\nTo learn more about identity providers and federation, see Identity providers and federation in the IAM User Guide. To learn more about AWS SSO, see the AWS Single Sign-On User Guide.\n\nIf you need to use IAM users, Security Hub recommends that you enforce the creation of strong user passwords. You can set a password policy on your AWS account to specify complexity requirements and mandatory rotation periods for passwords. When you create or change a password policy, most of the password policy settings are enforced the next time users change their passwords. Some of the settings are enforced immediately. To learn more, see Setting an account password policy for IAM users in the IAM User Guide.\n\n## Remediation\n\nTo remediate this issue, update your password policy to use the recommended configuration.\n\n1. Sign into the AWS console, and navigate to [IAM Console](https://console.aws.amazon.com/iam/home#/).\n3. Choose `Account settings`.\n4. Select `Requires at least one uppercase letter`.\n5. Select `Requires at least one lowercase letter`.\n6. Select `Requires at least one non-alphanumeric character`.\n7. Select `Requires at least one number`.\n8. For `Minimum password length`, enter `8`.\n9. Choose `Apply password policy`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "Password policies for IAM users do not have strong configurations"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_8",
    "description": "This control checks whether your IAM users have passwords or active access keys that have not been used for 90 days.",
    "title": "8 Unused IAM user credentials should be removed",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_8",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nAWS IAM users can access AWS resources using different types of credentials, such as passwords or access keys. It is recommended that all credentials that have been unused in 90 or greater days to be deactivated or removed.\n\nDisabling or removing unnecessary credentials will reduce the window of opportunity for credentials associated with a compromised or abandoned users to be used.\n\n## Remediation\n\n### From Console:\n\nPerform the following action to disable user console password:\n\n1. Sign into the AWS console and navigate to the [IAM Dashboard](https://console.aws.amazon.com/iam/home#/home).\n2. In the left navigation pane, choose Users.\n3. Select the **User name** whose `Console last sign-in` is greater than 90 days.\n4. Click on **Security credentials** tab.\n5. In section `Sign-in credentials`, `Console password` click **Manage**.\n6. Select `Disable`, click **Apply**\n\nPerform the following action to deactivate access keys:\n\n1. Sign into the AWS console as an **Administrator** and navigate to the [IAM Dashboard](https://console.aws.amazon.com/iam/home#/home).\n2. In the left navigation pane, choose Users.\n3. Click on the **User name** for which access key is over 90 days old.\n4. Click on **Security credentials** tab.\n5. Click on the **Make inactive** to `deactivate` the key that is over 90 days old and that have not been used.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "Unused IAM user credentials are not removed"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > IAM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "IAM"
    ],
    "category_hierarchy_short": "AWS - IAM",
    "control_id": "aws_compliance.control.foundational_security_iam_21",
    "description": "This control checks whether the IAM identity-based policies that you create have Allow statements that use the * wildcard to grant permissions for all actions on any service. The control fails if any policy statement includes 'Effect': 'Allow' with 'Action': 'Service:*'.",
    "title": "21 IAM customer managed policies that you create should not allow wildcard actions for services",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "iam_21",
      "plugin": "aws",
      "service": "AWS/IAM"
    },
    "documentation": "## Description\n\nThis control checks whether the IAM identity-based policies that you create have Allow statements that use the * wildcard to grant permissions for all actions on any service. The control fails if any policy statement includes \"Effect\": \"Allow\" with \"Action\": \"Service:*\".\n\nThis control only applies to customer managed IAM policies. It does not apply to IAM policies that are managed by AWS.\n\nWhen you assign permissions to AWS services, it is important to scope the allowed IAM actions in your IAM policies. You should restrict IAM actions to only those actions that are needed. This helps you to provision least privilege permissions. Overly permissive policies might lead to privilege escalation if the policies are attached to an IAM principal that might not require the permission.\n\nIn some cases, you might want to allow IAM actions that have a similar prefix, such as DescribeFlowLogs and DescribeAvailabilityZones. In these authorized cases, you can add a suffixed wildcard to the common prefix. For example, ec2:Describe*.\n\n## Remediation\n\n### From Console:\n\nPerform the following action to disable user console password:\n\n1. Sign into the AWS console and navigate to the [IAM Dashboard](https://console.aws.amazon.com/iam/home#/home).\n2. In the left navigation pane, choose Users.\n3. Select the **User name** whose `Console last sign-in` is greater than 90 days.\n4. Click on **Security credentials** tab.\n5. In section `Sign-in credentials`, `Console password` click **Manage**.\n6. Select `Disable`, click **Apply**\n\nPerform the following action to deactivate access keys:\n\n1. Sign into the AWS console as an **Administrator** and navigate to the [IAM Dashboard](https://console.aws.amazon.com/iam/home#/home).\n2. In the left navigation pane, choose Users.\n3. Click on the **User name** for which access key is over 90 days old.\n4. Click on **Security credentials** tab.\n5. Click on the **Make inactive** to `deactivate` the key that is over 90 days old and that have not been used.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_iam"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_iam",
    "executable": true,
    "problem_title": "IAM customer managed policies allow wildcard actions for services"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Kinesis",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Kinesis"
    ],
    "category_hierarchy_short": "AWS - Kinesis",
    "control_id": "aws_compliance.control.foundational_security_kinesis_1",
    "description": "This control checks if Kinesis Data Streams are encrypted at rest with server-side encryption. This control fails if a Kinesis stream is not encrypted at rest with server-side encryption.",
    "title": "1 Kinesis Data Streams should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "kinesis_1",
      "plugin": "aws",
      "service": "AWS/Kinesis"
    },
    "documentation": "## Description\n\nThis control checks if Kinesis Data Streams are encrypted at rest with server-side encryption. This control fails if a Kinesis stream is not encrypted at rest with server-side encryption.\n\nServer-side encryption is a feature in Amazon Kinesis Data Streams that automatically encrypts data before it's at rest by using an AWS KMS key. Data is encrypted before it's written to the Kinesis stream storage layer, and decrypted after it’s retrieved from storage. As a result, your data is encrypted at rest within the Amazon Kinesis Data Streams service.\n\n## Remediation\n\nFor information about enabling server-side encryption for Kinesis streams, see [How Do I Get Started with Server-Side Encryption?](https://docs.aws.amazon.com/streams/latest/dev/getting-started-with-sse.html) in the Amazon Kinesis Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_kinesis"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_kinesis",
    "executable": true,
    "problem_title": "Kinesis Data Streams are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > KMS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "KMS"
    ],
    "category_hierarchy_short": "AWS - KMS",
    "control_id": "aws_compliance.control.foundational_security_kms_1",
    "description": "Checks whether the default version of IAM customer managed policies allow principals to use the AWS KMS decryption actions on all resources. This control uses Zelkova, an automated reasoning engine, to validate and warn you about policies that may grant broad access to your secrets across AWS accounts. This control fails if the kms:Decrypt or kms:ReEncryptFrom actions are allowed on all KMS keys. The control evaluates both attached and unattached customer managed policies. It does not check inline policies or AWS managed policies.",
    "title": "1 IAM customer managed policies should not allow decryption actions on all KMS keys",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "kms_1",
      "plugin": "aws",
      "service": "AWS/KMS"
    },
    "documentation": "## Description\n\nChecks whether the default version of IAM customer managed policies allow principals to use the AWS KMS decryption actions on all resources. This control uses [Zelkova](http://aws.amazon.com/blogs/security/protect-sensitive-data-in-the-cloud-with-automated-reasoning-zelkova/), an automated reasoning engine, to validate and warn you about policies that may grant broad access to your secrets across AWS accounts.\n\nThis control fails if the `kms:Decrypt` or `kms:ReEncryptFrom` actions are allowed on all KMS keys. The control evaluates both attached and unattached customer managed policies. It does not check inline policies or AWS managed policies.\n\nWith AWS KMS, you control who can use your customer master keys (CMKs) and gain access to your encrypted data. IAM policies define which actions an identity (user, group, or role) can perform on which resources. Following security best practices, AWS recommends that you allow least privilege. In other words, you should grant to identities only the `kms:Decrypt` or `kms:ReEncryptFrom` permissions and only for the keys that are required to perform a task. Otherwise, the user might use keys that are not appropriate for your data.\n\nInstead of granting permissions for all keys, determine the minimum set of keys that users need to access encrypted data. Then design policies that allow users to use only those keys. For example, do not allow `kms:Decrypt` permission on all KMS keys. Instead, allow `kms:Decrypt` only on keys in a particular Region for your account. By adopting the principle of least privilege, you can reduce the risk of unintended disclosure of your data.\n\n## Remediation\n\nTo remediate this issue, you modify the IAM customer managed policies to restrict access to the keys.\n\n**To modify an IAM customer managed policy**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. In the IAM navigation pane, choose `Policies`.\n3. Choose the arrow next to the policy you want to modify.\n4. Choose `Edit policy`.\n5. Choose the `JSON` tab.\n6. Change the “Resource” value to the specific key or keys that you want to allow.\n7. After you modify the policy, choose `Review policy`.\n8. Choose `Save changes`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_kms"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_kms",
    "executable": true,
    "problem_title": "IAM customer managed policies allows decryption actions on all KMS keys"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > KMS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "KMS"
    ],
    "category_hierarchy_short": "AWS - KMS",
    "control_id": "aws_compliance.control.foundational_security_kms_2",
    "description": "Checks whether the inline policies that are embedded in your IAM identities (role, user, or group) allow the AWS KMS decryption actions on all KMS keys. This control uses Zelkova, an automated reasoning engine, to validate and warn you about policies that may grant broad access to your secrets across AWS accounts. This control fails if kms:Decrypt or kms:ReEncryptFrom actions are allowed on all KMS keys in an inline policy.",
    "title": "2 IAM principals should not have IAM inline policies that allow decryption actions on all KMS keys",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "kms_2",
      "plugin": "aws",
      "service": "AWS/KMS"
    },
    "documentation": "## Description\n\nChecks whether the inline policies that are embedded in your IAM identities (role, user, or group) allow the AWS KMS decryption actions on all KMS keys. This control uses Zelkova, an automated reasoning engine, to validate and warn you about policies that may grant broad access to your secrets across AWS accounts.\n\nThis control fails if `kms:Decrypt` or `kms:ReEncryptFrom` actions are allowed on all KMS keys in an inline policy.\n\nWith AWS KMS, you control who can use your customer master keys (CMKs) and gain access to your encrypted data. IAM policies define which actions an identity (user, group, or role) can perform on which resources. Following security best practices, AWS recommends that you allow least privilege. In other words, you should grant to identities only the permissions they need and only for keys that are required to perform a task. Otherwise, the user might use keys that are not appropriate for your data.\n\nInstead of granting permission for all keys, determine the minimum set of keys that users need to access encrypted data. Then design policies that allow the users to use only those keys. For example, do not allow `kms:Decrypt` permission on all KMS keys. Instead, allow them only on keys in a particular Region for your account. By adopting the principle of least privilege, you can reduce the risk of unintended disclosure of your data.\n\n\n## Remediation\n\nTo remediate this issue, you modify the inline policy to restrict access to the keys.\n\n**To modify an IAM inline policy**\n\n1. Open the [IAM console](https://console.aws.amazon.com/iam/).\n2. In the IAM navigation pane, choose `Users`, `Groups`, or `Roles`.\n3. Choose the name of the user, group or role for which to modify IAM inline policies.\n4. Choose the arrow next to the policy to modify.\n5. Choose `Edit policy`.\n6. Choose the `JSON` tab.\n7. Change the “Resource” value to the specific keys that you want to allow.\n8. After you modify the policy, choose `Review policy`.\n9. Choose `Save changes`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_kms"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_kms",
    "executable": true,
    "problem_title": "IAM principals have IAM inline policies that allow decryption actions on all KMS keys"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > KMS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "KMS"
    ],
    "category_hierarchy_short": "AWS - KMS",
    "control_id": "aws_compliance.control.foundational_security_kms_3",
    "description": "This control checks whether AWS KMS customer managed keys (CMK) are scheduled for deletion. The control fails if a CMK is scheduled for deletion. CMKs cannot be recovered once deleted. Data encrypted under a KMS CMK is also permanently unrecoverable if the CMK is deleted. If meaningful data has been encrypted under a CMK scheduled for deletion,consider decrypting the data or re-encrypting the data under a new CMK unless you are intentionally performing a cryptographic erasure.",
    "title": "3 AWS KMS keys should not be unintentionally deleted",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_deletion_protection",
      "foundational_security_item_id": "kms_3",
      "plugin": "aws",
      "service": "AWS/KMS"
    },
    "documentation": "## Description\n\nThis control checks whether AWS KMS customer managed keys (CMK) are scheduled for deletion. The control fails if a CMK is scheduled for deletion.\n\nCMKs cannot be recovered once deleted. Data encrypted under a KMS CMK is also permanently unrecoverable if the CMK is deleted. If meaningful data has been encrypted under a CMK scheduled for deletion, consider decrypting the data or re-encrypting the data under a new CMK unless you are intentionally performing a cryptographic erasure.\n\nWhen a CMK is scheduled for deletion, a mandatory waiting period is enforced to allow time to reverse the deletion, if it was scheduled in error. The default waiting period is 30 days, but it can be reduced to as short as 7 days when the KMS CMK is scheduled for deletion. During the waiting period, the scheduled deletion can be canceled and the KMS CMK will not be deleted.\n\n## Remediation\n\nFor detailed remediation instructions to cancel a scheduled KMS CMK deletion, see To cancel key deletion under [Scheduling and canceling key deletion](https://docs.aws.amazon.com/kms/latest/developerguide/deleting-keys.html#deleting-keys-scheduling-key-deletion).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_kms"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_kms",
    "executable": true,
    "problem_title": "AWS KMS keys are unintentionally being deleted"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Lambda",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Lambda"
    ],
    "category_hierarchy_short": "AWS - Lambda",
    "control_id": "aws_compliance.control.foundational_security_lambda_1",
    "description": "This control checks whether the Lambda function resource-based policy prohibits public access outside of your account. The Lambda function should not be publicly accessible, as this may allow unintended access to your code stored in the function.",
    "title": "1 Lambda function policies should prohibit public access",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "lambda_1",
      "plugin": "aws",
      "service": "AWS/Lambda"
    },
    "documentation": "## Description\n\nThis control checks whether the Lambda function resource-based policy prohibits public access.\n\nIt does not check for access to the Lambda function by internal principals, such as IAM roles. You should ensure that access to the Lambda function is restricted to authorized principals only by using least privilege Lambda resource-based policies.\n\nFor more information about using resource-based policies for AWS Lambda, see the [AWS Lambda Developer Guide](https://docs.aws.amazon.com/lambda/latest/dg/access-control-resource-based.html).\n\n## Remediation\n\nTo remediate this issue, you update the resource-based policy to change the publicly accessible Lambda function to a private Lambda function.\nYou can only update resource-based policies for Lambda resources within the scope of the AddPermission and AddLayerVersionPermission API actions.\nYou cannot author policies for your Lambda resources in JSON, or use conditions that don't map to parameters for those actions using the CLI or the SDK.\n\n**To use the AWS CLI to revoke function-use permission from an AWS service or another account**\n\n1. To get the ID of the statement from the output of GetPolicy, from the AWS CLI, run the following:\n\n```bash\naws lambda get-policy —function-name yourfunctionname\n```\nThis command returns the Lambda resource-based policy string associated with the publicly accessible Lambda function.\n\n2. From the policy statement returned by the get-policy command, copy the string value of the Sid field.\n\n3. From the AWS CLI, run\n\n```bash\naws lambda remove-permission --function-name yourfunctionname —statement-id youridvalue\n```\n\nTo use the Lambda console to restrict access to the Lambda function\n\n1. Open the [AWS Lambda console](https://console.aws.amazon.com/lambda/).\n2. Navigate to Functions and then select your publicly accessible Lambda function.\n3. Under **Designer**, choose the key icon at the top left. It has the tool-tip View permissions.\n4. Under Function policy, if the policy allows actions for the principal element `“*”` or `{“AWS”: “*”}`, it is publicly accessible.\n   - Consider adding the following IAM condition to scope access to your account only.\n\n    ```json\n        \"Condition\": {\n      \"StringEquals\": {\n        \"AWS:SourceAccount\": \"<account_id>\"\n        }\n      }\n    }\n    ```",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_lambda"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_lambda",
    "executable": true,
    "problem_title": "Lambda function policies allow public access"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Lambda",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Lambda"
    ],
    "category_hierarchy_short": "AWS - Lambda",
    "control_id": "aws_compliance.control.foundational_security_lambda_2",
    "description": "This control checks that the Lambda function settings for runtimes match the expected values set for the latest runtimes for each supported language. This control checks for the following runtimes: nodejs18.x, nodejs16.x, nodejs14.x, python3.10, python3.9, python3.8, python3.7, ruby3.2, ruby2.7, java17, java11, java8, java8.al2, go1.x, dotnet7, dotnet6",
    "title": "2 Lambda functions should use latest runtimes",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_development",
      "foundational_security_item_id": "lambda_2",
      "plugin": "aws",
      "service": "AWS/Lambda"
    },
    "documentation": "## Description\n\nThis control checks that the Lambda function settings for runtimes match the expected values set for the supported runtimes for each language. This control checks for the following runtimes: `nodejs18.x`, `nodejs16.x`, `nodejs14.x`, `python3.10`, `python3.9`, `python3.8`, `python3.7`, `ruby3.2`, `ruby2.7`, `java17`, `java11`, `java8`, `java8.al2`, `go1.x`, `dotnet7`, `dotnet6`\n\n[Lambda runtimes](https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html) are built around a combination of operating system, programming language, and software libraries that are subject to maintenance and security updates. When a runtime component is no longer supported for security updates, Lambda deprecates the runtime. Even though you cannot create functions that use the deprecated runtime, the function is still available to process invocation events. Make sure that your Lambda functions are current and do not use out-of-date runtime environments.\n\n## Remediation\n\nFor more information on supported runtimes and deprecation schedules, see the [Runtime support policy](https://docs.aws.amazon.com/lambda/latest/dg/runtime-support-policy.html) section of the AWS Lambda Developer Guide. When you migrate your runtimes to the latest version, follow the syntax and guidance from the publishers of the language.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_lambda"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_lambda",
    "executable": true,
    "problem_title": "Lambda functions are not using the latest runtimes"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Lambda",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Lambda"
    ],
    "category_hierarchy_short": "AWS - Lambda",
    "control_id": "aws_compliance.control.foundational_security_lambda_5",
    "description": "This control checks if Lambda has more than one availability zone associated. The rule fails if only one availability zone is associated with Lambda.",
    "title": "5 VPC Lambda functions should operate in more than one Availability Zone",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "lambda_5",
      "plugin": "aws",
      "service": "AWS/Lambda"
    },
    "documentation": "## Description\n\nThis control checks if Lambda has more than one availability zone associated. The rule fails if only one availability zone is associated with Lambda.\n\nDeploying resources across multiple Availability Zones is an AWS best practice to ensure high availability within your architecture. Availability is a core pillar in the confidentiality, integrity, and availability triad security model. All Lambda functions should have a multi-Availability Zone deployment to ensure that a single zone of failure does not cause a total disruption of operations.\n\n## Remediation\n\n**To deploy a Lambda function in multiple Availability Zones through console:**\n\n1. Open the [AWS Lambda console](https://console.aws.amazon.com/lambda/.)\n2. From the `Functions` page on the Lambda console choose a function.\n3. Choose `Configuration` and then choose VPC.\n4. Choose `Edit`.\n5. If the function was not originally connected to a VPC, select a VPC from the dropdown menu. If the function was not originally connected to a VPC, choose at least one security group to attach to the function.\n6. Choose `Save`.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_lambda"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_lambda",
    "executable": true,
    "problem_title": "VPC Lambda functions do not operate in more than one Availability Zone"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_1",
    "description": "This control checks whether a Neptune DB cluster is encrypted at rest. The control fails if a Neptune DB cluster isn't encrypted at rest.",
    "title": "1 Neptune DB clusters should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "neptune_1",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks whether a Neptune DB cluster is encrypted at rest. The control fails if a Neptune DB cluster isn't encrypted at rest.\n\nData at rest refers to any data that's stored in persistent, non-volatile storage for any duration. Encryption helps you protect the confidentiality of such data, reducing the risk that an unauthorized user can access it. Encrypting your Neptune DB clusters protects your data and metadata against unauthorized access. It also fulfills compliance requirements for data-at-rest encryption of production file systems.\n\n## Remediation\n\nYou can enable encryption at rest when you create a Neptune DB cluster. You can't change encryption settings after creating a cluster. For more information, see [Encrypting Neptune resources at rest](https://docs.aws.amazon.com/neptune/latest/userguide/encrypt.html) in the Neptune User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB clusters are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_2",
    "description": "This control checks whether a Neptune DB cluster publishes audit logs to Amazon CloudWatch Logs. The control fails if a Neptune DB cluster doesn't publish audit logs to CloudWatch Logs. EnableCloudWatchLogsExport should be set to Audit.",
    "title": "2 Neptune DB clusters should publish audit logs to CloudWatch Logs",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "neptune_2",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks whether a Neptune DB cluster publishes audit logs to Amazon CloudWatch Logs. The control fails if a Neptune DB cluster doesn't publish audit logs to CloudWatch Logs. `EnableCloudWatchLogsExport` should be set to Audit.\n\nAmazon Neptune and Amazon CloudWatch are integrated so that you can gather and analyze performance metrics. Neptune automatically sends metrics to CloudWatch and also supports CloudWatch Alarms. Audit logs are highly customizable. When you audit a database, each operation on the data can be monitored and logged to an audit trail, including information about which database cluster is accessed and how. We recommend sending these logs to CloudWatch to help you monitor your Neptune DB clusters.\n\n## Remediation\n\nTo publish Neptune audit logs to CloudWatch Logs, see [Publishing Neptune logs to Amazon CloudWatch Logs](https://docs.aws.amazon.com/neptune/latest/userguide/cloudwatch-logs.html) in the Neptune User Guide. In the Log exports section, choose Audit.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB clusters do not publish audit logs to CloudWatch Logs"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_3",
    "description": "This control checks whether a Neptune manual DB cluster snapshot is public. The control fails if a Neptune manual DB cluster snapshot is public.",
    "title": "3 Neptune DB cluster snapshots should not be public",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_not_publicly_accessible",
      "foundational_security_item_id": "neptune_3",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks whether a Neptune manual DB cluster snapshot is public. The control fails if a Neptune manual DB cluster snapshot is public.\n\nA Neptune DB cluster manual snapshot should not be public unless intended. If you share an unencrypted manual snapshot as public, the snapshot is available to all AWS accounts. Public snapshots may result in unintended data exposure.\n\n## Remediation\n\nTo remove public access for Neptune manual DB cluster snapshots, see [Sharing a DB cluster snapshot](https://docs.aws.amazon.com/neptune/latest/userguide/backup-restore-share-snapshot.html) in the Neptune User Guide.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB cluster snapshots are publicly accessible"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_4",
    "description": "This control checks if a Neptune DB cluster has deletion protection enabled. The control fails if a Neptune DB cluster doesn't have deletion protection enabled.",
    "title": "4 Neptune DB clusters should have deletion protection enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_deletion_protection",
      "foundational_security_item_id": "neptune_4",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks if a Neptune DB cluster has deletion protection enabled. The control fails if a Neptune DB cluster doesn't have deletion protection enabled.\n\nEnabling cluster deletion protection offers an additional layer of protection against accidental database deletion or deletion by an unauthorized user. A Neptune DB cluster can't be deleted while deletion protection is enabled. You must first disable deletion protection before a delete request can succeed.\n\n## Remediation\n\nTo enable deletion protection for an existing Neptune DB cluster, see [Modifying the DB cluster by using the console, CLI, and API](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.Modifying.html#Aurora.Modifying.Settings) in the Amazon Aurora User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB clusters do not have deletion protection enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_5",
    "description": "This control checks whether a Neptune DB cluster has automated backups enabled, and a backup retention period greater than or equal to 7 days. The control fails if backups aren't enabled for the Neptune DB cluster, or if the retention period is less than 7 days.",
    "title": "5 Neptune DB clusters should have automated backups enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "neptune_5",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks whether a Neptune DB cluster has automated backups enabled, and a backup retention period greater than or equal to 7 days. The control fails if backups aren't enabled for the Neptune DB cluster, or if the retention period is less than 7 days.\n\nBackups help you recover more quickly from a security incident and strengthen the resilience of your systems. By automating backups for your Neptune DB clusters, you'll be able to restore your systems to a point in time and minimize downtime and data loss.\n\n## Remediation\n\nTo enable automated backups and set a retention period for your Neptune DB clusters, see [Enabling automated backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.Enabling) in the Amazon RDS User Guide. For Backup retention period, choose a value greater than or equal to 7.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB clusters do not have automated backups enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_6",
    "description": "This control checks whether a Neptune DB cluster snapshot is encrypted at rest. The control fails if a Neptune DB cluster isn't encrypted at rest.",
    "title": "6 Neptune DB cluster snapshots should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "neptune_6",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks whether a Neptune DB cluster snapshot is encrypted at rest. The control fails if a Neptune DB cluster isn't encrypted at rest.\n\nData at rest refers to any data that's stored in persistent, non-volatile storage for any duration. Encryption helps you protect the confidentiality of such data, reducing the risk that an unauthorized user gets access to it. Data in Neptune DB clusters snapshots should be encrypted at rest for an added layer of security.\n\n## Remediation\n\nYou can't encrypt an existing Neptune DB cluster snapshot. Instead, you must restore the snapshot to a new DB cluster and enable encryption on the cluster. You can create an encrypted snapshot from the encrypted cluster. For instructions, see [Restoring from a DB cluster snapshot](https://docs.aws.amazon.com/neptune/latest/userguide/backup-restore-restore-snapshot.html) and [Creating a DB cluster snapshot in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/backup-restore-create-snapshot.html) in the Neptune User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB cluster snapshots are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_7",
    "description": "This control checks if a Neptune DB cluster has IAM database authentication enabled. The control fails if IAM database authentication isn't enabled for a Neptune DB cluster.",
    "title": "7 Neptune DB clusters should have IAM database authentication enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "passwordless_authentication",
      "foundational_security_item_id": "neptune_7",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks if a Neptune DB cluster has IAM database authentication enabled. The control fails if IAM database authentication isn't enabled for a Neptune DB cluster.\n\nIAM database authentication for Amazon Neptune database clusters removes the need to store user credentials within the database configuration because authentication is managed externally using IAM. When IAM database authentication is enabled, each request needs to be signed using AWS Signature Version 4.\n\n## Remediation\n\nBy default, IAM database authentication is disabled when you create a Neptune DB cluster. To enable it, see [Enabling IAM database authentication in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/iam-auth-enable.html) in the Neptune User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB clusters do not have IAM database authentication enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Neptune",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Neptune"
    ],
    "category_hierarchy_short": "AWS - Neptune",
    "control_id": "aws_compliance.control.foundational_security_neptune_8",
    "description": "This control checks if a Neptune DB cluster is configured to copy all tags to snapshots when the snapshots are created. The control fails if a Neptune DB cluster isn't configured to copy tags to snapshots.",
    "title": "8 Neptune DB clusters should be configured to copy tags to snapshots",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "tagging",
      "foundational_security_item_id": "neptune_8",
      "plugin": "aws",
      "service": "AWS/Neptune"
    },
    "documentation": "## Description\n\nThis control checks if a Neptune DB cluster is configured to copy all tags to snapshots when the snapshots are created. The control fails if a Neptune DB cluster isn't configured to copy tags to snapshots.\n\nIdentification and inventory of your IT assets is a crucial aspect of governance and security. You should tag snapshots in the same way as their parent Amazon RDS database clusters. Copying tags ensures that the metadata for the DB snapshots matches that of the parent database clusters, and that access policies for the DB snapshot also match those of the parent DB instance.\n\n## Remediation\n\nTo copy tags to snapshots for Neptune DB clusters, see [Copying tags in Neptune](https://docs.aws.amazon.com/neptune/latest/userguide/tagging.html#tagging-overview) in the Neptune User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_neptune"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_neptune",
    "executable": true,
    "problem_title": "Neptune DB clusters are not configured to copy tags to snapshots"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Network Firewall",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Network Firewall"
    ],
    "category_hierarchy_short": "AWS - Network Firewall",
    "control_id": "aws_compliance.control.foundational_security_networkfirewall_3",
    "description": "This control checks whether a Network Firewall policy has any stateful or stateless rule groups associated. The control fails if stateless or stateful rule groups are not assigned.",
    "title": "3 Network Firewall policies should have at least one rule group associated",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "networkfirewall_3",
      "plugin": "aws",
      "service": "AWS/NetworkFirewall"
    },
    "documentation": "## Description\n\nThis control checks whether a Network Firewall policy has any stateful or stateless rule groups associated. The control fails if stateless or stateful rule groups are not assigned.\n\nA firewall policy defines how your firewall monitors and handles traffic in Amazon Virtual Private Cloud (Amazon VPC). Configuration of stateless and stateful rule groups helps to filter packets and traffic flows, and defines default traffic handling\n\n## Remediation\n\n**To update firewall policy and add a rule group through console:**\n\n1. Sign in to the AWS Management Console and open the Amazon VPC console at https://console.aws.amazon.com/vpc/.\n2. In the navigation pane, under Network Firewall, choose Firewall policies.\n3. In the Firewall policies page, select the name of the firewall policy you want to update.\n4. In the firewall policy's page, you can change the rule groups.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_networkfirewall"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_networkfirewall",
    "executable": true,
    "problem_title": "Network Firewall policies do not have at least one rule group associated"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Network Firewall",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Network Firewall"
    ],
    "category_hierarchy_short": "AWS - Network Firewall",
    "control_id": "aws_compliance.control.foundational_security_networkfirewall_4",
    "description": "A firewall policy defines how your firewall monitors and handles traffic in Amazon VPC. You configure stateless and stateful rule groups to filter packets and traffic flows. Defaulting to Pass can allow unintended traffic.",
    "title": "4 The default stateless action for Network Firewall policies should be drop or forward for full packets",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "networkfirewall_4",
      "plugin": "aws",
      "service": "AWS/NetworkFirewall"
    },
    "documentation": "## Description\n\nThis control checks whether the default stateless action for full packets for a Network Firewall policy is drop or forward. The control passes if Drop or Forward is selected, and fails if Pass is selected.\n\nA firewall policy defines how your firewall monitors and handles traffic in Amazon VPC. You configure stateless and stateful rule groups to filter packets and traffic flows. Defaulting to Pass can allow unintended traffic.\n\n## Remediation\n\n**To update firewall policy and update actions through console:**\n\n1. Sign in to the AWS Management Console and open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, under Network Firewall, choose Firewall policies.\n3. Select the name of the firewall policy that you want to edit. This takes you to the firewall policy’s details page.\n4. In Stateless Default Actions, choose Edit. Then choose Drop or Forward to stateful rule groups as the Default actions for full packets.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_networkfirewall"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_networkfirewall",
    "executable": true,
    "problem_title": "The default stateless action for Network Firewall policies is not set to drop or forward for full packets"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Network Firewall",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Network Firewall"
    ],
    "category_hierarchy_short": "AWS - Network Firewall",
    "control_id": "aws_compliance.control.foundational_security_networkfirewall_5",
    "description": "This control checks whether the default stateless action for fragmented packets for a Network Firewall policy is drop or forward. The control passes if Drop or Forward is selected, and fails if Pass is selected.",
    "title": "5 The default stateless action for Network Firewall policies should be drop or forward for fragmented packets",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "networkfirewall_5",
      "plugin": "aws",
      "service": "AWS/NetworkFirewall"
    },
    "documentation": "## Description\n\nThis control checks whether the default stateless action for fragmented packets for a Network Firewall policy is drop or forward. The control passes if Drop or Forward is selected, and fails if Pass is selected.\n\nA firewall policy defines how your firewall monitors and handles traffic in Amazon VPC. You configure stateless and stateful rule groups to filter packets and traffic flows. Defaulting to Pass can allow unintended traffic.\n\n## Remediation\n\n**To update firewall policy and update actions through console:**\n\n1. Sign in to the AWS Management Console and open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, under Network Firewall, choose Firewall policies.\n3. Select the name of the firewall policy that you want to edit. This takes you to the firewall policy’s details page.\n4. In Stateless Default Actions, choose Edit. Then choose Drop or Forward to stateful rule groups as the Default actions for fragmented packets.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_networkfirewall"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_networkfirewall",
    "executable": true,
    "problem_title": "The default stateless action for Network Firewall policies is not set to drop or forward for fragmented packets"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Network Firewall",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Network Firewall"
    ],
    "category_hierarchy_short": "AWS - Network Firewall",
    "control_id": "aws_compliance.control.foundational_security_networkfirewall_6",
    "description": "A rule group contains rules that define how your firewall processes traffic in your VPC. An empty stateless rule group when present in a firewall policy might give the impression that the rule group will process traffic. However, when the stateless rule group is empty, it does not process traffic.",
    "title": "6 Stateless network firewall rule group should not be empty",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "networkfirewall_1",
      "plugin": "aws",
      "service": "AWS/NetworkFirewall"
    },
    "documentation": "## Description\n\nThis control checks if a Stateless Network Firewall Rule Group contains rules. The rule will fail if there are no rules in a Stateless Network Firewall Rule Group.\n\nA rule group contains rules that define how your firewall processes traffic in your VPC. An empty stateless rule group when present in a firewall policy might give the impression that the rule group will process traffic. However, when the stateless rule group is empty, it does not process traffic.\n\n## Remediation\n\n**To update rule group and add a rule through console:**\n\n1. Sign in to the AWS Management Console and open the [Amazon VPC console](https://console.aws.amazon.com/vpc/).\n2. In the navigation pane, under `Network Firewall`, choose `Network Firewall rule groups`.\n3. In the `Network Firewall rule groups` page, choose the name of the firewall rule group that you want to edit. This takes you to the firewall rule groups details page.\n4. For stateless rule groups, choose `Edit Rules` to add rules to the rule group.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_networkfirewall"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_networkfirewall",
    "executable": true,
    "problem_title": "Stateless network firewall rule group is empty"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_1",
    "description": "This control checks whether OpenSearch domains have encryption-at-rest configuration enabled. The check fails if encryption at rest is not enabled.",
    "title": "1 OpenSearch domains should have encryption at rest enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "opensearch_1",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether OpenSearch domains have encryption-at-rest configuration enabled. The check fails if encryption at rest is not enabled.\n\nFor an added layer of security for sensitive data, you should configure your OpenSearch Service domain to be encrypted at rest. When you configure encryption of data at rest, AWS KMS stores and manages your encryption keys. To perform the encryption, AWS KMS uses the Advanced Encryption Standard algorithm with 256-bit keys (AES-256).\n\n## Remediation\n\nBy default, domains do not encrypt data at rest, and you cannot configure existing domains to use the feature. To enable the feature, you must create another domain and migrate your data.\n\nFor information about creating domains, see [Creating and managing Amazon OpenSearch Service domains](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#es-createdomains) in the Amazon OpenSearch Service Developer Guide.\n\nEncryption of data at rest requires Amazon OpenSearch 1.0 or later. For more information about encrypting data at rest for Amazon OpenSearch, see [Encryption of data at rest for Amazon OpenSearch Service](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/encryption-at-rest.html) in the Amazon OpenSearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domains do not have encryption at rest enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_2",
    "description": "This control checks whether OpenSearch domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access.",
    "title": "2 OpenSearch domains should be in a VPC",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_within_vpc",
      "foundational_security_item_id": "opensearch_2",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether OpenSearch domains are in a VPC. It does not evaluate the VPC subnet routing configuration to determine public access.\n\nYou should ensure that OpenSearch domains are not attached to public subnets. See [Resource-based policies](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ac.html#ac-types-resource) in the Amazon OpenSearch Service Developer Guide. You should also ensure that your VPC is configured according to the recommended best practices. See [Security best practices for your VPC](https://docs.aws.amazon.com/vpc/latest/userguide/vpc-security-best-practices.html) in the Amazon VPC User Guide.\n\nOpenSearch domains deployed within a VPC can communicate with VPC resources over the private AWS network, without the need to traverse the public internet. This configuration increases the security posture by limiting access to the data in transit. VPCs provide a number of network controls to secure access to OpenSearch domains, including network ACL and security groups. Security Hub recommends that you migrate public OpenSearch domains to VPCs to take advantage of these controls.\n\n## Remediation\n\nIf you create a domain with a public endpoint, you cannot later place it within a VPC. Instead, you must create a new domain and migrate your data. The reverse is also true. If you create a domain within a VPC, it cannot have a public endpoint.\n\nInstead, you must either [create another domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#es-createdomains) or disable this control.\n\nSee [Launching your Amazon OpenSearch Service domains within a VPC](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/vpc.html) in the Amazon OpenSearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domains are not in a VPC"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_3",
    "description": "This control checks whether OpenSearch domains have node-to-node encryption enabled. This control fails if node-to-node encryption is disabled on the domain.",
    "title": "3 OpenSearch domains should encrypt data sent between nodes",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "opensearch_3",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether OpenSearch domains have node-to-node encryption enabled. This control fails if node-to-node encryption is disabled on the domain.\n\nHTTPS (TLS) can be used to help prevent potential attackers from eavesdropping on or manipulating network traffic using person-in-the-middle or similar attacks. Only encrypted connections over HTTPS (TLS) should be allowed. Enabling node-to-node encryption for OpenSearch domains ensures that intra-cluster communications are encrypted in transit.\n\nThere can be a performance penalty associated with this configuration. You should be aware of and test the performance trade-off before enabling this option.\n\n## Remediation\n\nNode-to-node encryption can only be enabled on a new domain. To remediate this finding, create a new domain with `Node-to-node encryption` enabled and migrate your data to the new domain. Follow the instructions to [create a new domain](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createupdatedomains.html#es-createdomains) in the Amazon OpenSearch Service Developer Guide and ensure that you select the `Node-to-node encryption` option when creating the new domain. Then follow [Using a snapshot to migrate data](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/version-migration.html#snapshot-based-migration) to migrate your data to the new domain.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domains do not encrypt data sent between nodes"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_4",
    "description": "This control checks whether OpenSearch domains are configured to send error logs to CloudWatch Logs. This control fails if error logging to CloudWatch is not enabled for a domain.",
    "title": "4 OpenSearch domain error logging to CloudWatch Logs should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "opensearch_4",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether OpenSearch domains are configured to send error logs to CloudWatch Logs. This control fails if error logging to CloudWatch is not enabled for a domain.\n\nYou should enable error logs for OpenSearch domains and send those logs to CloudWatch Logs for retention and response. Domain error logs can assist with security and access audits, and can help to diagnose availability issues.\n\n## Remediation\n\nFor information on how to enable log publishing, see [Enabling log publishing (console)](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/createdomain-configure-slow-logs.html#createdomain-configure-slow-logs-console) in the Amazon OpenSearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domain error logging to CloudWatch Logs is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_5",
    "description": "This control checks whether OpenSearch domains have audit logging enabled. This control fails if an OpenSearch domain does not have audit logging enabled.",
    "title": "5 OpenSearch domains should have audit logging enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "opensearch_5",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis rule is `NON_COMPLIANT` if the CloudWatch Logs log group of the OpenSearch domain is not specified in this parameter list.\n\nThis control checks whether OpenSearch domains have audit logging enabled. This control fails if an OpenSearch domain does not have audit logging enabled.\n\nAudit logs are highly customizable. They allow you to track user activity on your OpenSearch clusters, including authentication successes and failures, requests to OpenSearch, index changes, and incoming search queries.\n\n## Remediation\n\nFor detailed instructions on enabling audit logs, see [Enabling audit logs](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/audit-logs.html#audit-log-enabling) in the Amazon OpenSearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domains do not have audit logging enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_6",
    "description": "This control checks whether OpenSearch domains are configured with at least three data nodes and zoneAwarenessEnabled is true. This control fails for an OpenSearch domain if instanceCount is less than 3 or zoneAwarenessEnabled is false.",
    "title": "6 OpenSearch domains should have at least three data nodes",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "opensearch_6",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether OpenSearch domains are configured with at least three data nodes and `zoneAwarenessEnabled` is `true`. This control fails for an OpenSearch domain if `instanceCount` is less than 3 or `zoneAwarenessEnabled` is `false`.\n\nAn OpenSearch domain requires at least three data nodes for high availability and fault-tolerance. Deploying an OpenSearch domain with at least three data nodes ensures cluster operations if a node fails.\n\n## Remediation\n\n**To modify the number of data nodes in an OpenSearch domain**\n\n1. Sign in to the AWS console and open the [Amazon OpenSearch Service](https://console.aws.amazon.com/es/).\n2. Under `My domains`, choose the name of the domain to edit, and choose `Edit`.\n3. Under `Data nodes` set `Number of nodes` to a number greater than 3. If you are deploying to three Availability Zone, set the number to a multiple of three to ensure equal distribution across Availability Zones.\n4. Choose `Submit`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domain has fewer than three data nodes"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_7",
    "description": "This control checks whether OpenSearch domains have fine-grained access control enabled. The control fails if the fine-grained access control is not enabled. Fine-grained access control requires advanced-security-optionsin the OpenSearch parameter update-domain-config to be enabled.",
    "title": "7 OpenSearch domains should have fine-grained access control enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "opensearch_7",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether OpenSearch domains have fine-grained access control enabled. The control fails if the fine-grained access control is not enabled. Fine-grained access control requires advanced-security-optionsin the OpenSearch parameter update-domain-config to be enabled.\n\nFine-grained access control offers additional ways of controlling access to your data on Amazon OpenSearch Service.\n\n## Remediation\n\nTo enable fine-grained access control on an existing domain \n\n1. Select your domain and choose Actions and Edit security configuration.\n2. Select Enable fine-grained access control.\n3. Choose how to create the master user:\n  - If you want to use IAM for user management, choose Set IAM ARN as master user and specify the ARN for an IAM role.\n  - If you want to use the internal user database, choose Create master user and specify a user name and password.\n4. (Optional) Select Enable migration period for open/IP-based access policy. This setting enables a 30-day transition period during which your existing users can continue to access the domain without disruptions, and existing open and IP-based access policies will continue to work with your domain. During this migration period, we recommend that administrators create the necessary roles and map them to users for the domain. If you use identity-based policies instead of an open or IP-based access policy, you can disable this setting.\nYou also need to update your clients to work with fine-grained access control during the migration period. For example, if you map IAM users with fine-grained access control, you must update your clients to start signing requests with AWS Signature Version 4. If you configure HTTP basic authentication with fine-grained access control, you must update your clients to provide appropriate basic authentication credentials in requests.\nDuring the migration period, users who access the OpenSearch Dashboards endpoint for the domain will land directly on the Discover page rather than the login page. Administrators and master users can choose Login to log in with admin credentials and configure role mappings.\n5. Choose Save changes.\n\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "OpenSearch domains do not have fine-grained access control enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Opensearch",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Opensearch"
    ],
    "category_hierarchy_short": "AWS - Opensearch",
    "control_id": "aws_compliance.control.foundational_security_opensearch_8",
    "description": "This control checks whether connections to OpenSearch domains are required to use TLS 1.2. The check fails if the OpenSearch domain TLSSecurityPolicy is not Policy-Min-TLS-1-2-2019-07.",
    "title": "8 Connections to OpenSearch domains should be encrypted using TLS 1.2",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "opensearch_8",
      "plugin": "aws",
      "service": "AWS/OpenSearch"
    },
    "documentation": "## Description\n\nThis control checks whether connections to OpenSearch domains are required to use TLS 1.2. The check fails if the OpenSearch domain `TLSSecurityPolicy` is not `Policy-Min-TLS-1-2-2019-07`.\n\nHTTPS (TLS) can be used to help prevent potential attackers from using person-in-the-middle or similar attacks to eavesdrop on or manipulate network traffic. Only encrypted connections over HTTPS (TLS) should be allowed. Encrypting data in transit can affect performance. You should test your application with this feature to understand the performance profile and the impact of TLS. TLS 1.2 provides several security enhancements over previous versions of TLS.\n\n## Remediation\n\nTo enable TLS encryption, use the [UpdateDomainConfig](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configuration-api.html#configuration-api-actions-updatedomainconfig) API operation to configure the [DomainEndpointOptions](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/configuration-api.html#configuration-api-datatypes-domainendpointoptions) in order to set the `TLSSecurityPolicy`. For more information, see [Node-to-node encryption](https://docs.aws.amazon.com/opensearch-service/latest/developerguide/ntn.html) in the Amazon OpenSearch Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_opensearch"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_opensearch",
    "executable": true,
    "problem_title": "Connections to OpenSearch domains are not encrypted using TLS 1.2"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_1",
    "description": "This control checks whether Amazon RDS snapshots are public. This control is intended for RDS instances. It can also return findings for snapshots of Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters, even though they are not evaluated for public accessibility. If these findings are not useful, you can suppress them.",
    "title": "1 RDS snapshots should be private",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "rds_1",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon RDS snapshots are public.\n\nThis control is intended for RDS instances. It can also return findings for snapshots of Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters, even though they are not evaluated for public accessibility. If these findings are not useful, you can suppress them.\n\nRDS snapshots are used to back up the data on your RDS instances at a specific point in time. They can be used to restore previous states of RDS instances.\n\nAn RDS snapshot must not be public unless intended. If you share an unencrypted manual snapshot as public, this makes the snapshot available to all AWS accounts. This may result in unintended data exposure of your RDS instance.\n\nNote that if the configuration is changed to allow public access, the AWS Config rule may not be able to detect the change for up to 12 hours. Until the AWS Config rule detects the change, the check passes even though the configuration violates the rule.\n\nTo learn more about sharing a DB snapshot, see [Sharing a DB snapshot](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ShareSnapshot.html).\n\n## Remediation\n\nTo remediate this issue, update your RDS snapshots to remove public access.\n\n**To remove public access for RDS snapshots**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Navigate to `Snapshots` and then choose the public snapshot you want to modify.\n3. From `Actions`, choose `Share Snapshots`.\n4. From `DB snapshot visibility`, choose `Private`.\n5. Under `DB snapshot visibility`, choose `all`.\n6. Choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS snapshots are not private"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_2",
    "description": "This control checks whether Amazon RDS instances are publicly accessible by evaluating the PubliclyAccessible field in the instance configuration item. Neptune DB instances and Amazon DocumentDB clusters do not have the PubliclyAccessible flag and cannot be evaluated. However, this control can still generate findings for these resources. You can suppress these findings. ",
    "title": "2 RDS DB instances should prohibit public access, determined by the PubliclyAccessible configuration",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "rds_2",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether RDS instances are publicly accessible by evaluating the publiclyAccessible field in the instance configuration item. The value of publiclyAccessible indicates whether the DB instance is publicly accessible. When the DB instance is publicly accessible, it is an Internet-facing instance with a publicly resolvable DNS name, which resolves to a public IP address. When the DB instance isn't publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address.\n\nThe control does not check VPC subnet routing settings or the Security Group rules. You should also ensure VPC subnet routing does not allow public access, and that the security group inbound rule associated with the RDS instance does not allow unrestricted access (0.0.0.0/0). You should also ensure that access to your RDS instance configuration is limited to only authorized users by restricting users' IAM permissions to modify RDS instances settings and resources.\n\n## Remediation\n\nTo remove public access for Amazon RDS Databases\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Navigate to Databases and then choose your public database.\n3. Choose **Modify**.\n4. Scroll to **Network & Security**.\n5. For `Public accessibility`, choose **No**.\n6. Scroll to the bottom and then choose **Continue**.\n7. Under Scheduling of modifications, choose **Apply immediately**.\n8. Choose Modify DB Instance.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB instances allow public access"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_3",
    "description": "This control checks whether storage encryption is enabled for your Amazon RDS DB instances. This control is intended for RDS DB instances. However, it can also generate findings for Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters. If these findings are not useful, then you can suppress them.",
    "title": "3 RDS DB instances should have encryption at rest enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "rds_3",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether storage encryption is enabled for your Amazon RDS DB instances.\n\nThis control is intended for RDS DB instances. However, it can also generate findings for Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters. If these findings are not useful, then you can suppress them.\n\nFor an added layer of security for your sensitive data in RDS DB instances, you should configure your RDS DB instances to be encrypted at rest. To encrypt your RDS DB instances and snapshots at rest, enable the encryption option for your RDS DB instances. Data that is encrypted at rest includes the underlying storage for DB instances, its automated backups, read replicas, and snapshots.\n\nRDS encrypted DB instances use the open standard AES-256 encryption algorithm to encrypt your data on the server that hosts your RDS DB instances. After your data is encrypted, Amazon RDS handles authentication of access and decryption of your data transparently with a minimal impact on performance. You do not need to modify your database client applications to use encryption.\n\n## Remediation\n\nAmazon RDS encryption is currently available for all database engines and storage types. Amazon RDS encryption is available for most DB instance classes. To learn about DB instance classes that do not support Amazon RDS encryption, see [Encrypting Amazon RDS resources](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.Encryption.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB instances do not have encryption at rest enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_4",
    "description": "This control checks whether RDS DB snapshots are encrypted. This control is intended for RDS DB instances. However, it can also generate findings for snapshots of Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters. If these findings are not useful, then you can suppress them.",
    "title": "4 RDS cluster snapshots and database snapshots should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "rds_4",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether RDS DB snapshots are encrypted.\n\nThis control is intended for RDS DB instances. However, it can also generate findings for snapshots of Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters. If these findings are not useful, then you can suppress them.\n\nEncrypting data at rest reduces the risk that an unauthenticated user gets access to data that is stored on disk. Data in RDS snapshots should be encrypted at rest for an added layer of security.\n\n## Remediation\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Snapshots`.\n3. Find the snapshot to encrypt under `Manual` or `System`.\n4. Select the check box next to the snapshot to encrypt.\n5. Choose `Actions`, then choose `Copy Snapshot`.\n6. Under `New DB Snapshot Identifier`, type a name for the new snapshot.\n7. Under `Encryption`, select `Enable Encryption`.\n8. Choose the KMS key to use to encrypt the snapshot.\n9. Choose `Copy Snapshot`.\n10. After the new snapshot is created, delete the original snapshot.\n11. For `Backup Retention Period`, choose a positive nonzero value. For example, 30 days.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS cluster snapshots and database snapshots are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_5",
    "description": "This control checks whether high availability is enabled for your RDS DB instances. RDS DB instances should be configured for multiple Availability Zones (AZs). This ensures the availability of the data stored. Multi-AZ deployments allow for automated failover if there is an issue with Availability Zone availability and during regular RDS maintenance.",
    "title": "5 RDS DB instances should be configured with multiple Availability Zones",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "rds_5",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether high availability is enabled for your RDS DB instances.\n\nRDS DB instances should be configured for multiple Availability Zones (AZs). This ensures the availability of the data stored. Multi-AZ deployments allow for automated failover if there is an issue with Availability Zone availability and during regular RDS maintenance.\n\n## Remediation\n\nTo remediate this issue, update your DB instances to enable multiple Availability Zones.\n\n**To enable multiple Availability Zones for a DB instance**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Databases`, and then choose the DB instance that you want to modify.\n3. Choose `Modify`. The `Modify DB Instance` page appears.\n4. Under `Instance Specifications`, set `Multi-AZ deployment` to `Yes`.\n5. Choose `Continue` and then check the summary of modifications.\n6. (Optional) Choose `Apply immediately` to apply the changes immediately. Choosing this option can cause an outage in some cases. For more information, see Using the [Apply Immediately setting](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html#USER_ModifyInstance.ApplyImmediately).\n7. On the confirmation page, review your changes. If they are correct, choose `Modify DB Instance` to save your changes.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB instances are not configured with multiple Availability Zones"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_6",
    "description": "This control checks whether enhanced monitoring is enabled for your RDS DB instances. In Amazon RDS, Enhanced Monitoring enables a more rapid response to performance changes in underlying infrastructure. These performance changes could result in a lack of availability of the data. Enhanced Monitoring provides real-time metrics of the operating system that your RDS DB instance runs on. An agent is installed on the instance. The agent can obtain metrics more accurately than is possible from the hypervisor layer.",
    "title": "6 Enhanced monitoring should be configured for RDS DB instances and clusters",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "detection_services",
      "foundational_security_item_id": "rds_6",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether enhanced monitoring is enabled for your RDS DB instances.\n\nIn Amazon RDS, Enhanced Monitoring enables a more rapid response to performance changes in underlying infrastructure. These performance changes could result in a lack of availability of the data. Enhanced Monitoring provides real-time metrics of the operating system that your RDS DB instance runs on. An agent is installed on the instance. The agent can obtain metrics more accurately than is possible from the hypervisor layer.\n\nEnhanced Monitoring metrics are useful when you want to see how different processes or threads on a DB instance use the CPU.\n\n## Remediation\n\nFor detailed instructions on how to enable Enhanced Monitoring for your DB instance, see[ Setting up for and enabling Enhanced Monitoring](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Monitoring.OS.html#USER_Monitoring.OS.Enabling).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "Enhanced monitoring is not configured for RDS DB instances and clusters"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_7",
    "description": "This control checks whether RDS clusters have deletion protection enabled. This control is intended for RDS DB instances. However, it can also generate findings for Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters. If these findings are not useful,then you can suppress them.",
    "title": "7 RDS clusters should have deletion protection enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_deletion_protection",
      "foundational_security_item_id": "rds_7",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether RDS clusters have deletion protection enabled.\n\nThis control is intended for RDS DB instances. However, it can also generate findings for Aurora DB instances, Neptune DB instances, and Amazon DocumentDB clusters. If these findings are not useful, then you can suppress them.\n\nEnabling cluster deletion protection is an additional layer of protection against accidental database deletion or deletion by an unauthorized entity.\n\nWhen deletion protection is enabled, an RDS cluster cannot be deleted. Before a deletion request can succeed, deletion protection must be disabled.\n\n## Remediation\n\nTo remediate this issue, update your RDS DB cluster to enable delete protection.\n\n**To enable deletion protection for an RDS DB cluster**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Databases`, then choose the DB cluster that you want to modify.\n3. Choose `Modify`.\n4. Under `Deletion protection`, choose `Enable deletion protection`.\n5. Choose `Continue`.\n6. Under `Scheduling of modifications`, choose when to apply modifications. The options are `Apply during the next scheduled maintenance window` or `Apply immediately`.\n7. Choose `Modify Cluster`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS clusters do not have deletion protection enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_8",
    "description": "This control checks whether your RDS DB instances that use one of the listed database engines have deletion protection enabled. DatabaseEngines: mariadb,mysql,oracle-ee,oracle-se2,oracle-se1,oracle-se,postgres,sqlserver-ee,sqlserver-se,sqlserver-ex,sqlserver-web.",
    "title": "8 RDS DB instances should have deletion protection enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_deletion_protection",
      "foundational_security_item_id": "rds_8",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether your RDS DB instances that use one of the listed database engines have deletion protection enabled.\n\nEnabling instance deletion protection is an additional layer of protection against accidental database deletion or deletion by an unauthorized entity.\n\nWhile deletion protection is enabled, an RDS DB instance cannot be deleted. Before a deletion request can succeed, deletion protection must be disabled.\n\n## Remediation\n\nTo remediate this issue, update your RDS DB instance to enable deletion protection.\n\n**To enable deletion protection for an RDS DB instance**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Databases`, then choose the DB instance that you want to modify.\n3. Choose `Modify`.\n4. Under `Deletion protection`, choose `Enable deletion protection`.\n5. Choose `Continue`.\n6. Under `Scheduling of modifications`, choose when to apply modifications. The options are `Apply during the next scheduled maintenance window` or `Apply immediately`.\n7. Choose `Modify DB Instance`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB instances do not have deletion protection enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_9",
    "description": "This control checks whether the logs of Amazon RDS are enabled and sent to CloudWatch Logs. RDS databases should have relevant logs enabled. Database logging provides detailed records of requests made to RDS. Database logs can assist with security and access audits and can help to diagnose availability issues.",
    "title": "9 Database logging should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "rds_9",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether the following logs of Amazon RDS are enabled and sent to CloudWatch Logs:\n\n- Oracle: (Alert, Audit, Trace, Listener)\n- PostgreSQL: (Postgresql, Upgrade)\n- MySQL: (Audit, Error, General, SlowQuery)\n- MariaDB: (Audit, Error, General, SlowQuery)\n- SQL Server: (Error, Agent)\n- Aurora: (Audit, Error, General, SlowQuery)\n- Aurora-MySQL: (Audit, Error, General, SlowQuery)\n- Aurora-PostgreSQL: (Postgresql, Upgrade).\n\nRDS databases should have relevant logs enabled. Database logging provides detailed records of requests made to RDS. Database logs can assist with security and access audits and can help to diagnose availability issues.\n\n## Remediation\n\nLogging options are contained in the DB parameter group associated with the RDS DB cluster or instance. To enable logging when the default parameter group for the database engine is used, you must create a new DB parameter group that has the required parameter values. You must then associate the customer DB parameter group with the DB cluster or instance.\n\nTo enable and publish MariaDB, MySQL, or PostgreSQL logs to CloudWatch Logs from the AWS Management Console, set the following parameters in a custom DB Parameter Group:\n\n**MariaDB**\n\n  - `general_log` = **1**\n  - `slow_query_log` = **1**\n  - `log_output` = **FILE**\n\n**MySQL**\n\n  - `general_log` = **1**\n  - `slow_query_log` = **1**\n  - `log_output` = **FILE**\n\n**PostgreSQL**\n\n  - `log_statement` = **all**\n  - `log_min_duration_statement` = *minimum query duration (ms) to log*\n\n**To create a custom DB parameter group**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Parameter groups`.\n3. Choose `Create parameter group`. The Create parameter group window appears.\n4. In the Parameter group family list, choose a DB parameter group family.\n5. In the `Type` list, choose `DB Parameter Group`.\n6. In `Group name`, enter the name of the new DB parameter group.\n7. In `Description`, enter a description for the new DB parameter group.\n8. Choose `Create`.\n\n**To create a new option group for MariaDB logging by using the console**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Option groups`.\n3. Choose `Create group`.\n4. In the `Create option group` window, do the following:\n   - For Name, type a name for the option group that is unique within your AWS account. The name can contain only letters, digits, and hyphens.\n   - For Description, type a brief description of the option group. The description is used for display purposes.\n   - For Engine, choose the DB engine that you want.\n   - For Major engine version, choose the major version of the DB engine that you want.\n5. To continue, choose `Create`.\n6. Choose the name of the option group you just created.\n7. Choose `Add option`.\n8. Choose `MARIADB_AUDIT_PLUGIN` from the `Option name` list.\n9. Set `SERVER_AUDIT_EVENTS` to `CONNECT`, `QUERY`, `TABLE`, `QUERY_DDL`, `QUERY_DML`, `QUERY_DCL`.\n10. Choose `Add option`.\n\n**To publish SQL Server DB, Oracle DB, or PostgreSQL logs to CloudWatch Logs from the AWS Management Console**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Databases`.\n3. Choose the DB instance that you want to modify.\n4. Choose `Modify`.\n5. Under `Log exports`, choose all of the log files to start publishing to CloudWatch Logs.\n6. `Log exports` is available only for database engine versions that support publishing to CloudWatch Logs.\n7. Choose `Continue`. Then on the summary page, choose `Modify DB Instance`.\n\n**To apply a new DB parameter group or DB options group to an RDS DB instance**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Databases`.\n3. Choose the DB instance that you want to modify.\n4. Choose `Modify`. The `Modify DB Instanc`e page appears.\n5. Under `Database options`, change the DB parameter group and DB options group as needed.\n6. When you finish you changes, choose `Continue`. Check the summary of modifications.\n7. (Optional) Choose `Apply immediately` to apply the changes immediately. Choosing this option can cause an outage in some cases. For more information, see Using the [Apply Immediately setting](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html#USER_ModifyInstance.ApplyImmediately).\n8. Choose `Modify DB Instance` to save your changes.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "Database logging is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_10",
    "description": "This control checks whether an RDS DB instance has IAM database authentication enabled IAM database authentication allows authentication to database instances with an authentication token instead of a password. Network traffic to and from the database is encrypted using SSL.",
    "title": "10 IAM authentication should be configured for RDS instances",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "passwordless_aauthentication",
      "foundational_security_item_id": "rds_10",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an RDS DB instance has IAM database authentication enabled.\n\nIAM database authentication allows authentication to database instances with an authentication token instead of a password. Network traffic to and from the database is encrypted using SSL.\n\n## Remediation\n\nTo remediate this issue, update your DB instance to enable IAM authentication.\n\n**To enable IAM authentication for an existing DB instance**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Choose `Databases`.\n3. Select the DB instance to modify.\n4. Choose `Modify`.\n5. Under `Database options`, choose `Enable IAM DB authentication`.\n6. Choose `Continue`.\n7. Under `Scheduling of modifications`, choose when to apply modifications. The options are `Apply during the next scheduled maintenance window` or `Apply immediately`.\n8. For clusters, choose `Modify DB Instance.`",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS instances are not configured with IAM authentication"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_11",
    "description": "This control checks whether Amazon Relational Database Service instances have automated backups enabled and the backup retention period is greater than or equal to seven days. The control fails if backups are not enabled, and if the retention period is less than 7 days.",
    "title": "11 RDS instances should have automatic backups enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "rds_11",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Relational Database Service instances have automated backups enabled and the backup retention period is greater than or equal to seven days. The control fails if backups are not enabled, and if the retention period is less than 7 days.\n\nBackups help you more quickly recover from a security incident and strengthens the resilience of your systems. Amazon RDS provides an easy way to configure daily full instance volume snapshots. For more details on Amazon RDS automated backups, see [Working with Backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html) in the Amazon RDS User Guide.\n\n## Remediation\n\nTo enable automated backups on an RDS DB instance, see [Enabling automated backups](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_WorkingWithAutomatedBackups.html#USER_WorkingWithAutomatedBackups.Enabling) in the Amazon RDS User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS instances do not have automatic backups enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_12",
    "description": "This control checks whether an RDS DB cluster has IAM database authentication enabled. IAM database authentication allows for password-free authentication to database instances. The authentication uses an authentication token. Network traffic to and from the database is encrypted using SSL.",
    "title": "12 IAM authentication should be configured for RDS clusters",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "passwordless_aauthentication",
      "foundational_security_item_id": "rds_12",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an RDS DB cluster has IAM database authentication enabled.\n\nIAM database authentication allows for password-free authentication to database instances. The authentication uses an authentication token. Network traffic to and from the database is encrypted using SSL.\n\n## Remediation\n\nYou can enable IAM authentication for a DB cluster from the Amazon RDS console.\n\n**To enable IAM authentication for an existing DB cluster**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Choose `Databases`.\n3. Choose the DB cluster to modify.\n4. Choose `Modify`.\n5. Under `Database options`, select `Enable IAM DB authentication`.\n6. Choose `Continue`.\n7. Under `Scheduling of modifications`, choose when to apply modifications: `Apply during the next scheduled maintenance window` or `Apply immediately`.\n8. Choose `Modify cluster`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS clusters are not configured with IAM authentication"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_13",
    "description": "This control checks whether automatic minor version upgrades are enabled for the RDS database instance. Enabling automatic minor version upgrades ensures that the latest minor version updates to the relational database management system (RDBMS) are installed. These upgrades might include security patches and bug fixes. Keeping up to date with patch installation is an important step in securing systems.",
    "title": "13 RDS automatic minor version upgrades should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_and_patch_management",
      "foundational_security_item_id": "rds_13",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether automatic minor version upgrades are enabled for the RDS database instance.\n\nEnabling automatic minor version upgrades ensures that the latest minor version updates to the relational database management system (RDBMS) are installed. These upgrades might include security patches and bug fixes. Keeping up to date with patch installation is an important step in securing systems.\n\n## Remediation\n\nYou can enable minor version upgrades for a DB instance from the Amazon RDS console.\n\n**To enable automatic minor version upgrades for an existing DB instance**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Choose `Databases`.\n3. Choose the DB instance to modify.\n4. Choose `Modify`.\n5. Under `Maintenance`, select `Yes` for `Auto minor version upgrade`.\n6. Choose `Continue`.\n7. Under `Scheduling of modifications`, choose when to apply modifications: `Apply during the next scheduled maintenance window` or `Apply immediately`.\n8. Choose `Modify DB Instance`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS automatic minor version upgrades are not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_14",
    "description": "This control checks whether Amazon Aurora clusters have backtracking enabled. Backups help you to recover more quickly from a security incident. They also strengthens the resilience of your systems. Aurora backtracking reduces the time to recover a database to a point in time. It does not require a database restore to so.",
    "title": "14 Amazon Aurora clusters should have backtracking enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "rds_14",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Aurora clusters have backtracking enabled.\n\nBackups help you to recover more quickly from a security incident. They also strengthens the resilience of your systems. Aurora backtracking reduces the time to recover a database to a point in time. It does not require a database restore to do so.\n\n## Remediation\n\nFor detailed instructions to enable Aurora backtracking, see [Configuring backtrack with the console when modifying a DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/AuroraMySQL.Managing.Backtrack.html#AuroraMySQL.Managing.Backtrack.Configuring).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "Amazon Aurora clusters do not have backtracking enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_15",
    "description": "This control checks whether high availability is enabled for your RDS DB clusters. RDS DB clusters should be configured for multiple Availability Zones to ensure availability of the data that is stored.",
    "title": "15 RDS DB clusters should be configured for multiple Availability Zones",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "high_availability",
      "foundational_security_item_id": "rds_15",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether high availability is enabled for your RDS DB clusters.\n\nRDS DB clusters should be configured for multiple Availability Zones to ensure availability of the data that is stored. Deployment to multiple Availability Zones allows for automated failover in the event of an Availability Zone availability issue and during regular RDS maintenance events.\n\n## Remediation\n\nTo remediate this control, configure your DB cluster for multiple Availability Zones.\n\n**To enable multi-AZ for a DB cluster**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. In the navigation pane, choose `Databases`, and then choose the DB instance to modify.\n3. Choose `Modify`. The `Modify DB Instance` page appears.\n4. Under `Instance Specifications`, set `Multi-AZ deployment` to `Yes`.\n5. Choose Continue and check the summary of modifications.\n6. Choose `Continue`.\n7. (Optional) Choose `Apply immediately` to apply the changes immediately. Choosing this option can cause an outage in some cases. For more information, see [Using the Apply Immediately setting](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Overview.DBInstance.Modifying.html#USER_ModifyInstance.ApplyImmediately)\n\nOn the confirmation page, review your changes. If they are correct, choose `Modify DB Instance`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB clusters are not configured for multiple Availability Zones"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_16",
    "description": "This control checks whether RDS DB clusters are configured to copy all tags to snapshots when the snapshots are created.",
    "title": "16 RDS DB clusters should be configured to copy tags to snapshots",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "rds_16",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether RDS DB clusters are configured to copy all tags to snapshots when the snapshots are created.\n\nIdentification and inventory of your IT assets is a crucial aspect of governance and security. You need to have visibility of all your RDS DB clusters so that you can assess their security posture and take action on potential areas of weakness. Snapshots should be tagged in the same way as their parent RDS database clusters. Enabling this setting ensures that snapshots inherit the tags of their parent database clusters.\n\n## Remediation\n\n**To enable automatic tag copying to snapshots for a DB cluster**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/).\n2. Choose `Databases`.\n3. Select the DB cluster to modify.\n4. Choose `Modify`.\n5. Under `Backup`, select `Copy tags to snapshots`.\n6. Choose `Continue`.\n7. Under `Scheduling of modifications`, choose when to apply modifications. You can choose either      `Apply during the next scheduled maintenance window` or `Apply immediately`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB clusters do not configure copying of tags to snapshots"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_17",
    "description": "This control checks whether RDS DB instances are configured to copy all tags to snapshots when the snapshots are created.",
    "title": "17 RDS DB instances should be configured to copy tags to snapshots",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "rds_17",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB instances are not configured to copy tags to snapshots"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_18",
    "description": "This control checks whether an RDS instance is deployed in a VPC (EC2-VPC).",
    "title": "18 RDS instances should be deployed in a VPC",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_within_vpc",
      "foundational_security_item_id": "rds_18",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an RDS instance is deployed in a VPC (EC2-VPC).\n\nVPCs provide a number of network controls to secure access to RDS resources. These controls include VPC Endpoints, network ACLs, and security groups. To take advantage of these controls, we recommend that you move EC2-Classic RDS instances to EC2-VPC.\n\n## Remediation\n\nFor detailed instructions on how to move RDS instances to VPC, see [Updating the VPC for a DB instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_VPC.html#USER_VPC.VPC2VPC) in the Amazon RDS User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS instances are not deployed in a VPC"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_19",
    "description": "This control checks whether an Amazon RDS event subscription exists that has notifications enabled for the following source type, event category key-value pairs.",
    "title": "19 An RDS event notifications subscription should be configured for critical cluster events",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "application_monitoring",
      "foundational_security_item_id": "rds_19",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon RDS event subscription exists that has notifications enabled for the following source type, event category key-value pairs.\n\n```\nDBCluster: [\"maintenance\",\"failure\"]\n```\n\nRDS event notifications uses Amazon SNS to make you aware of changes in the availability or configuration of your RDS resources. These notifications allow for rapid response. For additional information about RDS event notifications, see [Using Amazon RDS event notification](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the Amazon RDS User Guide.\n\n## Remediation\n\n**To subscribe to RDS cluster event notifications**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/.)\n\n2. In the navigation pane, choose `Event subscriptions`.\n\n3. Under `Event subscriptions`, choose `Create event subscription`.\n\n4. In the `Create event subscription` dialog, do the following:\n\n    a. For `Name`, enter a name for the event notification subscription.\n\n    b. For `Send notifications to`, choose an existing Amazon SNS ARN for an SNS topic. To use a new topic, choose `create topic` to enter the name of a topic and a list of recipients.\n\n    c. For `Source type`, choose `Clusters`.\n\n    d. Under `Instances to include`, select `All clusters`.\n\n    e. Under `Event categories to include`, select `Specific event categories`. The control also passes if you select `All event categories`.\n\n    f. Select `maintenance` and `failure`.\n\n    g. Choose `Create`.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS event notifications subscription is not configured for critical cluster events"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_20",
    "description": "This control checks whether an Amazon RDS event subscription exists with notifications enabled for the following source type, event category key-value pairs.",
    "title": "20 An RDS event notifications subscription should be configured for critical database instance events",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "application_monitoring",
      "foundational_security_item_id": "rds_20",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon RDS event subscription exists with notifications enabled for the following source type, event category key-value pairs.\n\n```\nDBInstance: [\"maintenance\",\"configuration change\",\"failure\"]\n```\n\nRDS event notifications use Amazon SNS to make you aware of changes in the availability or configuration of your RDS resources. These notifications allow for rapid response. For additional information about RDS event notifications, see [Using Amazon RDS event notification](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the Amazon RDS User Guide.\n\n## Remediation\n\n**To subscribe to RDS instance event notifications**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/.)\n\n2. In the navigation pane, choose `Event subscriptions`.\n\n3. Under `Event subscriptions`, choose `Create event subscription`.\n\n4. In the `Create event subscription` dialog, do the following:\n\n    a. For `Name`, enter a name for the event notification subscription.\n\n    b. For `Send notifications to`, choose an existing Amazon SNS ARN for an SNS topic. To use a new topic, choose `create topic` to enter the name of a topic and a list of recipients.\n\n    c. For `Source type`, choose `Instances`.\n\n    d. Under `Instances to include`, select `All instances`.\n\n    e. Under `Event categories to include`, select `Specific event categories`. The control also passes if you select `All event categories`.\n\n    f. Select `maintenance`, `configuration change`, and `failure`.\n\n    g. Choose `Create`.\n    ",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "An RDS event notifications subscription is not configured for critical database instance events"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_21",
    "description": "This control checks whether an Amazon RDS event subscription exists with notifications enabled for the following source type, event category key-value pairs.",
    "title": "21 An RDS event notifications subscription should be configured for critical database parameter group events",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "application_monitoring",
      "foundational_security_item_id": "rds_21",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon RDS event subscription exists with notifications enabled for the following source type, event category key-value pairs.\n\n```\nDBParameterGroup: [\"configuration change\"]\n```\n\nRDS event notifications use Amazon SNS to make you aware of changes in the availability or configuration of your RDS resources. These notifications allow for rapid response. For additional information about RDS event notifications, see Using [Using Amazon RDS event notification](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the Amazon RDS User Guide.\n\n## Remediation\n\n**To subscribe to RDS database parameter group event notifications**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/.)\n\n2. In the navigation pane, choose `Event subscriptions`.\n\n3. Under `Event subscriptions`, choose `Create event subscription`.\n\n4. In the `Create event subscription` dialog, do the following:\n\n    a. For `Name`, enter a name for the event notification subscription.\n\n    b. For `Send notifications to`, choose an existing Amazon SNS ARN for an SNS topic. To use a new topic, choose `create topic` to enter the name of a topic and a list of recipients.\n\n    c. For `Source type`, choose `Parameter groups`.\n\n    d. Under `Instances to include`, select `All parameter groups`.\n\n    e. Under `Event categories to include`, select `Specific event categories`. The control also passes if you select `All event categories`.\n\n    f. Select `configuration change`.\n\n    g. Choose `Create`.\n    ",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "An RDS event notifications subscription is not configured for critical database parameter group events"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_22",
    "description": "This control checks whether an Amazon RDS event subscription exists with notifications enabled for the following source type, event category key-value pairs.",
    "title": "22 An RDS event notifications subscription should be configured for critical database security group events",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "application_monitoring",
      "foundational_security_item_id": "rds_22",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon RDS event subscription exists with notifications enabled for the following source type, event category key-value pairs.\n\n```\nDBSecurityGroup: [\"configuration change\",\"failure\"]\n```\n\nRDS event notifications use Amazon SNS to make you aware of changes in the availability or configuration of your RDS resources. These notifications allow for a rapid response. For additional information about RDS event notifications, see [Using Amazon RDS event notification](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_Events.html) in the Amazon RDS User Guide.\n\n## Remediation\n\n**To subscribe to RDS database parameter group event notifications**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/.)\n\n2. In the navigation pane, choose `Event subscriptions`.\n\n3. Under `Event subscriptions`, choose `Create event subscription`.\n\n4. In the `Create event subscription` dialog, do the following:\n\n    a. For `Name`, enter a name for the event notification subscription.\n\n    b. For `Send notifications to`, choose an existing Amazon SNS ARN for an SNS topic. To use a new topic, choose `create topic` to enter the name of a topic and a list of recipients.\n\n    c. For `Source type`, choose `Security groups`.\n\n    d. Under `Instances to include`, select `All security groups`.\n\n    e. Under `Event categories to include`, select `Specific event categories`. The control also passes if you select `All event categories`.\n\n    f. Select `configuration change` and `failure`.\n\n    g. Choose `Create`.\n    ",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "An RDS event notifications subscription is not configured for critical database security group events"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_23",
    "description": "This control checks whether the RDS cluster or instance uses a port other than the default port of the database engine.",
    "title": "23 RDS databases and clusters should not use a database engine default port",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "rds_23",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether the RDS cluster or instance uses a port other than the default port of the database engine.\n\nIf you use a known port to deploy an RDS cluster or instance, an attacker can guess information about the cluster or instance. The attacker can use this information in conjunction with other information to connect to an RDS cluster or instance or gain additional information about your application.\n\nWhen you change the port, you must also update the existing connection strings that were used to connect to the old port. You should also check the security group of the DB instance to ensure that it includes an ingress rule that allows connectivity on the new port.\n\n## Remediation\n\n**To modify the default port of an existing DB instance**\n\n1. Open the [Amazon RDS console](https://console.aws.amazon.com/rds/.)\n\n2. Choose `Databases`.\n\n3. Select the DB instance to modify\n\n4. Choose `Modify`.\n\n5. Under `Database options`, change `Database port` to a non-default value.\n\n6. Choose `Continue`.\n\n7. Under `Scheduling of modifications`, choose when to apply modifications. You can choose either `Apply during the next scheduled maintenance window` or `Apply immediately`.\n\n8. For clusters, choose `Modify cluster`. For instances, choose `Modify DB Instance`.\n",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS databases and clusters are using the database engine default port"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_24",
    "description": "This control checks whether an Amazon RDS database cluster has changed the admin username from its default value. This rule will fail if the admin username is set to the default value.",
    "title": "24 RDS database clusters should use a custom administrator username",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "rds_24",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon RDS database cluster has changed the admin username from its default value. This rule will fail if the admin username is set to the default value.\n\nWhen creating an Amazon RDS database, you should change the default admin username to a unique value. Default usernames are public knowledge and should be changed during RDS database creation. Changing the default usernames reduces the risk of unintended access.\n\n## Remediation\n\nFor changing the admin username associated with the Amazon RDS database cluster, [create a new RDS database cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Aurora.CreateInstance.html) and change the default admin username while creating the database.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS database clusters are not using a custom administrator username"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_25",
    "description": "This control checks whether you've changed the administrative username for Amazon Relational Database Service (Amazon RDS) database instances from the default value. The control fails if the administrative username is set to the default value.",
    "title": "25 RDS database instances should use a custom administrator username",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "rds_25",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks whether you've changed the administrative username for Amazon Relational Database Service (Amazon RDS) database instances from the default value. The control fails if the administrative username is set to the default value.\n\nDefault administrative usernames on Amazon RDS databases are public knowledge. When creating an Amazon RDS database, you should change the default administrative username to a unique value to reduce the risk of unintended access.\n\n## Remediation\n\nTo change the administrative username associated with an RDS database instance, first [create a new RDS database instance](https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_CreateDBInstance.html). Change the default administrative username while creating the database.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS database instances are not using a custom administrator username"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > RDS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "RDS"
    ],
    "category_hierarchy_short": "AWS - RDS",
    "control_id": "aws_compliance.control.foundational_security_rds_27",
    "description": "This control checks if an RDS DB cluster is encrypted at rest. The control fails if an RDS DB cluster isn't encrypted at rest.",
    "title": "27 RDS DB clusters should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "rds_27",
      "plugin": "aws",
      "service": "AWS/RDS"
    },
    "documentation": "## Description\n\nThis control checks if an RDS DB cluster is encrypted at rest. The control fails if an RDS DB cluster isn't encrypted at rest.\n\nData at rest refers to any data that's stored in persistent, non-volatile storage for any duration. Encryption helps you protect the confidentiality of such data, reducing the risk that an unauthorized user can access it. Encrypting your RDS DB clusters protects your data and metadata against unauthorized access. It also fulfills compliance requirements for data-at-rest encryption of production file systems.\n\n## Remediation\n\nYou can enable encryption at rest when you create an RDS DB cluster. You can't change encryption settings after creating a cluster. For more information, see [Encrypting an Amazon Aurora DB cluster](https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/Overview.Encryption.html#Overview.Encryption.Enabling) in the Amazon Aurora User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_rds"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_rds",
    "executable": true,
    "problem_title": "RDS DB clusters are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_1",
    "description": "This control checks whether Amazon Redshift clusters are publicly accessible. It evaluates the PubliclyAccessible field in the cluster configuration item. The PubliclyAccessible attribute of the Amazon Redshift cluster configuration indicates whether the cluster is publicly accessible. When the cluster is configured with PubliclyAccessible set to true, it is an Internet-facing instance that has a publicly resolvable DNS name, which resolves to a public IP address. When the cluster is not publicly accessible, it is an internal instance with a DNS name that resolves to a private IP address. Unless you intend for your cluster to be publicly accessible, the cluster should not be configured with PubliclyAccessible set to true.",
    "title": "1 Amazon Redshift clusters should prohibit public access",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_not_publicly_accessible",
      "foundational_security_item_id": "redshift_1",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Redshift clusters are publicly accessible by evaluating the publiclyAccessible field in the cluster configuration item.\n\n## Remediation\n\n1. Open the [Amazon Redshift console](https://console.aws.amazon.com/redshift/).\n2. On the navigation pane, choose **Clusters** and then select your public Amazon Redshift cluster.\n3. From the Cluster drop-down menu, choose **Modify cluster**.\n4. In `Publicly accessible`, choose **No**.\n5. Choose **Modify**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Amazon Redshift clusters allow public access"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_2",
    "description": "This control checks whether connections to Amazon Redshift clusters are required to use encryption in transit. The check fails if the Amazon Redshift cluster parameter require_SSL is not set to 1. TLS can be used to help prevent potential attackers from using person-in-the-middle or similar attacks to eavesdrop on or manipulate network traffic. Only encrypted connections over TLS should be allowed. Encrypting data in transit can affect performance. You should test your application with this feature to understand the performance profile and the impact of TLS.",
    "title": "2 Connections to Amazon Redshift clusters should be encrypted in transit",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_in_transit",
      "foundational_security_item_id": "redshift_2",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether connections to Amazon Redshift clusters are required to use encryption in transit. The check fails if the Amazon Redshift cluster parameter `require_SSL` is not set to 1.\n\nTLS can be used to help prevent potential attackers from using person-in-the-middle or similar attacks to eavesdrop on or manipulate network traffic. Only encrypted connections over TLS should be allowed. Encrypting data in transit can affect performance. You should test your application with this feature to understand the performance profile and the impact of TLS.\n\n## Remediation\n\nTo remediate this issue, update the parameter group to require encryption.\n\n**To modify a parameter group**\n\n1. Open the [Amazon Redshift console](https://console.aws.amazon.com/redshift/).\n2. In the navigation menu, choose `Config`, then choose `Workload management` to display the `Workload management` page.\n3. Choose the parameter group that you want to modify.\n4. Choose `Parameters`.\n5. Choose `Edit parameters` then set require_ssl to 1.\n6. Enter your changes and then choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Connections to Amazon Redshift clusters are not encrypted in transit"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_3",
    "description": "This control checks whether Amazon Redshift clusters have automated snapshots enabled. It also checks whether the snapshot retention period is greater than or equal to seven.",
    "title": "3 Amazon Redshift clusters should have automatic snapshots enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "backups_enabled",
      "foundational_security_item_id": "redshift_3",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon Redshift clusters have automated snapshots enabled. It also checks whether the snapshot retention period is greater than or equal to seven.\n\nBackups help you to recover more quickly from a security incident. They strengthen the resilience of your systems. Amazon Redshift takes periodic snapshots by default. This control checks whether automatic snapshots are enabled and retained for at least seven days. \n\n## Remediation\n\nTo remediate this issue, update the snapshot retention period to at least 7.\n\n**To modify the snapshot retention period**\n\n1. Open the [Amazon Redshift console](https://console.aws.amazon.com/redshift/).\n2. In the navigation menu, choose `Clusters`, then choose the name of the cluster to modify.\n3. Choose `Edit`.\n4. Under `Backup`, set `Snapshot retention` to a value of 7 or greater.\n5. Choose `Modify Cluster`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Amazon Redshift clusters do not have automatic snapshots enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_4",
    "description": "This control checks whether an Amazon Redshift cluster has audit logging enabled.",
    "title": "4 Amazon Redshift clusters should have audit logging enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "redshift_4",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon Redshift cluster has audit logging enabled.\n\nAmazon Redshift audit logging provides additional information about connections and user activities in your cluster. This data can be stored and secured in Amazon S3 and can be helpful in security audits and investigations.\n\n## Remediation\n\nTo enable cluster audit logging.\n\n**To modify the snapshot retention period**\n\n1. Open the [Amazon Redshift console](https://console.aws.amazon.com/redshift/).\n2. In the navigation menu, choose `Clusters`, then choose the name of the cluster to modify.\n3. Choose `Maintenance and monitoring`.\n4. Under `Audit logging`, choose `Edit`.\n5. Set `Enable audit logging` to `yes`, then enter the log destination bucket details.\n6. Choose `Confirm`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Amazon Redshift clusters do not have audit logging enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_6",
    "description": "This control checks whether automatic major version upgrades are enabled for the Amazon Redshift cluster.",
    "title": "6 Amazon Redshift should have automatic upgrades to major versions enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "vulnerability_and_patch_management",
      "foundational_security_item_id": "redshift_6",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether automatic major version upgrades are enabled for the Amazon Redshift cluster.\n\nEnabling automatic major version upgrades ensures that the latest major version updates to Amazon Redshift clusters are installed during the maintenance window. These updates might include security patches and bug fixes. Keeping up to date with patch installation is an important step in securing systems.\n\n## Remediation\n\nTo remediate this issue from the AWS CLI, use the Amazon Redshift modify-cluster command to set the `--allow-version-upgrade attribute`.\n\nFrom the AWS CLI, run\n\n```bash\naws redshift modify-cluster --cluster-identifier clustername --allow-version-upgrade\n```\n\nWhere `clustername` is the name of your Amazon Redshift cluster.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Amazon Redshift does not have automatic upgrades to major versions enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_7",
    "description": "This control checks whether an Amazon Redshift cluster has EnhancedVpcRouting enabled.",
    "title": "7 Amazon Redshift clusters should use enhanced VPC routing",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "api_private_access",
      "foundational_security_item_id": "redshift_7",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon Redshift cluster has EnhancedVpcRouting enabled.\n\nEnhanced VPC routing forces all COPY and UNLOAD traffic between the cluster and data repositories to go through your VPC. You can then use VPC features such as security groups and network access control lists to secure network traffic. You can also use VPC Flow Logs to monitor network traffic.\n\n## Remediation\n\nFor detailed remediation instructions, see [Enabling enhanced VPC routing](https://docs.aws.amazon.com/redshift/latest/mgmt/enhanced-vpc-enabling-cluster.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Amazon Redshift clusters are not using enhanced VPC routing"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_8",
    "description": "This control checks whether a Amazon Redshift cluster has changed the admin username from its default value. This control will fail if the admin username for a Redshift cluster is set to awsuser.",
    "title": "8 Amazon Redshift clusters should not use the default Admin username",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "redshift_8",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether a Amazon Redshift cluster has changed the admin username from its default value. This control will fail if the admin username for a Redshift cluster is set to awsuser.\n\nWhen creating a Redshift cluster, you should change the default admin username to a unique value. Default usernames are public knowledge and should be changed upon configuration. Changing the default usernames reduces the risk of unintended access.\n\n## Remediation\n\nYou cannot change the admin username for your Amazon Redshift cluster after it is created. To create a new cluster, follow the instructions [here](https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Amazon Redshift clusters are using the default Admin username"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_9",
    "description": "This control checks whether an Amazon Redshift cluster has changed the database name from its default value. The control will fail if the database name for a Redshift cluster is set to dev.",
    "title": "9 Redshift clusters should not use the default database name",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "redshift_9",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks whether an Amazon Redshift cluster has changed the database name from its default value. The control will fail if the database name for a Redshift cluster is set to dev.\n\nWhen creating a Redshift cluster, you should change the default database name to a unique value. Default names are public knowledge and should be changed upon configuration. As an example, a well-known name could lead to inadvertent access if it was used in IAM policy conditions.\n\n## Remediation\n\nYou cannot change the database name for your Amazon Redshift cluster after it is created. To create a new cluster, follow the instructions [here](https://docs.aws.amazon.com/redshift/latest/gsg/getting-started.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Redshift clusters are using the default database name"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Redshift",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Redshift"
    ],
    "category_hierarchy_short": "AWS - Redshift",
    "control_id": "aws_compliance.control.foundational_security_redshift_10",
    "description": "This control checks if Amazon Redshift clusters are encrypted at rest. The control fails if a Redshift cluster isn't encrypted at rest or if the encryption key is different from the provided key in the rule parameter.",
    "title": "10 Redshift clusters should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "redshift_10",
      "plugin": "aws",
      "service": "AWS/Redshift"
    },
    "documentation": "## Description\n\nThis control checks if Amazon Redshift clusters are encrypted at rest. The control fails if a Redshift cluster isn't encrypted at rest or if the encryption key is different from the provided key in the rule parameter.\n\nIn Amazon Redshift, you can turn on database encryption for your clusters to help protect data at rest. When you turn on encryption for a cluster, the data blocks and system metadata are encrypted for the cluster and its snapshots. Encryption of data at rest is a recommended best practice because it adds a layer of access management to your data. Encrypting Redshift clusters at rest reduces the risk that an unauthorized user can access the data stored on disk.\n\n## Remediation\n\nTo modify a Redshift cluster to use KMS encryption, see [Changing cluster encryption](https://docs.aws.amazon.com/redshift/latest/mgmt/changing-cluster-encryption.html) in the Amazon Redshift Management Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_redshift"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_redshift",
    "executable": true,
    "problem_title": "Redshift clusters are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_1",
    "description": "This control checks whether the following Amazon S3 public access block settings are configured at the account level",
    "title": "1 S3 Block Public Access setting should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "s3_1",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThe control passes if all of the public access block settings are set to true.\n\nThe control fails if any of the settings are set to false, or if any of the settings are not configured. When the settings do not have a value, the AWS Config rule cannot complete its evaluation.\n\nAmazon S3 public access block is designed to provide controls across an entire AWS account or at the individual S3 bucket level to ensure that objects never have public access. Public access is granted to buckets and objects through access control lists (ACLs), bucket policies, or both.\n\nUnless you intend to have your S3 buckets be publicly accessible, you should configure the account level Amazon S3 Block Public Access feature.\n\n## Remediation\n\nTo remediate this issue, enable Amazon S3 Block Public Access.\n\n**To enable Amazon S3 Block Public Access**\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose **Block public access** (account settings).\n3. Choose `Edit`.\n4. Select `Block all public access`.\n5. Choose `Save` changes.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 Block Public Access setting is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_2",
    "description": "This control checks whether your S3 buckets allow public read access. It evaluates the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).",
    "title": "2 S3 buckets should prohibit public read access",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "s3_2",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether your S3 buckets allow public read access by evaluating the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).\n\nUnless you explicitly require everyone on the internet to be able to write to your S3 bucket, you should ensure that your S3 bucket is not publicly writable.\n\nIt does not check for read access to the bucket by internal principals, such as IAM roles. You should ensure that access to the bucket is restricted to authorized principals only.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the name of the bucket identified in the finding.\n3. Choose **Permissions** and then choose **Public access settings.**\n4. Choose **Edit**, select all four options, and then choose **Save**.\n5. If prompted, enter `confirm` and then choose **Confirm**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets allow public read access"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_3",
    "description": "This control checks whether your S3 buckets allow public write access. It evaluates the block public access settings, the bucket policy, and the bucket access control list (ACL).",
    "title": "3 S3 buckets should prohibit public write access",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "s3_3",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether your S3 buckets allow public write access by evaluating the Block Public Access settings, the bucket policy, and the bucket access control list (ACL).\n\nIt does not check for write access to the bucket by internal principals, such as IAM roles. You should ensure that access to the bucket is restricted to authorized principals only.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the name of the bucket identified in the finding.\n3. Choose **Permissions** and then choose **Public access settings.**\n4. Choose **Edit**, select all four options, and then choose **Save**.\n5. If prompted, enter `confirm` and then choose **Confirm**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets allow public write access"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_4",
    "description": "This control checks that your S3 bucket either has Amazon S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server-side encryption.",
    "title": "4 S3 buckets should have server-side encryption enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "s3_4",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks that your Amazon S3 bucket either has Amazon S3 default encryption enabled or that the S3 bucket policy explicitly denies put-object requests without server-side encryption.\n\nWhen you set default encryption on a bucket, all new objects stored in the bucket are encrypted when they are stored, including clear text PAN data.\n\nServer-side encryption for all of the objects stored in a bucket can also be enforced using a bucket policy.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the bucket from the list.\n3. Choose **Properties**.\n4. Choose **Default encryption**.\n5. For the encryption, choose either `AES-256` or `AWS-KMS`.\n   1. To use keys that are managed by Amazon S3 for default encryption, choose AES-256. For more information about using Amazon S3 server-side encryption to encrypt your data,\n   2. To use keys that are managed by AWS KMS for default encryption, choose AWS-KMS. Then choose a master key from the list of the AWS KMS master keys that you have created. Type the Amazon Resource Name (ARN) of the AWS KMS key to use. You can find the ARN for your AWS KMS key in the IAM console, under Encryption keys. Or, you can choose a key name from the drop-down list.\n6. Choose **Save**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets do not have server-side encryption enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_5",
    "description": "This control checks whether S3 buckets have policies that require requests to use Secure Socket Layer (SSL). S3 buckets should have policies that require all requests (Action: S3:*)to only accept transmission of data over HTTPS in the S3 resource policy, indicated by the condition key aws:SecureTransport.",
    "title": "5 S3 buckets should require requests to use Secure Socket Layer",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "s3_5",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon S3 buckets have policies that require requests to use Secure Socket Layer (SSL).\n\nS3 buckets should have policies that require all requests (Action: S3:*) to only accept transmission of data over HTTPS in the S3 resource policy, indicated by the condition key aws:SecureTransport.\n\nThis does not check the SSL or TLS version. You should not allow early versions of SSL or TLS (SSLv3, TLS1.0) per PCI DSS requirements.\n\n## Remediation\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Navigate to the noncompliant bucket, and then choose the bucket name.\n3. Choose **Permissions**, then choose **Bucket Policy**.\n4. Add a similar policy statement to that in the policy below. Replace `awsexamplebucket` with the name of the bucket you are modifying.\n\n```json\n{\n    \"Id\": \"ExamplePolicy\",\n    \"Version\": \"2012-10-17\",\n    \"Statement\": [\n        {\n            \"Sid\": \"AllowSSLRequestsOnly\",\n            \"Action\": \"s3:*\",\n            \"Effect\": \"Deny\",\n            \"Resource\": [\n                \"arn:aws:s3:::awsexamplebucket\",\n                \"arn:aws:s3:::awsexamplebucket/*\"\n            ],\n            \"Condition\": {\n                \"Bool\": {\n                     \"aws:SecureTransport\": \"false\"\n                }\n            },\n           \"Principal\": \"*\"\n        }\n    ]\n}\n```\n\n5. Choose **Save**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets do not require requests to use Secure Socket Layer"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_6",
    "description": "This control checks whether the S3 bucket policy prevents principals from other AWS accounts from performing denied actions on resources in the S3 bucket.",
    "title": "6 Amazon S3 permissions granted to other AWS accounts in bucket policies should be restricted",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "sensitive_api_operations_actions_restricted",
      "foundational_security_item_id": "s3_6",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether the S3 bucket policy prevents principals from other AWS accounts from performing denied actions on resources in the S3 bucket.\n\nImplementing least privilege access is fundamental to reducing security risk and the impact of errors or malicious intent. If an S3 bucket policy allows access from external accounts, it could result in data exfiltration by an insider threat or an attacker.\n\nThe `blacklistedactionpatterns` parameter allows for successful evaluation of the rule for S3 buckets. The parameter grants access to external accounts for action patterns that are not included in the `blacklistedactionpatterns` list.\n\n## Remediation\n\nTo remediate this issue, edit the S3 bucket policy to remove the permissions.\n\n**To edit an S3 bucket policy**\n\n1. Open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. In the `Bucket name` list, choose the name of the S3 bucket for which you want to edit the policy.\n3. Choose `Permissions`, and then choose `Bucket Policy`.\n4. In the `Bucket policy editor` text box, do one of the following:\n   - Remove the statements that grant access to denied actions to other AWS accounts\n   - Remove the permitted denied actions from the statements\n5. Choose `Save`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "Amazon S3 permissions are not restricted for other AWS accounts in bucket policies"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_8",
    "description": "This control checks whether S3 buckets have bucket-level public access blocks applied.",
    "title": "8 S3 Block Public Access setting should be enabled at the bucket level",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "access_control",
      "foundational_security_item_id": "s3_8",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether S3 buckets have bucket-level public access blocks applied. This control fails if any bucket level public access settings are set to false.\n\nBlock Public Access at the S3 bucket level provides controls to ensure that objects never have public access. Public access is granted to buckets and objects through access control lists (ACLs), bucket policies, or both.\n\n## Remediation\n\nFor information on how to remove public access at a bucket level, see [Blocking public access to your Amazon S3 storage](https://docs.aws.amazon.com/AmazonS3/latest/userguide/access-control-block-public-access.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 Block Public Access setting is not enabled at the bucket level"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_9",
    "description": "When logging is enabled, Amazon S3 delivers access logs for a source bucket to a chosen target bucket. The target bucket must be in the same AWS Region as the source bucket and must not have a default retention period configuration.",
    "title": "9 S3 bucket server access logging should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "s3_9",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nWhen logging is enabled, Amazon S3 delivers access logs for a source bucket to a chosen target bucket. The target bucket must be in the same AWS Region as the source bucket and must not have a default retention period configuration. The target logging bucket does not need to have logging enabled. This control passes if Server access logging is enabled.\n\nServer access logging provides detailed records of requests made to a bucket. Server access logs can assist in security and access audits. For more information, see Security Best Practices for Amazon S3: Enable Amazon S3 server access logging.\n\n## Remediation\n\n**To enable S3 bucket access logging**\n\n1. Sign in to the AWS Management Console and open the [Amazon S3 console](https://console.aws.amazon.com/s3/).\n2. Choose the bucket used for CloudTrail.\n3. Choose `Properties`.\n4. Choose `Server access logging`, then select `Edit`.\n5. Under `Server access logging` choose `Enable` then choose `Save changes`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 bucket server access logging is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_10",
    "description": "This control checks if Amazon Simple Storage Service (Amazon S3) version enabled buckets have lifecycle policy configured. This rule fails if Amazon S3 lifecycle policy is not enabled.",
    "title": "10 S3 buckets with versioning enabled should have lifecycle policies configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "s3_10",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks if Amazon Simple Storage Service (Amazon S3) version enabled buckets have lifecycle policy configured. This rule fails if Amazon S3 lifecycle policy is not enabled.\n\nIt is recommended to configure lifecycle rules on your Amazon S3 bucket as these rules help you define actions that you want Amazon S3 to take during an object's lifetime.\n\n## Remediation\n\nFor more information on configuring lifecycle on an Amazon S3 bucket, see [Setting lifecycle configuration on a bucket](https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-set-lifecycle-configuration-intro.html)and [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets with versioning enabled do not have lifecycle policies configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_11",
    "description": "This control checks whether S3 Event Notifications are enabled on an Amazon S3 bucket. This control fails if S3 Event Notifications are not enabled on a bucket.",
    "title": "11 S3 buckets should have event notifications enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "s3_11",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether S3 Event Notifications are enabled on an Amazon S3 bucket. This control fails if S3 Event Notifications are not enabled on a bucket.\n\nBy enabling Event Notifications, you receive alerts on your Amazon S3 buckets when specific events occur. For example, you can be notified of object creation, object removal, and object restoration. These notifications can alert relevant teams to accidental or intentional modifications that may lead to unauthorized data access.\n\n## Remediation\n\nFor more information on detecting changes to S3 buckets and objects, see [Amazon S3 Event Notifications](https://docs.aws.amazon.com/AmazonS3/latest/userguide/NotificationHowTo.html) in the Amazon S3 User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets do not have event notifications enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_12",
    "description": "This control checks whether Amazon S3 buckets provide user permissions via ACLs. The control fails if ACLs are configured for managing user access on S3 buckets.",
    "title": "12 S3 access control lists (ACLs) should not be used to manage user access to buckets",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "access_control",
      "foundational_security_item_id": "s3_12",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon S3 buckets provide user permissions via ACLs. The control fails if ACLs are configured for managing user access on S3 buckets.\n\nACLs are legacy access control mechanisms that predate IAM. Instead of ACLs, we recommend using IAM policies or S3 bucket policies to more easily manage access to your S3 buckets.\n\n## Remediation\n\nFor more information on managing access to S3 buckets, see [Bucket policies and user policies](https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-iam-policies.html) in the Amazon S3 User Guide. For details on how to review your current ACL permissions, see [Access control list (ACL) overview](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html) in the Amazon S3 User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 access control lists (ACLs) are used to manage user access to buckets"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > S3",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "S3"
    ],
    "category_hierarchy_short": "AWS - S3",
    "control_id": "aws_compliance.control.foundational_security_s3_13",
    "description": "This control checks if a lifecycle policy is configured for an Amazon S3 bucket. This control fails if a lifecycle policy is not configured for an S3 bucket.",
    "title": "13 S3 buckets should have lifecycle policies configured",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "data_protection",
      "foundational_security_item_id": "s3_13",
      "plugin": "aws",
      "service": "AWS/S3"
    },
    "documentation": "## Description\n\nThis control checks if a lifecycle policy is configured for an Amazon S3 bucket. This control fails if a lifecycle policy is not configured for an S3 bucket.\n\nConfiguring lifecycle rules on your S3 bucket defines actions that you want S3 to take during an object's lifetime. For example, you can transition objects to another storage class, archive them, or delete them after a specified period of time.\n\n## Remediation\n\nFor information about configuring lifecycle policies on an Amazon S3 bucket, see [Setting lifecycle configuration on a bucket](https://docs.aws.amazon.com/AmazonS3/latest/userguide/how-to-set-lifecycle-configuration-intro.html) and see [Managing your storage lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html) in the Amazon S3 User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_s3"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_s3",
    "executable": true,
    "problem_title": "S3 buckets do not have lifecycle policies configured"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SageMaker",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SageMaker"
    ],
    "category_hierarchy_short": "AWS - SageMaker",
    "control_id": "aws_compliance.control.foundational_security_sagemaker_1",
    "description": "This control checks whether direct internet access is disabled for an SageMaker notebook instance. To do this, it checks whether the DirectInternetAccess field is disabled for the notebook instance. If you configure your SageMaker instance without a VPC, then by default direct internet access is enabled on your instance. You should configure your instance with a VPC and change the default setting to Disable — Access the internet through a VPC.",
    "title": "1 SageMaker notebook instances should not have direct internet access",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "sagemaker_1",
      "plugin": "aws",
      "service": "AWS/SageMaker"
    },
    "documentation": "## Description\n\nThis control checks whether direct internet access is disabled for an SageMaker notebook instance. To do this, it checks whether the DirectInternetAccess field is disabled for the notebook instance.\n\nIf you configure your SageMaker instance without a VPC, then by default direct internet access is enabled on your instance. You should configure your instance with a VPC and change the default setting to `Disable — Access the internet through a VPC`.\n\nTo train or host models from a notebook, you need internet access. To enable internet access, make sure that your VPC has a NAT gateway and your security group allows outbound connections. To learn more about how to connect a notebook instance to resources in a VPC, see [Connect a notebook instance to resources in a VPC](https://docs.aws.amazon.com/sagemaker/latest/dg/appendix-notebook-and-internet-access.html) in the Amazon SageMaker Developer Guide.\n\nYou should also ensure that access to your SageMaker configuration is limited to only authorized users. Restrict users' IAM permissions to modify SageMaker settings and resources.\n\n## Remediation\n\nNote that you cannot change the internet access setting after a notebook instance is created. It must be stopped, deleted, and recreated.\n\nTo configure an SageMaker notebook instance to deny direct internet access\n\n1. Open the [SageMaker console](https://console.aws.amazon.com/sagemaker/)\n2. Navigate to **Notebook instances**.\n3. Delete the instance that has direct internet access enabled. Choose the instance, choose Actions, then choose stop.\n4. After the instance is stopped, choose **Actions**, then choose **delete**.\n5. Choose Create notebook instance. Provide the configuration details.\n6. Expand the **Network** section. Then choose a VPC, subnet, and security group. Under **Direct internet access**, choose **Disable — Access the internet through a VPC**.\n7. Choose **Create notebook instance**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_sagemaker"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_sagemaker",
    "executable": true,
    "problem_title": "SageMaker notebook instances have direct internet access"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SageMaker",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SageMaker"
    ],
    "category_hierarchy_short": "AWS - SageMaker",
    "control_id": "aws_compliance.control.foundational_security_sagemaker_2",
    "description": "This control checks if an Amazon SageMaker notebook instance is launched within a custom virtual private cloud (VPC). This control fails if a SageMaker notebook instance is not launched within a custom VPC or if it is launched in the SageMaker service VPC.",
    "title": "2 SageMaker notebook instances should be launched in a custom VPC",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_within_vpc",
      "foundational_security_item_id": "sagemaker_2",
      "plugin": "aws",
      "service": "AWS/SageMaker"
    },
    "documentation": "## Description\n\nThis control checks if an Amazon SageMaker notebook instance is launched within a custom virtual private cloud (VPC). This control fails if a SageMaker notebook instance is not launched within a custom VPC or if it is launched in the SageMaker service VPC.\n\nSubnets are a range of IP addresses within a VPC. We recommend keeping your resources inside a custom VPC whenever possible to ensure secure network protection of your infrastructure. An Amazon VPC is a virtual network dedicated to your AWS account. With an Amazon VPC, you can control the network access and internet connectivity of your SageMaker Studio and notebook instances.\n\n## Remediation\n\nYou can't change the VPC setting after creating a notebook instance. Instead, you can delete and recreate the instance. For instructions on deleting and creating a notebook instance, see [Get started with Amazon SageMaker notebook instances](https://docs.aws.amazon.com/sagemaker/latest/dg/gs-console.html) in the Amazon SageMaker Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_sagemaker"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_sagemaker",
    "executable": true,
    "problem_title": "SageMaker notebook instances are not launched in a custom VPC"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SageMaker",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SageMaker"
    ],
    "category_hierarchy_short": "AWS - SageMaker",
    "control_id": "aws_compliance.control.foundational_security_sagemaker_3",
    "description": "This control checks whether root access is turned on for an Amazon SageMaker notebook instance. The control fails if root access is turned on for a SageMaker notebook instance.",
    "title": "3 Users should not have root access to SageMaker notebook instances",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "root_user_access_restrictions",
      "foundational_security_item_id": "sagemaker_3",
      "plugin": "aws",
      "service": "AWS/SageMaker"
    },
    "documentation": "## Description\n\nThis control checks whether root access is turned on for an Amazon SageMaker notebook instance. The control fails if root access is turned on for a SageMaker notebook instance.\n\nIn adherence to the principal of least privilege, it is a recommended security best practice to restrict root access to instance resources to avoid unintentionally over provisioning permissions.\n\n## Remediation\n\nTo restrict root access to SageMaker notebook instances, see [Control root access to a SageMaker notebook instance](https://docs.aws.amazon.com/sagemaker/latest/dg/nbi-root-access.html) in the Amazon SageMaker Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_sagemaker"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_sagemaker",
    "executable": true,
    "problem_title": "Users still have root access to SageMaker notebook instances"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Secrets Manager",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Secrets Manager"
    ],
    "category_hierarchy_short": "AWS - Secrets Manager",
    "control_id": "aws_compliance.control.foundational_security_secretsmanager_1",
    "description": "This control checks whether a secret stored in AWS Secrets Manager is configured with automatic rotation. Secrets Manager helps you improve the security posture of your organization. Secrets include database credentials, passwords, and third-party API keys. You can use Secrets Manager to store secrets centrally, encrypt secrets automatically, control access to secrets, and rotate secrets safely and automatically.",
    "title": "1 Secrets Manager secrets should have automatic rotation enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_development",
      "foundational_security_item_id": "secretsmanager_1",
      "plugin": "aws",
      "service": "AWS/SecretsManager"
    },
    "documentation": "## Description\n\nThis control checks whether a secret stored in AWS Secrets Manager is configured with automatic rotation.\n\nSecrets Manager helps you improve the security posture of your organization. Secrets include database credentials, passwords, and third-party API keys. You can use Secrets Manager to store secrets centrally, encrypt secrets automatically, control access to secrets, and rotate secrets safely and automatically.\n\nSecrets Manager can rotate secrets. You can use rotation to replace long-term secrets with short-term ones. Rotating your secrets limits how long an unauthorized user can use a compromised secret. For this reason, you should rotate your secrets frequently. To learn more about rotation, see [Rotating your AWS Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html).\n\n## Remediation\n\nTo remediate this issue, you enable automatic rotation for your secrets.\n\n**To enable automatic rotation for secrets**\n\n1. Open the [Secrets Manager console](https://console.aws.amazon.com/secretsmanager/).\n2. To find the secret that requires rotating, enter the secret name in the search field.\n3. Choose the secret you want to rotate, which displays the secrets details page.\n4. Under `Rotation configuration`, choose Edit `rotation`.\n5. From `Edit rotation configuration`, choose `Enable automatic rotation`.\n6. For `Select Rotation Interval`, choose a rotation interval.\n7. Choose a Lambda function for rotation. For information about customizing your Lambda rotation function, see [Understanding and customizing your Lambda rotation function](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets-lambda-function-customizing.html).\n8. To configure the secret for rotation, choose `Next`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_secretsmanager"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_secretsmanager",
    "executable": true,
    "problem_title": "Secrets Manager secrets do not have automatic rotation enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Secrets Manager",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Secrets Manager"
    ],
    "category_hierarchy_short": "AWS - Secrets Manager",
    "control_id": "aws_compliance.control.foundational_security_secretsmanager_2",
    "description": "This control checks whether an AWS Secrets Manager secret rotated successfully based on the rotation schedule. The control fails if RotationOccurringAsScheduled is false. The control does not evaluate secrets that do not have rotation configured.",
    "title": "2 Secrets Manager secrets configured with automatic rotation should rotate successfully",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_development",
      "foundational_security_item_id": "secretsmanager_2",
      "plugin": "aws",
      "service": "AWS/SecretsManager"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS Secrets Manager secret rotated successfully based on the rotation schedule. The control fails if RotationOccurringAsScheduled is false. The control does not evaluate secrets that do not have rotation configured.\n\nSecrets Manager helps you improve the security posture of your organization. Secrets include database credentials, passwords, and third-party API keys. You can use Secrets Manager to store secrets centrally, encrypt secrets automatically, control access to secrets, and rotate secrets safely and automatically.\n\nSecrets Manager can rotate secrets. You can use rotation to replace long-term secrets with short-term ones. Rotating your secrets limits how long an unauthorized user can use a compromised secret. For this reason, you should rotate your secrets frequently.\n\nIn addition to configuring secrets to rotate automatically, you should ensure that those secrets rotate successfully based on the rotation schedule.\n\n## Remediation\n\nIf the automatic rotation fails, then Secrets Manager might have encountered errors with the configuration.\n\nTo rotate secrets in Secrets Manager, you use a Lambda function that defines how to interact with the database or service that owns the secret.\n\nFor help on how to diagnose and fix common errors related to secrets rotation, see [Troubleshooting AWS Secrets Manager rotation of secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/troubleshoot_rotation.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_secretsmanager"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_secretsmanager",
    "executable": true,
    "problem_title": "Secrets Manager secrets do not rotate automatically"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Secrets Manager",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Secrets Manager"
    ],
    "category_hierarchy_short": "AWS - Secrets Manager",
    "control_id": "aws_compliance.control.foundational_security_secretsmanager_3",
    "description": "This control checks whether your secrets have been accessed within a specified number of days. The default value is 90 days. If a secret was accessed even once within the defined number of days, this control fails.",
    "title": "3 Remove unused Secrets Manager secrets",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "secretsmanager_3",
      "plugin": "aws",
      "service": "AWS/SecretsManager"
    },
    "documentation": "## Description\n\nThis control checks whether your secrets have been accessed within a specified number of days. The default value is 90 days. If a secret was accessed even once within the defined number of days, this control fails.\n\nDeleting unused secrets is as important as rotating secrets. Unused secrets can be abused by their former users, who no longer need access to these secrets. Also, as more users get access to a secret, someone might have mishandled and leaked it to an unauthorized entity, which increases the risk of abuse. Deleting unused secrets helps revoke secret access from users who no longer need it. It also helps to reduce the cost of using Secrets Manager. Therefore, it is essential to routinely delete unused secrets.\n\n## Remediation\n\nYou can delete inactive secrets from the Secrets Manager console.\n\n**To delete inactive secrets**\n\n1. Open the [Secrets Manager console](https://console.aws.amazon.com/secretsmanager/).\n3. To locate the secret, enter the secret name in the search box.\n3. Choose the secret to delete.\n4. Under `Secret details`, from `Actions`, choose `Delete secret`.\n5. Under `Schedule secret deletion`, enter the number of days to wait before the secret is deleted.\n6. Choose `Schedule deletion`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_secretsmanager"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_secretsmanager",
    "executable": true,
    "problem_title": "Secrets Manager still has unused secrets"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > Secrets Manager",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "Secrets Manager"
    ],
    "category_hierarchy_short": "AWS - Secrets Manager",
    "control_id": "aws_compliance.control.foundational_security_secretsmanager_4",
    "description": "This control checks whether your secrets have been rotated at least once within 90 days. Rotating secrets can help you to reduce the risk of an unauthorized use of your secrets in your AWS account. Examples include database credentials, passwords, third-party API keys, and even arbitrary text. If you do not change your secrets for a long period of time, the secrets are more likely to be compromised.",
    "title": "4 Secrets Manager secrets should be rotated within a specified number of days",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_access_management",
      "foundational_security_item_id": "secretsmanager_4",
      "plugin": "aws",
      "service": "AWS/SecretsManager"
    },
    "documentation": "## Description\n\nThis control checks whether your secrets have been rotated at least once within 90 days.\n\nRotating secrets can help you to reduce the risk of an unauthorized use of your secrets in your AWS account. Examples include database credentials, passwords, third-party API keys, and even arbitrary text. If you do not change your secrets for a long period of time, the secrets are more likely to be compromised.\n\nAs more users get access to a secret, it can become more likely that someone mishandled and leaked it to an unauthorized entity. Secrets can be leaked through logs and cache data. They can be shared for debugging purposes and not changed or revoked once the debugging completes. For all these reasons, secrets should be rotated frequently.\n\nYou can configure your secrets for automatic rotation in AWS Secrets Manager. With automatic rotation, you can replace long-term secrets with short-term ones, significantly reducing the risk of compromise.\n\nSecurity Hub recommends that you enable rotation for your Secrets Manager secrets. To learn more about rotation, see [Rotating your AWS Secrets Manager secrets](https://docs.aws.amazon.com/secretsmanager/latest/userguide/rotating-secrets.html).\n\n## Remediation\n\nYou can enable automatic secret rotation in the Secrets Manager console.\n\n**To enable secret rotation**\n\n1. Open the [Secrets Manager console](https://console.aws.amazon.com/secretsmanager/).\n2. To locate the secret, enter the secret name in the search box.\n3. Choose the secret to display.\n4. Under `Rotation configuration`, choose `Edit rotation`.\n5. From `Edit rotation configuration`, choose `Enable automatic rotation`.\n6. From `Select Rotation Interval`, choose the rotation interval.\n7. Choose a Lambda function to use for rotation.\n8. Choose `Next`.\n9. After you configure the secret for automatic rotation, under `Rotation Configuration`, choose `Rotate secret immediately`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_secretsmanager"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_secretsmanager",
    "executable": true,
    "problem_title": "Secrets Manager secrets are not rotated within the specified number of days"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SNS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SNS"
    ],
    "category_hierarchy_short": "AWS - SNS",
    "control_id": "aws_compliance.control.foundational_security_sns_1",
    "description": "This control checks whether an SNS topic is encrypted at rest using AWS KMS.",
    "title": "1 SNS topics should be encrypted at rest using AWS KMS",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "sns_1",
      "plugin": "aws",
      "service": "AWS/SNS"
    },
    "documentation": "## Description\n\nThis control checks whether an SNS topic is encrypted at rest using AWS KMS.\n\nEncrypting data at rest reduces the risk of data stored on disk being accessed by a user not authenticated to AWS. It also adds another set of access controls to limit the ability of unauthorized users to access the data. For example, API permissions are required to decrypt the data before it can be read. SNS topics should be encrypted at-rest for an added layer of security. For more information, see [Encryption at rest](https://docs.aws.amazon.com/sns/latest/dg/sns-server-side-encryption.html) in the `Amazon Simple Notification Service Developer Guide`.\n\n## Remediation\n\nTo remediate this issue, update your SNS topic to enable encryption.\n\n**To encrypt an unencrypted SNS topic**\n\n1. Open the [Amazon SNS console](https://console.aws.amazon.com/sns/v3/home).\n2. In the navigation pane, choose `Topics`.\n3. Choose the name of the topic to encrypt.\n4. Choose `Edit`.\n5. Under `Encryption`, choose `Enable Encryption`.\n5. Choose the `KMS key` to use to encrypt the topic.\n6. Choose `Save` changes.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_sns"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_sns",
    "executable": true,
    "problem_title": "SNS topics are not encrypted at rest using AWS KMS"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SNS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SNS"
    ],
    "category_hierarchy_short": "AWS - SNS",
    "control_id": "aws_compliance.control.foundational_security_sns_2",
    "description": "This control checks whether logging is enabled for the delivery status of notification messages sent to an Amazon SNS topic for the endpoints. This control fails if the delivery status notification for messages is not enabled.",
    "title": "2 Logging of delivery status should be enabled for notification messages sent to a topic",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "sns_2",
      "plugin": "aws",
      "service": "AWS/SNS"
    },
    "documentation": "## Description\n\nThis control checks whether logging is enabled for the delivery status of notification messages sent to an Amazon SNS topic for the endpoints. This control fails if the delivery status notification for messages is not enabled.\n\nLogging is an important part of maintaining the reliability, availability, and performance of services. Logging message delivery status helps provide operational insights, such as the following:\n  - Knowing whether a message was delivered to the Amazon SNS endpoint.\n  - Identifying the response sent from the Amazon SNS endpoint to Amazon SNS.\n  - Determining the message dwell time (the time between the publish timestamp and the hand off to an Amazon SNS endpoint).\n\n## Remediation\n\nTo remediate this issue, configuring your SNS topic delivery status logging.\n\n**To encrypt an unencrypted SNS topic**\n\n1. Open the [Amazon SNS console](https://console.aws.amazon.com/sns/v3/home).\n2. In the navigation pane, choose `Topics`.\n3. On the Topics page, choose a topic and then choose Edit.\n4. On the Edit MyTopic page, expand the Delivery status logging section.\n5. Choose the protocol for which you want to log delivery status; for example AWS Lambda.\n6. Enter the Success sample rate (the percentage of successful messages for which you want to receive CloudWatch Logs.\n7. In the IAM roles section, do one of the following:\n  - To choose an existing service role from your account, choose Use existing service role and then specify IAM roles for successful and failed deliveries.\n  - To create a new service role in your account, choose Create new service role, choose Create new roles to define the IAM roles for successful and failed deliveries in the IAM console.\n  - To give Amazon SNS write access to use CloudWatch Logs on your behalf, choose Allow.\n8. Choose Save changes.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_sns"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_sns",
    "executable": true,
    "problem_title": "Logging of delivery status is not enabled for notification messages sent to a topic"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SQS",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SQS"
    ],
    "category_hierarchy_short": "AWS - SQS",
    "control_id": "aws_compliance.control.foundational_security_sqs_1",
    "description": "This control checks whether Amazon SQS queues are encrypted at rest.",
    "title": "1 Amazon SQS queues should be encrypted at rest",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "encryption_of_data_at_rest",
      "foundational_security_item_id": "sqs_1",
      "plugin": "aws",
      "service": "AWS/SQS"
    },
    "documentation": "## Description\n\nThis control checks whether Amazon SQS queues are encrypted at rest.\n\nServer-side encryption (SSE) allows you to transmit sensitive data in encrypted queues. To protect the content of messages in queues, SSE uses keys managed in AWS KMS. For more information, see [Encryption at rest](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-server-side-encryption.html) in the `Amazon Simple Queue Service Developer Guide`.\n\n## Remediation\n\nFor information about managing SSE using the AWS Management Console, see [Configuring server-side encryption (SSE) for a queue (console)](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-configure-sse-existing-queue.html) in the Amazon Simple Queue Service Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_sqs"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_sqs",
    "executable": true,
    "problem_title": "Amazon SQS queues are not encrypted at rest"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SSM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SSM"
    ],
    "category_hierarchy_short": "AWS - SSM",
    "control_id": "aws_compliance.control.foundational_security_ssm_1",
    "description": "This control checks whether the EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure. To help you to maintain security and compliance, Systems Manager scans your managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances.",
    "title": "1 EC2 instances should be managed by AWS Systems Manager",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "inventory",
      "foundational_security_item_id": "ssm_1",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether the EC2 instances in your account are managed by AWS Systems Manager. Systems Manager is an AWS service that you can use to view and control your AWS infrastructure.\n\nTo help you to maintain security and compliance, Systems Manager scans your managed instances. A managed instance is a machine that is configured for use with Systems Manager. Systems Manager then reports or takes corrective action on any policy violations that it detects. Systems Manager also helps you to configure and maintain your managed instances.\n\n## Remediation\n\nTo ensure that EC2 instances are managed by Systems Manager\n\n1. Open the [AWS Systems Manager console](https://console.aws.amazon.com/systems-manager/).\n2. Choose `Quick setup`.\n3. On the configuration screen, keep the default options.\n4. Choose `Enable`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ssm",
    "executable": true,
    "problem_title": "EC2 instances are not being managed by AWS Systems Manager"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SSM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SSM"
    ],
    "category_hierarchy_short": "AWS - SSM",
    "control_id": "aws_compliance.control.foundational_security_ssm_2",
    "description": "This control checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is COMPLIANT or non compliant after the patch installation on the instance. It only checks instances that are managed by Systems Manager Patch Manager.",
    "title": "2 All EC2 instances managed by Systems Manager should be compliant with patching requirements",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "detection_services",
      "foundational_security_item_id": "ssm_2",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether the compliance status of the Amazon EC2 Systems Manager patch compliance is `COMPLIANT` or `NON_COMPLIANT` after the patch installation on the instance. It only checks instances that are managed by Systems Manager Patch Manager.\n\nHaving your EC2 instances fully patched as required by your organization reduces the attack surface of your AWS accounts.\n\n## Remediation\n\nTo remediate this issue, install the required patches on your noncompliant instances.\n\n**To remediate noncompliant patches**\n\n1. Open the [AWS Systems Manager console](https://console.aws.amazon.com/systems-manager/).\n2. Under `Instances & Nodes`, choose `Run Command` and then choose `Run command`.\n3. Choose the button next to `AWS-RunPatchBaseline`.\n4. Change the `Operation` to `Install`.\n5. Choose `Choose instances manually` and then choose the noncompliant instances.\n6. At the bottom of the page, choose `Run`.\n7. After the command is complete, to monitor the new compliance status of your patched instances, in the navigation pane, choose `Compliance`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ssm",
    "executable": true,
    "problem_title": "Some EC2 instances managed by Systems Manager are not compliant with patching requirements"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SSM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SSM"
    ],
    "category_hierarchy_short": "AWS - SSM",
    "control_id": "aws_compliance.control.foundational_security_ssm_3",
    "description": "This control checks whether the status of the AWS Systems Manager association compliance is COMPLIANT or non compliant after the association is run on an instance. The control passes if the association compliance status is COMPLIANT.",
    "title": "3 Instances managed by Systems Manager should have an association compliance status of COMPLIANT",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "detection_services",
      "foundational_security_item_id": "ssm_3",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether the status of the AWS Systems Manager association compliance is `COMPLIANT` or `NON_COMPLIANT` after the association is run on an instance. The control passes if the association compliance status is `COMPLIANT`.\n\nA State Manager association is a configuration that is assigned to your managed instances. The configuration defines the state that you want to maintain on your instances. For example, an association can specify that antivirus software must be installed and running on your instances or that certain ports must be closed.\n\nAfter you create one or more State Manager associations, compliance status information is immediately available to you. You can view the compliance status in the console or in response to AWS CLI commands or corresponding Systems Manager API actions. For associations, Configuration Compliance shows the compliance status (`Compliant` or `Non-compliant`). It also shows the severity level assigned to the association, such as `Critical` or `Medium`.\n\n## Remediation\n\nA failed association can be related to different things, including targets and SSM document names. To remediate this issue, you must first identify and investigate the association. You can then update the association to correct the specific issue.\n\nYou can edit an association to specify a new name, schedule, severity level, or targets. After you edit an association, AWS Systems Manager creates a new version.\n\n**To investigate and update a failed association**\n\n1. Open the [AWS Systems Manager console](https://console.aws.amazon.com/systems-manager/).\n2. In the navigation pane, under `Instances & Nodes`, choose `Managed Instances`.\n3. Choose the instance ID that has an `Association status` of `Failed`.\n4. Choose `View details`.\n5. Choose `Associations`.\n6. Note the name of the association that has an `Association status` of `Failed`. This is the association that you need to investigate. You need to use the association name in the next step.\n7. In the navigation pane, under `Instances & Nodes,` choose `State Manager`. Search for the association name, then select the association.\n8. After you determine the issue, edit the failed association to correct the problem. For information on how to edit an association, see [Edit an association](https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-state-assoc-edit.html).",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ssm",
    "executable": true,
    "problem_title": "Instances managed by Systems Manager do not have a compliant association"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > SSM",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "SSM"
    ],
    "category_hierarchy_short": "AWS - SSM",
    "control_id": "aws_compliance.control.foundational_security_ssm_4",
    "description": "This control checks whether AWS Systems Manager documents that are owned by the account are public. This control fails if SSM documents with the owner Self are public.",
    "title": "4 SSM documents should not be public",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resources_not_publicly_accessible",
      "foundational_security_item_id": "ssm_4",
      "plugin": "aws",
      "service": "AWS/SSM"
    },
    "documentation": "## Description\n\nThis control checks whether AWS Systems Manager documents that are owned by the account are public. This control fails if SSM documents with the owner `Self` are public.\n\nSSM documents that are public might allow unintended access to your documents. A public SSM document can expose valuable information about your account, resources, and internal processes.\n\nUnless your use case requires public sharing to be enabled, Security Hub recommends that you turn on the block public sharing setting for your Systems Manager documents that are owned by `Self`.\n\n## Remediation\n\nFor more information about disabling public access to SSM documents, see [Modify permissions for a shared SSM document](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-share-modify.html) and [Best practices for shared SSM documents](https://docs.aws.amazon.com/systems-manager/latest/userguide/ssm-before-you-share.html) in the AWS Systems Manager User Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_ssm"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_ssm",
    "executable": true,
    "problem_title": "SSM documents are publicly accessible"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_1",
    "description": "This control checks whether logging is enabled for an AWS WAF global web ACL. This control fails if logging is not enabled for the web ACL.",
    "title": "1 AWS WAF Classic Global Web ACL logging should be enabled",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "logging",
      "foundational_security_item_id": "waf_1",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether logging is enabled for an AWS WAF global web ACL. This control fails if logging is not enabled for the web ACL.\n\nLogging is an important part of maintaining the reliability, availability, and performance of AWS WAF globally. It is a business and compliance requirement in many organizations, and allows you to troubleshoot application behavior. It also provides detailed information about the traffic that is analyzed by the web ACL that is attached to AWS WAF.\n\n## Remediation\n\nYou can enable logging for a web ACL from the Kinesis Data Firehose console.\n\n**To enable logging for a web ACL**\n\n1. Open the [Kinesis Data Firehose console](https://console.aws.amazon.com/firehose/).\n2. Create a Kinesis Data Firehose delivery stream.The name must start with the prefix `aws-waf-logs-`. For example, `aws-waf-logs-us-east-2-analytics`. Create the Kinesis Data Firehose delivery stream with a `PUT` source and in the Region where you operate. If you capture logs for Amazon CloudFront, create the delivery stream in US East (N. Virginia). For more information, see [Creating an Amazon Kinesis Data Firehose delivery stream](https://docs.aws.amazon.com/firehose/latest/dev/basic-create.html) in the Amazon Kinesis Data Firehose Developer Guide.\n3. From `Services`, choose `WAF & Shield`. Then choose `Switch to AWS WAF Classic`.\n4. From `Filter`, choose `Global (CloudFront)`.\n5. Choose the web ACL to enable logging for.\n6. Under `Logging`, choose `Enable logging`.\n7. Choose the Kinesis Data Firehose delivery stream that you created earlier. You must choose a delivery stream that has a name that begins with `aws-waf-logs-`.\n8. Choose `Enable logging`.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "AWS WAF Classic Global Web ACL logging is not enabled"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_2",
    "description": "This control checks whether an AWS WAF Regional rule has at least one condition. The control fails if no conditions are present within a rule.",
    "title": "2 A WAF Regional rule should have at least one condition",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "waf_2",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS WAF Regional rule has at least one condition. The control fails if no conditions are present within a rule.\n\nA WAF Regional rule can contain multiple conditions. The rule's conditions allow for traffic inspection and take a defined action (allow, block, or count). Without any conditions, the traffic passes without inspection. A WAF Regional rule with no conditions, but with a name or tag suggesting allow, block, or count, could lead to the wrong assumption that one of those actions is occurring.\n\n## Remediation\n\nTo add a condition to an empty rule, see [Adding and removing conditions in a rule](https://docs.aws.amazon.com/waf/latest/developerguide/classic-web-acl-rules-editing.html) in the AWS WAF Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAF Regional rule has no conditions"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_3",
    "description": "This control checks whether an AWS WAF Regional rule group has at least one rule. The control fails if no rules are present within a rule group.",
    "title": "3 A WAF Regional rule group should have at least one rule",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "waf_3",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS WAF Regional rule group has at least one rule. The control fails if no rules are present within a rule group.\n\nA WAF Regional rule group can contain multiple rules. The rule's conditions allow for traffic inspection and take a defined action (allow, block, or count). Without any rules, the traffic passes without inspection. A WAF Regional rule group with no rules, but with a name or tag suggesting allow, block, or count, could lead to the wrong assumption that one of those actions is occurring.\n\n## Remediation\n\nTo add rules and rule conditions to an empty rule group, see [Adding and deleting rules from an AWS WAF Classic rule group](https://docs.aws.amazon.com/waf/latest/developerguide/classic-rule-group-editing.html) and [Adding and removing conditions in a rule](https://docs.aws.amazon.com/waf/latest/developerguide/classic-web-acl-rules-editing.html) in the AWS WAF Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAF Regional rule group has no rules"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_4",
    "description": "This control checks whether an AWS WAF Classic Regional web ACL contains any WAF rules or WAF rule groups. This control fails if a web ACL does not contain any WAF rules or rule groups.",
    "title": "4 A WAF Regional web ACL should have at least one rule or rule group",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "waf_4",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS WAF Classic Regional web ACL contains any WAF rules or WAF rule groups. This control fails if a web ACL does not contain any WAF rules or rule groups.\n\nA WAF Regional web ACL can contain a collection of rules and rule groups that inspect and control web requests. If a web ACL is empty, the web traffic can pass without being detected or acted upon by WAF depending on the default action.\n\n## Remediation\n\nTo add rules or rule groups to an empty Classic Regional web ACL, see [Editing a Web ACL](https://docs.aws.amazon.com/waf/latest/developerguide/classic-web-acl-editing.html) in the AWS WAF Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAF Regional web ACL has no rules or rule groups"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_6",
    "description": "This control checks whether an AWS WAF global rule contains any conditions. The control fails if no conditions are present within a rule.",
    "title": "6 A WAF global rule should have at least one condition",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "waf_6",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS WAF global rule contains any conditions. The control fails if no conditions are present within a rule.\n\nA WAF global rule can contain multiple conditions. A rule’s conditions allow for traffic inspection and take a defined action (allow, block, or count). Without any conditions, the traffic passes without inspection. A WAF global rule with no conditions, but with a name or tag suggesting allow, block, or count, could lead to the wrong assumption that one of those actions is occurring.\n\n## Remediation\n\nTo remediate this issue, update your WAF rule to add a condition.\n\n**To encrypt an unencrypted SNS topic**\n\n1. Open the [Amazon WAF console](https://console.aws.amazon.com/wafv2/).\n2. In the navigation pane, choose `Rules`.\n3. Choose the name of the rule to update.\n4. Choose `Edit`.\n5. To add a condition to the rule, specify the following values:\n\n  **When a request does/does not**\n\n    If you want AWS WAF Classic to allow or block requests based on the filters in a condition, choose does. For example, if an IP match condition includes the IP address range 192.0.2.0/24 and you want AWS WAF Classic to allow or block requests that come from those IP addresses, choose does.\n    If you want AWS WAF Classic to allow or block requests based on the inverse of the filters in a condition, choose does not. For example, if an IP match condition includes the IP address range 192.0.2.0/24 and you want AWS WAF Classic to allow or block requests that do not come from those IP addresses, choose does not.\n\n  **match/originate from**\n\n    Choose the type of condition that you want to add to the rule:\n    - Cross-site scripting match conditions – choose **match at least one of the filters in the cross-site scripting match condition**\n    - IP match conditions – choose **originate from an IP address in**\n    - Geo match conditions – choose **originate from a geographic location in**\n    - Size constraint conditions – choose **match at least one of the filters in the size constraint condition**\n    - SQL injection match conditions – choose **match at least one of the filters in the SQL injection match condition**\n    - String match conditions – choose **match at least one of the filters in the string match condition**\n    - Regular expression **match conditions – choose match at least one of the filters in the regex match condition**\n\n  **condition name**\n\n    Choose the condition that you want to add to the rule. The list displays only conditions of the type that you chose in the preceding step.\n\n6. To add another condition to the rule, choose **Add another condition**, and repeat steps 4 and 5. Note the following:\n  - If you add more than one condition, a web request must match at least one filter in every condition for AWS WAF Classic to allow or block requests based on that rule\n  - If you add two IP match conditions to the same rule, AWS WAF Classic will only allow or block requests that originate from IP addresses that appear in both IP match conditions\n7. When you're finished adding conditions, choose **Create**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAF global rule has no conditions"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_7",
    "description": "This control checks whether an AWS WAF global rule group has at least one rule. The control fails if no rules are present within a rule group.",
    "title": "7 A WAF global rule group should have at least one rule",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "waf_7",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS WAF global rule group has at least one rule. The control fails if no rules are present within a rule group.\n\nA WAF global rule group can contain multiple rules. The rule's conditions allow for traffic inspection and take a defined action (allow, block, or count). Without any rules, the traffic passes without inspection. A WAF global rule group with no rules, but with a name or tag suggesting allow, block, or count, could lead to the wrong assumption that one of those actions is occurring.\n\n## Remediation\n\nTo remediate this issue, update your WAF rule group to add atleast one rule.\n\n**To encrypt an unencrypted SNS topic**\n\n1. Open the [Amazon WAF console](https://console.aws.amazon.com/wafv2/).\n2. In the navigation pane, choose `Rule groups`.\n3. Choose the name of the rule group to update.\n4. Choose `Edit`.\n5. If you have already created the rules that you want to add to the rule group, choose Use existing rules for this rule group . If you want to create new rules to add to the rule group, choose **Create rules and conditions for this rule group**.\n6. Choose Next.\n7. If you chose to create rules, follow the steps to create them at [Creating a rule and adding conditions](https://docs.aws.amazon.com/waf/latest/developerguide/classic-web-acl-rules-creating.html).\n   When you've created all the rules you need, go to the next step.\n8. To add a rule to the rule group, select a rule then choose Add rule. Choose whether to allow, block, or count requests that match the rule's conditions. For more information on the choices, see [How AWS WAF Classic works](https://docs.aws.amazon.com/waf/latest/developerguide/classic-how-aws-waf-works.html).\n9. When you're finished adding conditions, choose **Save**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAF global rule group does not have at least one rule"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_8",
    "description": "This control checks whether an AWS WAF global web ACL contains at least one WAF rule or WAF rule group. The control fails if a web ACL does not contain any WAF rules or rule groups.",
    "title": "8 A WAF global web ACL should have at least one rule or rule group",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "resource_configuration",
      "foundational_security_item_id": "waf_8",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether an AWS WAF global web ACL contains at least one WAF rule or WAF rule group. The control fails if a web ACL does not contain any WAF rules or rule groups.\n\nA WAF global web ACL can contain a collection of rules and rule groups that inspect and control web requests. If a web ACL is empty, the web traffic can pass without being detected or acted upon by WAF depending on the default action.\n\n## Remediation\n\nTo remediate this issue, update your WAF web ACL to add atleast one rule or rule group.\n\n**To add rules or rule groups to an empty web ACL**\n\n1. Open the [AWS WAF console](https://console.aws.amazon.com/wafv2/).\n2. In the navigation pane, choose **Switch to AWS WAF Classic**, and then choose `Web ACLs`.\n3. For Filter, choose Global (CloudFront).\n4. Choose the name of the empty web ACL.\n5. Choose Rules, and then choose Edit web ACL.\n6. For Rules, choose a rule or rule group, and then choose Add rule to web ACL.\n7. At this point, you can modify the rule order within the web ACL if you are adding multiple rules or rule groups to the web ACL.\n8. Choose **Update**.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAF global web ACL has no rules or rule groups"
  },
  {
    "category_breadcrumb": "AWS Foundational Security Best Practices > WAF",
    "category_hierarchy": [
      "AWS Foundational Security Best Practices",
      "WAF"
    ],
    "category_hierarchy_short": "AWS - WAF",
    "control_id": "aws_compliance.control.foundational_security_waf_10",
    "description": "This control checks whether a WAFV2 web access control list (web ACL) contains at least one WAF rule or WAF rule group. The control fails if a web ACL does not contain any WAF rules or rule groups.",
    "title": "10 A WAFV2 web ACL should have at least one rule or rule group",
    "tags": {
      "aws_foundational_security": "true",
      "category": "Compliance",
      "foundational_security_category": "secure_network_configuration",
      "foundational_security_item_id": "waf_10",
      "plugin": "aws",
      "service": "AWS/WAF"
    },
    "documentation": "## Description\n\nThis control checks whether a WAFV2 web access control list (web ACL) contains at least one WAF rule or WAF rule group. The control fails if a web ACL does not contain any WAF rules or rule groups.\n\nA web ACL gives you fine-grained control over all of the HTTP(S) web requests that your protected resource responds to. A web ACL should contain a collection of rules and rule groups that inspect and control web requests. If a web ACL is empty, the web traffic can pass without being detected or acted upon by WAF depending on the default action.\n\n## Remediation\n\nTo add rules or rule groups to an empty WAFV2 web ACL, see [Editing a Web ACL](https://docs.aws.amazon.com/waf/latest/developerguide/web-acl-editing.html) in the AWS WAF Developer Guide.",
    "parent_control_hierarchy": [
      "aws_compliance.benchmark.foundational_security",
      "aws_compliance.benchmark.foundational_security_waf"
    ],
    "parent_control_breadcrumb": "aws_compliance.benchmark.foundational_security/aws_compliance.benchmark.foundational_security_waf",
    "executable": true,
    "problem_title": "A WAFV2 web ACL does not have any rules or rule groups"
  }
]