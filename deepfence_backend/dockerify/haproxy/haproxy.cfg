global
# cumulative maxconn for all frontends
    maxconn 500000
    nbproc 4
    cpu-map auto:1/1-4 0-3
    lua-load /usr/local/share/verify_api_key.lua
    lua-load /usr/local/share/socks5.lua
    tune.ssl.default-dh-param 2048
    log 127.0.0.1 local0

    # generated 2022-11-08, Mozilla Guideline v5.6, HAProxy 2.4.17, OpenSSL 1.1.1, intermediate configuration, no OCSP
    # https://ssl-config.mozilla.org/#server=haproxy&version=2.4.17&config=intermediate&openssl=1.1.1&ocsp=false&guideline=5.6

    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options prefer-client-ciphers no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

    ssl-default-server-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-server-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets


defaults
    mode tcp
    retries 3
    option redispatch
# maxconn per frontend
    maxconn 100000
    timeout connect 10s
    timeout server 60s
    timeout client 60s
    option dontlognull
    # option httplog
    log global
    # CLF log format
    # https://www.haproxy.com/blog/haproxy-log-customization/
    log-format "%{+Q}o %{-Q}ci - - [%trg] %r %ST %B %cp %ft %b %s %TR %Tw %Tc %Tr %Ta %fc %bc %sc %rc %sq %bq"

frontend port_80
    mode http
    bind 0.0.0.0:80 name app_80
    default_backend bk_app_80

backend bk_app_80
    mode http
    http-request redirect scheme https

frontend port_443
    mode http
    bind 0.0.0.0:443 name app_443 ssl crt /usr/local/etc/haproxy/deepfence.pem alpn h2,http/1.1

    use_backend options_method_handler if METH_OPTIONS

    acl is_api path -i -m beg /deepfence
    # acl is_api path -i -m beg /swagger
    use_backend deepfence-api-9998 if is_api

    acl is_topology path -i -m beg /topology-api
    use_backend deepfence-topology-8004 if is_topology

    acl is_mapper path -i -m beg /vulnerability-mapper-api
    use_backend vulnerability-mapper-8001 if is_mapper

    acl is_fetcher_api path -i -m beg /df-api
    use_backend fetcher-api-8006 if is_fetcher_api

    default_backend deepfence-ui-4042

backend deepfence-ui-4042
    mode http
    acl is_dev_build str("${IS_DEV_BUILD}") -m str "true"
    # CORS
    http-response set-header Access-Control-Allow-Origin "*" if is_dev_build
    http-response set-header Access-Control-Allow-Headers "*" if is_dev_build
    http-response set-header Access-Control-Expose-Headers "*" if is_dev_build
    http-response set-header Access-Control-Allow-Methods "*" if is_dev_build
    http-response set-header Access-Control-Allow-Credentials "*" if is_dev_build
    http-response set-header Access-Control-Max-Age "*" if is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "cross-origin" if is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "unsafe-none" if is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "unsafe-none" if is_dev_build
    # Security Headers
    http-response del-header Access-Control-Allow-Origin unless is_dev_build
    http-response set-header X-Frame-Options "SAMEORIGIN" unless is_dev_build
    http-response set-header X-Content-Type-Options "nosniff" unless is_dev_build
    http-response set-header X-XSS-Protection "1; mode=block" unless is_dev_build
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains" unless is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "require-corp" unless is_dev_build
    # http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    # http-response set-header Content-Security-Policy "default-src 'self'"
    # http-response set-header X-Permitted-Cross-Domain-Policies "none"
    server s1 ${UI_SERVICE_NAME}:${UI_SERVICE_PORT}

backend deepfence-api-9998
    mode http
    acl is_dev_build str("${IS_DEV_BUILD}") -m str "true"
    # CORS
    http-response set-header Access-Control-Allow-Origin "*" if is_dev_build
    http-response set-header Access-Control-Allow-Headers "*" if is_dev_build
    http-response set-header Access-Control-Expose-Headers "*" if is_dev_build
    http-response set-header Access-Control-Allow-Methods "*" if is_dev_build
    http-response set-header Access-Control-Allow-Credentials "*" if is_dev_build
    http-response set-header Access-Control-Max-Age "*" if is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "cross-origin" if is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "unsafe-none" if is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "unsafe-none" if is_dev_build
    # Security Headers
    http-response del-header Access-Control-Allow-Origin unless is_dev_build
    http-response set-header X-Frame-Options "SAMEORIGIN" unless is_dev_build
    http-response set-header X-Content-Type-Options "nosniff" unless is_dev_build
    http-response set-header X-XSS-Protection "1; mode=block" unless is_dev_build
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains" unless is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "require-corp" unless is_dev_build
    # http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    # http-response set-header Content-Security-Policy "default-src 'self'"
    # http-response set-header X-Permitted-Cross-Domain-Policies "none"
    server s1 ${API_SERVICE_HOST}:${API_SERVICE_PORT}

backend deepfence-topology-8004
    mode http
    http-request set-var(txn.deepfence_key) url_param(api_key)
    # http-request set-var(txn.mandatory_auth_verify) str(true)
    http-request lua.deepfence-key-verify
    http-request deny unless { var(txn.authorized) eq "true" } || { var(txn.authorized) eq "not_enabled" }
    acl is_dev_build str("${IS_DEV_BUILD}") -m str "true"
    # CORS
    http-response set-header Access-Control-Allow-Origin "*" if is_dev_build
    http-response set-header Access-Control-Allow-Headers "*" if is_dev_build
    http-response set-header Access-Control-Expose-Headers "*" if is_dev_build
    http-response set-header Access-Control-Allow-Methods "*" if is_dev_build
    http-response set-header Access-Control-Allow-Credentials "*" if is_dev_build
    http-response set-header Access-Control-Max-Age "*" if is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "cross-origin" if is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "unsafe-none" if is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "unsafe-none" if is_dev_build
    # Security Headers
    http-response del-header Access-Control-Allow-Origin unless is_dev_build
    http-response set-header X-Frame-Options "SAMEORIGIN" unless is_dev_build
    http-response set-header X-Content-Type-Options "nosniff" unless is_dev_build
    http-response set-header X-XSS-Protection "1; mode=block" unless is_dev_build
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains" unless is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "require-corp" unless is_dev_build
    # http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    # http-response set-header Content-Security-Policy "default-src 'self'"
    # http-response set-header X-Permitted-Cross-Domain-Policies "none"
    # http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, deepfence-key, x-hosts, cache-control"
    server s1 ${TOPOLOGY_SERVICE_HOST}:${TOPOLOGY_SERVICE_PORT}

backend vulnerability-mapper-8001
    mode http
    # http-request set-var(txn.mandatory_auth_verify) str(true)
    http-request lua.deepfence-key-verify
    http-request deny unless { var(txn.authorized) eq "true" } || { var(txn.authorized) eq "not_enabled" }
    acl is_dev_build str("${IS_DEV_BUILD}") -m str "true"
    # Security Headers
    http-response set-header X-Frame-Options "SAMEORIGIN" unless is_dev_build
    http-response set-header X-Content-Type-Options "nosniff" unless is_dev_build
    http-response set-header X-XSS-Protection "1; mode=block" unless is_dev_build
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains" unless is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "require-corp" unless is_dev_build
    server s1 ${VULNERABILITY_MAPPER_SERVICE_HOST}:${VULNERABILITY_MAPPER_SERVICE_PORT}

backend fetcher-api-8006
    mode http
    # http-request set-var(txn.mandatory_auth_verify) str(true)
    http-request lua.deepfence-key-verify
    http-request deny unless { var(txn.authorized) eq "true" } || { var(txn.authorized) eq "not_enabled" }
    acl is_dev_build str("${IS_DEV_BUILD}") -m str "true"
    # CORS
    http-response set-header Access-Control-Allow-Origin "*" if is_dev_build
    http-response set-header Access-Control-Allow-Headers "*" if is_dev_build
    http-response set-header Access-Control-Expose-Headers "*" if is_dev_build
    http-response set-header Access-Control-Allow-Methods "*" if is_dev_build
    http-response set-header Access-Control-Allow-Credentials "*" if is_dev_build
    http-response set-header Access-Control-Max-Age "*" if is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "cross-origin" if is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "unsafe-none" if is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "unsafe-none" if is_dev_build
    # Security Headers
    http-response set-header X-Frame-Options "SAMEORIGIN" unless is_dev_build
    http-response set-header X-Content-Type-Options "nosniff" unless is_dev_build
    http-response set-header X-XSS-Protection "1; mode=block" unless is_dev_build
    http-response set-header Strict-Transport-Security "max-age=31536000; includeSubDomains" unless is_dev_build
    http-response set-header Cross-Origin-Resource-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Opener-Policy "same-origin" unless is_dev_build
    http-response set-header Cross-Origin-Embedder-Policy "require-corp" unless is_dev_build
    # http-response set-header Referrer-Policy "strict-origin-when-cross-origin"
    # http-response set-header Content-Security-Policy "default-src 'self'"
    # http-response set-header X-Permitted-Cross-Domain-Policies "none"
    # http-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, deepfence-key, x-hosts, cache-control"
    server s1 ${FETCHER_SERVICE_HOST}:${FETCHER_SERVICE_PORT}

backend options_method_handler
    mode http
    # http-response won't work here as the response is generated by HAP
    acl is_dev_build str("${IS_DEV_BUILD}") -m str "true"
    http-after-response set-header Access-Control-Allow-Origin "*" if is_dev_build
    http-after-response set-header Access-Control-Allow-Headers "*" if is_dev_build
    http-after-response set-header Access-Control-Allow-Methods "GET, PUT, POST, DELETE, HEAD, OPTIONS" if is_dev_build
    # http-after-response set-header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Authorization, deepfence-key, x-hosts, cache-control"
    http-request return status 200 content-type "text/plain" string "ok"
