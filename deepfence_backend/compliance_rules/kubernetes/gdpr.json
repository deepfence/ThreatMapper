[
  {
    "test_category": "Host Configuration",
    "test_number": "1.1.1",
    "test_desc": "1.1.1 - Ensure the container host has been Hardened",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.1.2",
    "test_desc": "1.1.2 - Ensure Docker is up to date",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.1",
    "test_desc": "1.2.1 - Ensure a separate partition for containers has been created",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.2",
    "test_desc": "1.2.2 - Ensure only trusted users are allowed to control Docker daemon",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.3",
    "test_desc": "1.2.3 - Ensure auditing is configured for the Docker daemon",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.4",
    "test_desc": "1.2.4 - Ensure auditing is configured for Docker files and directories - /var/lib/docker",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.5",
    "test_desc": "1.2.5 - Ensure auditing is configured for Docker files and directories - /etc/docker",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.6",
    "test_desc": "1.2.6 - Ensure auditing is configured for Docker files and directories - docker.service",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.7",
    "test_desc": "1.2.7 - Ensure auditing is configured for Docker files and directories - docker.socket",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.8",
    "test_desc": "1.2.8 - Ensure auditing is configured for Docker files and directories - /etc/default/docker",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.9",
    "test_desc": "1.2.9 - Ensure auditing is configured for Docker files and directories - /etc/sysconfig/docker",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.10",
    "test_desc": "1.2.10 - Ensure auditing is configured for Docker files and directories - /etc/docker/daemon.json",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.11",
    "test_desc": "1.2.11 - Ensure auditing is configured for Docker files and directories - /usr/bin/containerd",
    "test_rationale": ""
  },
  {
    "test_category": "Host Configuration",
    "test_number": "1.2.12",
    "test_desc": "1.2.12 - Ensure auditing is configured for Docker files and directories - /usr/sbin/runc",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.1",
    "test_desc": "2.1 - Ensure network traffic is restricted between containers on the default bridge",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.2",
    "test_desc": "2.2 - Ensure the logging level is set to 'info'",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.3",
    "test_desc": "2.3 - Ensure Docker is allowed to make changes to iptables",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.4",
    "test_desc": "2.4 - Ensure insecure registries are not used",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.5",
    "test_desc": "2.5 - Ensure aufs storage driver is not used",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.6",
    "test_desc": "2.6 - Ensure TLS authentication for Docker daemon is configured",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.7",
    "test_desc": "2.7 - Ensure the default ulimit is configured appropriately",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.8",
    "test_desc": "2.8 - Enable user namespace support",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.9",
    "test_desc": "2.9 - Ensure the default cgroup usage has been confirmed",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.10",
    "test_desc": "2.10 - Ensure base device size is not changed until needed",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.11",
    "test_desc": "2.11 - Ensure that authorization for Docker client commands is enabled",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.12",
    "test_desc": "2.12 - Ensure centralized and remote logging is configured",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.13",
    "test_desc": "2.13 - Ensure live restore is Enabled",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.14",
    "test_desc": "2.14 - Ensure Userland Proxy is Disabled",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.15",
    "test_desc": "2.15 - Ensure that a daemon-wide custom seccomp profile is applied if appropriate",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.16",
    "test_desc": "2.16 - Ensure that experimental features are not implemented in production",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration",
    "test_number": "2.17",
    "test_desc": "2.17 - Ensure containers are restricted from acquiring new privileges",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.1",
    "test_desc": "3.1 - Ensure that docker.service file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.2",
    "test_desc": "3.2 - Ensure that docker.service file permissions are appropriately set",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.3",
    "test_desc": "3.3 - Ensure that docker.socket file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.4",
    "test_desc": "3.4 - Ensure that docker.socket file permissions are set to 644 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.5",
    "test_desc": "3.5 - Ensure that /etc/docker directory ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.6",
    "test_desc": "3.6 - Ensure that /etc/docker directory permissions are set to 755 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.7",
    "test_desc": "3.7 - Ensure that registry certificate file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.8",
    "test_desc": "3.8 - Ensure that registry certificate file permissions are set to 444 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.9",
    "test_desc": "3.9 - Ensure that TLS CA certificate file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.10",
    "test_desc": "3.10 - Ensure that TLS CA certificate file permissions are set to 444 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.11",
    "test_desc": "3.11 - Ensure that Docker server certificate file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.12",
    "test_desc": "3.12 - Ensure that Docker server certificate file permissions are set to 444 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.13",
    "test_desc": "3.13 - Ensure that Docker server certificate key file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.14",
    "test_desc": "3.14 - Ensure that Docker server certificate key file permissions are set to 400",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.15",
    "test_desc": "3.15 - Ensure that Docker socket file ownership is set to root:docker",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.16",
    "test_desc": "3.16 - Ensure that Docker socket file permissions are set to 660 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.17",
    "test_desc": "3.17 - Ensure that daemon.json file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.18",
    "test_desc": "3.18 - Ensure that daemon.json file permissions are set to 644 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.19",
    "test_desc": "3.19 - Ensure that /etc/default/docker file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.20",
    "test_desc": "3.20 - Ensure that the /etc/sysconfig/docker file ownership is set to root:root",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.21",
    "test_desc": "3.21 - Ensure that /etc/sysconfig/docker file permissions are set to 644 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Docker daemon configuration files",
    "test_number": "3.22",
    "test_desc": "3.22 - Ensure that /etc/default/docker file permissions are set to 644 or more restrictive",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.1",
    "test_desc": "4.1 - Ensure a user for the container has been created",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.2",
    "test_desc": "4.2 - Ensure that containers use only trusted base images",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.3",
    "test_desc": "4.3 - Ensure that unnecessary packages are not installed in the container",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.4",
    "test_desc": "4.4 - Ensure images are scanned and rebuilt to include security patches",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.5",
    "test_desc": "4.5 - Ensure Content trust for Docker is Enabled",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.6",
    "test_desc": "4.6 - Ensure that HEALTHCHECK instructions have been added to container images",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.7",
    "test_desc": "4.7 - Ensure update instructions are not use alone in the Dockerfile",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.8",
    "test_desc": "4.8 - Ensure setuid and setgid permissions are removed",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.9",
    "test_desc": "4.9 - Ensure that COPY is used instead of ADD in Dockerfiles",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.10",
    "test_desc": "4.10 - Ensure secrets are not stored in Dockerfiles",
    "test_rationale": ""
  },
  {
    "test_category": "Container Images and Build File",
    "test_number": "4.11",
    "test_desc": "4.11 - Ensure only verified packages are installed",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.1",
    "test_desc": "5.1 - Ensure that, if applicable, an AppArmor Profile is enabled ",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.2",
    "test_desc": "5.2 - Ensure that, if applicable, SELinux security options are set",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.3",
    "test_desc": "5.3 - Ensure Linux Kernel Capabilities are restricted within containers",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.4",
    "test_desc": "5.4 - Ensure that privileged containers are not used",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.5",
    "test_desc": "5.5 - Ensure sensitive host system directories are not mounted on containers",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.6",
    "test_desc": "5.6 - Ensure sshd is not run within containers",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.7",
    "test_desc": "5.7 - Ensure privileged ports are not mapped within containers",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.8",
    "test_desc": "5.8 - Ensure that only needed ports are open on the container",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.9",
    "test_desc": "5.9 - Ensure the host's network namespace is not shared",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.10",
    "test_desc": "5.10 - Ensure that the memory usage for containers is limited",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.11",
    "test_desc": "5.11 - Ensure CPU priority is set appropriately on the container",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.12",
    "test_desc": "5.12 - Ensure that the container's root filesystem is mounted as read only",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.13",
    "test_desc": "5.13 - Ensure that incoming container traffic is bound to a specific host interface",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.14",
    "test_desc": "5.14 - Ensure that the 'on-failure' container restart policy is set to '5'",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.15",
    "test_desc": "5.15 - Ensure the host's process namespace is not shared",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.16",
    "test_desc": "5.16 - Ensure the host's IPC namespace is not shared",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.17",
    "test_desc": "5.17 - Ensure that host devices are not directly exposed to containers",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.18",
    "test_desc": "5.18 - Ensure that the default ulimit is overwritten at runtime if needed",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.19",
    "test_desc": "5.19 - Ensure mount propagation mode is not set to shared",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.20",
    "test_desc": "5.20 - Ensure the host's UTS namespace is not shared",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.21",
    "test_desc": "5.21 - Ensure the default seccomp profile is not Disabled",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.22",
    "test_desc": "5.22 - Ensure docker exec commands are not used with privileged option",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.23",
    "test_desc": "5.23 - Ensure that docker exec commands are not used with the user=root option",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.24",
    "test_desc": "5.24 - Ensure that cgroup usage is confirmed",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.25",
    "test_desc": "5.25 - Ensure that the container is restricted from acquiring additional privileges",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.26",
    "test_desc": "5.26 - Ensure that container health is checked at runtime",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.27",
    "test_desc": "5.27 - Ensure that Docker commands always make use of the latest version of their image",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.28",
    "test_desc": "5.28 - Ensure that the PIDs cgroup limit is used",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.29",
    "test_desc": "5.29 - Ensure that Docker's default bridge 'docker0' is not used",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.30",
    "test_desc": "5.30 - Ensure that the host's user namespaces are not shared",
    "test_rationale": ""
  },
  {
    "test_category": "Container Runtime",
    "test_number": "5.31",
    "test_desc": "5.31 - Ensure that the Docker socket is not mounted inside any containers",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Security Operations",
    "test_number": "6.1",
    "test_desc": "6.1 - Ensure that image sprawl is avoided",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Security Operations",
    "test_number": "6.2",
    "test_desc": "6.2 - Ensure that container sprawl is avoided",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.1",
    "test_desc": "7.1 - Ensure swarm mode is not Enabled, if not needed",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.2",
    "test_desc": "7.2 - Ensure that the minimum number of manager nodes have been created in a swarm",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.3",
    "test_desc": "7.3 - Ensure that swarm services are bound to a specific host interface",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.4",
    "test_desc": "7.4 - Ensure that all Docker swarm overlay networks are encrypted",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.5",
    "test_desc": "7.5 - Ensure that Docker's secret management commands are used for managing secrets in a swarm cluster",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.6",
    "test_desc": "7.6 - Ensure that swarm manager is run in auto-lock mode",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.7",
    "test_desc": "7.7 - Ensure that the swarm manager auto-lock key is rotated periodically",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.8",
    "test_desc": "7.8 - Ensure that node certificates are rotated as appropriate",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.9",
    "test_desc": "7.9 - Ensure that CA certificates are rotated as appropriate",
    "test_rationale": ""
  },
  {
    "test_category": "Docker Swarm Configuration",
    "test_number": "7.10",
    "test_desc": "7.10 - Ensure that management plane traffic is separated from data plane traffic",
    "test_rationale": ""
  }
]