import React, { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { DagreGraph, formatApiDataForDagreGraph } from '../common/dagre-graph';
import {getNodeTopAttackPathsAction} from "../../actions/app-actions";

export const NodeDetailsMostExploitablePathsGraph = ({
  details
}) => {
  const {type, id} = details;
  const [data, setData] = useState(null);
  const dispatch = useDispatch();

  const loading = useSelector(state => state.getIn(['topAttackPathsForNode', 'status', 'loading']));
  const apiData = useSelector(state => state.getIn(['topAttackPathsForNode', 'data']));

  useEffect(() => {
    dispatch(getNodeTopAttackPathsAction({
      scopeId: id,
      nodeType: type
    }));
  }, [type, id]);

  useEffect(() => {
    if (!apiData || !apiData.attack_path || !apiData.attack_path.length) {
      setData(undefined);
    } else{
      setData(formatApiDataForDagreGraph(apiData));
    }
  }, [apiData]);


  return (
    <div>
      {
        !loading && data ? (
          <DagreGraph
            data={data}
            height={400}
          />
        ) : (
          <div>
            No Data Available
          </div>
        )
      }
    </div>
  );
};
