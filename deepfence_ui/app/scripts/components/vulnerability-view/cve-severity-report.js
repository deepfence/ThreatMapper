/* eslint-disable */
import React from 'react';
import {connect} from 'react-redux';
import RadialBarChart from '../common/charts/radial-bar-chart/index';
import {setSearchQuery} from '../../actions/app-actions';
import {constructGlobalSearchQuery} from '../../utils/search-utils';
import { getSeverityColor } from '../../constants/colors';

class CVESeverityReport extends React.PureComponent {
  constructor(props) {
    super(props);
    this.sectionClickHandler = this.sectionClickHandler.bind(this);
    this.getActiveStyle = this.getActiveStyle.bind(this);
  }

  getActiveStyle({type}){
    return {
      fill: getSeverityColor(type, true),
      stroke: 0,
    };
  }

  sectionClickHandler(point) {
    const {
      globalSearchQuery: existingQuery = [],
      dispatch,
    } = this.props;

    let searchQuery = [];
    if (point.type) {
      const severityParams = {
        cve_severity: point.type,
      };
      searchQuery = constructGlobalSearchQuery(existingQuery, severityParams);
    }

    if (point.cve_type) {
      const cveTypeParams = {
        cve_type: point.cve_type,
      };
      searchQuery = constructGlobalSearchQuery(searchQuery, cveTypeParams);
    }

    const globalSearchQuery = {
      searchQuery,
    };
    dispatch(setSearchQuery(globalSearchQuery));
  }

  render() {
    const {summaryStats} = this.props;
    /* eslint-disable */
    return (
      <div>
        <div className="unique-vulnerabilities">Unique Vulnerabilities</div>
        { summaryStats &&
          <RadialBarChart
           data={summaryStats}
           xFieldName={'cve_type'}
           yFieldName={'value'}
           colorFieldType={'type'}
           chartHeight={600}
           chartWidth={580}
           stacking={true}
           onSectionClick={this.sectionClickHandler}
           colorCb={({ type }) => getSeverityColor(type, false)}
           colorShadeCb={({ data }) => this.getActiveStyle(data)}
         />
        }
      </div>
    );
  }
}

function mapStateToProps(state) {
  return {
    summaryStats: state.getIn(['cve', 'severity_report_view', 'summary_stats']),
  };
}

export default connect(mapStateToProps)(CVESeverityReport);
