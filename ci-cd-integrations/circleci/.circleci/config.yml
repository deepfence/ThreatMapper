version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.8
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Make the executable
          command: |
            go build -o demo-app src/main.go
      - run:
          name: Build image
          command: |
            docker build -t $FULL_IMAGE_NAME .
          environment:
            FULL_IMAGE_NAME: "go-server:1.0"
      - run:
          name: Save image to an archive
          command: |
            mkdir images
            docker save -o images/image.tar $FULL_IMAGE_NAME
          environment:
            FULL_IMAGE_NAME: "go-server:1.0"
      - persist_to_workspace:
          root: .
          paths:
            - images

  vulnerability:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load image
          command: |
            docker load < images/image.tar
      - run:
          name: Run Deepfence Vulnerability Mapper
          command: |
            docker pull deepfenceio/deepfence_package_scanner_ce:v2
            docker run -i --rm --net=host --privileged=true -v /var/run/docker.sock:/var/run/docker.sock:rw deepfenceio/deepfence_package_scanner_ce:v2 -source "$FULL_IMAGE_NAME" -console-url=$DEEPFENCE_CONSOLE_URL -deepfence-key=$DEEPFENCE_KEY -fail-on-count=$FAIL_CVE_COUNT -fail-on-critical-count=$FAIL_CRITICAL_CVE_COUNT -fail-on-high-count=$FAIL_HIGH_CVE_COUNT -fail-on-medium-count=$FAIL_MEDIUM_CVE_COUNT -fail-on-low-count=$FAIL_LOW_CVE_COUNT -fail-on-score=$FAIL_CVE_SCORE -scan-type="base,java,python,ruby,php,nodejs,js,dotnet"
          environment:
            DEEPFENCE_KEY: ""
            DEEPFENCE_CONSOLE_URL: ""
            FAIL_CVE_COUNT: 100
            FAIL_CRITICAL_CVE_COUNT: 10
            FAIL_HIGH_CVE_COUNT: 100
            FAIL_MEDIUM_CVE_COUNT: 100
            FAIL_LOW_CVE_COUNT: 100
            FAIL_CVE_SCORE: 10
            FULL_IMAGE_NAME: "go-server:1.0"

  secret:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load image
          command: |
            docker load < images/image.tar
      - run:
          name: Run Deepfence Secret Scanner
          command: |
            docker pull deepfenceio/deepfence_secret_scanner_ce:v2
            docker run -i --rm --net=host --privileged=true -v /var/run/docker.sock:/var/run/docker.sock:rw deepfenceio/deepfence_secret_scanner_ce:v2 -image-name "$FULL_IMAGE_NAME"  -fail-on-count=$FAIL_SECRET_COUNT -fail-on-high-count=$FAIL_HIGH_SECRET_COUNT -fail-on-medium-count=$FAIL_MEDIUM_SECRET_COUNT -fail-on-low-count=$FAIL_LOW_SECRET_COUNT
          environment:
            DEEPFENCE_KEY: ""
            DEEPFENCE_CONSOLE_URL: ""
            FAIL_SECRET_COUNT: 100
            FAIL_HIGH_SECRET_COUNT: 100
            FAIL_MEDIUM_SECRET_COUNT: 100
            FAIL_LOW_SECRET_COUNT: 100
            FULL_IMAGE_NAME: "go-server:1.0"

  malware:
    docker:
      - image: cimg/base:stable
    steps:
      - attach_workspace:
          at: .
      - setup_remote_docker
      - run:
          name: Load image
          command: |
            docker load < images/image.tar
      - run:
          name: Run Deepfence Malware Scanner
          command: |
            docker pull deepfenceio/deepfence_malware_scanner_ce:v2
            docker run -i --rm --net=host --privileged=true -v /var/run/docker.sock:/var/run/docker.sock:rw deepfenceio/deepfence_malware_scanner_ce:v2 -image-name "$FULL_IMAGE_NAME"  -fail-on-count=$FAIL_MALWARE_COUNT -fail-on-high-count=$FAIL_HIGH_MALWARE_COUNT -fail-on-medium-count=$FAIL_MEDIUM_MALWARE_COUNT -fail-on-low-count=$FAIL_LOW_MALWARE_COUNT
          environment:
            DEEPFENCE_KEY: ""
            DEEPFENCE_CONSOLE_URL: ""
            FAIL_MALWARE_COUNT: 100
            FAIL_HIGH_MALWARE_COUNT: 100
            FAIL_MEDIUM_MALWARE_COUNT: 100
            FAIL_LOW_MALWARE_COUNT: 100
            FULL_IMAGE_NAME: "go-server:1.0"

workflows:
  version: 2
  build-test:
    jobs:
      - build
      - vulnerability:
          requires:
            - build
      - secret:
          requires:
            - build
      - malware:
          requires:
            - build
